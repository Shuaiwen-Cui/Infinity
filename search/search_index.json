{"config":{"lang":["en","zh"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":""},{"location":"#stay-hungry-stay-foolish","title":"\ud83d\udd2d Stay Hungry, Stay Foolish","text":"<p>Quote</p> <p>I have places to go, things to do, and people to impress.</p>"},{"location":"#foreword","title":"\ud83c\udf99\ufe0f Foreword","text":"<p>Welcome to my personal tech blog! This website serves as a roadmap for my personal study, research and development. Explore this site by clicking the navigation bar on the top or the left.</p>"},{"location":"#useful-links","title":"\ud83d\udd17 Useful Links","text":"<ul> <li> <p> Personal Website</p> <p>Shuaiwen Cui's personal website</p> <p>  Portal </p> </li> <li> <p> Linkedin Profile</p> <p>Shuaiwen Cui's LinkedIn profile</p> <p>  Portal </p> </li> <li> <p> Github</p> <p>Shuaiwen Cui's GitHub profile, hope you can star this repo if you like it</p> <p>  Portal </p> </li> <li> <p> Researchgate</p> <p>Shuaiwen Cui's ResearchGate profile</p> <p>  Portal </p> </li> <li> <p> Youtube</p> <p>Shuaiwen Cui's Youtube channel</p> <p>  Portal </p> </li> <li> <p> BiliBili</p> <p>Shuaiwen Cui's Bilibili Channel</p> <p>  Portal </p> </li> <li> <p> Roadmap</p> <p>Roadmap for everything to become a developer</p> <p>  Portal </p> </li> </ul>"},{"location":"#online-study-platforms","title":"\ud83c\udf10 Online Study Platforms","text":"<ul> <li> <p> Coursera \ud83c\udfc6</p> <p>Coursera is a very good online study platform. It provides a lot of courses for free. You can also pay for the certificate.</p> <p>  Portal </p> </li> <li> <p> edX</p> <p>edX is another very good online study platform. It provides a lot of courses for free. You can also pay for the certificate.</p> <p>  Portal </p> </li> <li> <p> Udemy</p> <p>Udemy is another very good online study platform. It provides a lot of courses for free. You can also pay for the certificate.</p> <p>  Portal </p> </li> <li> <p> O'Reilly</p> <p>O'Reilly online library.</p> <p>  Portal </p> </li> </ul>"},{"location":"#featured-posts","title":"\ud83c\udfc6 Featured Posts","text":"<ul> <li> <p> Have A Server</p> <p>How to get a cloud server.</p> <p>  Portal </p> </li> <li> <p> Tech Blog</p> <p>How to have a cool tech blog using MkDocs and Material for MkDocs.</p> <p>  Portal </p> </li> </ul> <p> @Dominic Walliman</p>"},{"location":"ACTUATION/actuation/","title":"Actuation","text":""},{"location":"ACTUATION/actuation/#links","title":"Links","text":"<ul> <li> <p> ROS Wiki</p> <p>The official ROS Wiki.</p> <p>  Portal </p> </li> <li> <p> \u53e4\u6708\u5c45</p> <p>In Chinese, Online Robotics Learning.</p> <p>  Portal </p> </li> <li> <p> \u9c7c\u9999ROS</p> <p>In Chinese, Online Robotics Learning.</p> <p>  Portal </p> </li> </ul>"},{"location":"ACTUATION/HANDSON-ROS/handson-ros/","title":"HANDSON-ROS","text":"<p>Only Chinese version is available for now.</p>"},{"location":"ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/","title":"P1 GET STARTED","text":"<p>Only Chinese version is available for now.</p>"},{"location":"ACTUATION/ROS/ros/","title":"Robotic Operating System (ROS)","text":""},{"location":"ACTUATION/ROS/ros/#links","title":"Links","text":"<ul> <li> <p> ROS Wiki</p> <p>The official ROS Wiki.</p> <p>  Portal </p> </li> <li> <p> ROS Humble</p> <p>ROS Humble Guide</p> <p>  Portal </p> </li> <li> <p> \u53e4\u6708\u5c45</p> <p>In Chinese, Online Robotics Learning.</p> <p>  Portal </p> </li> <li> <p> \u9c7c\u9999ROS</p> <p>In Chinese, Online Robotics Learning.</p> <p>  Portal </p> </li> </ul>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/DISTRIBUTION/distribution/","title":"ROS2-Humble Guide - Distribution","text":"<p>Last Updated: Jan 03, 2024</p> <p>\ud83c\udf10 Link to the original page</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/","title":"ROS2-Humble Guide - Installation","text":"<p>Last Updated: Jan 03, 2024</p> <p>\ud83c\udf10 Link to the original page</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#ubuntu","title":"Ubuntu","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#resources","title":"Resources","text":"<p>~</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#set-locale","title":"Set locale","text":"<p>Make sure you have a locale which supports UTF-8. If you are in a minimal environment (such as a docker container), the locale may be something minimal like POSIX. We test with the following settings. However, it should be fine if you\u2019re using a different UTF-8 supported locale.</p> <pre><code>locale  # check for UTF-8\n\nsudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n\nlocale  # verify settings\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#setup-sources","title":"Setup Sources","text":"<p>You will need to add the ROS 2 apt repository to your system.</p> <p>First ensure that the Ubuntu Universe repository is enabled.</p> <p><pre><code>sudo apt install software-properties-common\nsudo add-apt-repository universe\n</code></pre> Now add the ROS 2 GPG key with apt.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install curl -y\nsudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> Then add the repository to your sources list.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#install-ros-2-packages","title":"Install ROS 2 packages","text":"<p>Update your apt repository caches after setting up the repositories.</p> <p><pre><code>sudo apt update\n</code></pre> ROS 2 packages are built on frequently updated Ubuntu systems. It is always recommended that you ensure your system is up to date before installing new packages.</p> <pre><code>sudo apt upgrade\n</code></pre> <p>Desktop Install (Recommended): ROS, RViz, demos, tutorials.</p> <p><pre><code>sudo apt install ros-humble-desktop\n</code></pre> ROS-Base Install (Bare Bones): Communication libraries, message packages, command line tools. No GUI tools.</p> <p><pre><code>sudo apt install ros-humble-ros-base\n</code></pre> Development tools: Compilers and other tools to build ROS packages</p> <pre><code>sudo apt install ros-dev-tools\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#environment-setup","title":"Environment setup","text":"<p>Sourcing the setup script</p> <p>Set up your environment by sourcing the following file.</p> <pre><code># Replace \".bash\" with your shell if you're not using bash\n# Possible values are: setup.bash, setup.sh, setup.zsh\nsource /opt/ros/humble/setup.bash\n</code></pre> <p>If you want to automatically source this script you can add it to your bash session.</p> <pre><code>echo \"source /opt/ros/humble/setup.bash\" &gt;&gt; ~/.bashrc\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#try-some-examples","title":"Try some examples","text":"<p>Talker-listener</p> <p>If you installed ros-humble-desktop above you can try some examples.</p> <p>In one terminal, source the setup file and then run a C++ talker:</p> <p><pre><code>source /opt/ros/humble/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> In another terminal source the setup file and then run a Python listener:</p> <p><pre><code>source /opt/ros/humble/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> You should see the talker saying that it is Publishing messages and the listener saying I heard those messages.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#next-steps-after-installing","title":"Next steps after installing","text":"<p>~</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#using-the-ros-1-bridge","title":"Using the ROS 1 bridge","text":"<p>~</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#additional-rmw-implementations-optional","title":"Additional RMW implementations (optional)","text":"<p>~</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#troubleshooting","title":"Troubleshooting","text":"<p>~</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#uninstall","title":"Uninstall","text":"<p>If you need to uninstall ROS 2 or switch to a source-based install once you have already installed from binaries, run the following command:</p> <p><pre><code>sudo apt remove ~nros-humble-* &amp;&amp; sudo apt autoremove\n</code></pre> You may also want to remove the repository:</p> <pre><code>sudo rm /etc/apt/sources.list.d/ros2.list\nsudo apt update\nsudo apt autoremove\n# Consider upgrading for packages previously shadowed.\nsudo apt upgrade\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#windows","title":"Windows","text":"<p>skipped</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#rhel","title":"RHEL","text":"<p>skipped</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#alternatives","title":"Alternatives","text":"<p>skipped A list of alternative ways to install ROS 2 \u2013 whether it\u2019s by building from source or installing a binary.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#maintaining-source-checkout","title":"Maintaining Source Checkout","text":"<p>If you installled ROS 2 from source, you can update your source checkout according to this section. Please check the original link.</p> <p>skipped</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#testing-with-pre-release-binaries","title":"Testing with Pre-release Binaries","text":"<p>skipped</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/#dds-implementations","title":"DDS Implementations","text":"<p>By default, ROS 2 uses DDS as its middleware. It is compatible with multiple DDS or RTPS (the DDS wire protocol) vendors. There is currently support for eProsima\u2019s Fast DDS, RTI\u2019s Connext DDS, Eclipse Cyclone DDS, and GurumNetworks GurumDDS. See https://ros.org/reps/rep-2000.html for supported DDS vendors by distribution.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/","title":"ROS2-Humble Guide - Tutorial - Beginner: CLI Tools","text":"<p>Last Updated: Jan 03, 2024</p> <p>\ud83c\udf10 Link to the original page</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#i-configuring-environment","title":"I Configuring environment","text":"<p>Goal: This tutorial will show you how to prepare your ROS 2 environment.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#background","title":"Background","text":"<p>ROS 2 relies on the notion of combining workspaces using the shell environment. \u201cWorkspace\u201d is a ROS term for the location on your system where you\u2019re developing with ROS 2. The core ROS 2 workspace is called the underlay. Subsequent local workspaces are called overlays. When developing with ROS 2, you will typically have several workspaces active concurrently.</p> <p>Combining workspaces makes developing against different versions of ROS 2, or against different sets of packages, easier. It also allows the installation of several ROS 2 distributions (or \u201cdistros\u201d, e.g. Dashing and Eloquent) on the same computer and switching between them.</p> <p>This is accomplished by sourcing setup files every time you open a new shell, or by adding the source command to your shell startup script once. Without sourcing the setup files, you won\u2019t be able to access ROS 2 commands, or find or use ROS 2 packages. In other words, you won\u2019t be able to use ROS 2.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#prerequisites","title":"Prerequisites","text":"<p>Before starting these tutorials, install ROS 2 by following the instructions on the ROS 2 Installation page.</p> <p>The commands used in this tutorial assume you followed the binary packages installation guide for your operating system (Debian packages for Linux). You can still follow along if you built from source, but the path to your setup files will likely be different. You also won\u2019t be able to use the sudo apt install ros-- command (used frequently in the beginner level tutorials) if you install from source. <p>If you are using Linux or macOS, but are not already familiar with the shell, this tutorial will help.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#tasks","title":"Tasks","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#1-source-the-setup-file","title":"1 Source the setup file","text":"<p>You will need to run this command on every new shell you open to have access to the ROS 2 commands, like so:</p> LinuxmacOSWindows <pre><code># Replace \".bash\" with your shell if you're not using bash\n# Possible values are: setup.bash, setup.sh, setup.zsh\nsource /opt/ros/humble/setup.bash\n</code></pre> <pre><code>. ~/ros2_install/ros2-osx/setup.bash\n</code></pre> <pre><code>call C:\\dev\\ros2\\local_setup.bat\n</code></pre> <p>Note</p> <p>The exact command depends on where you installed ROS 2. If you\u2019re having problems, ensure the file path leads to your installation.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#2-add-sourcing-to-your-shell-startup-script","title":"2 Add sourcing to your shell startup script","text":"<p>If you don\u2019t want to have to source the setup file every time you open a new shell (skipping task 1), then you can add the command to your shell startup script:</p> LinuxmacOSWindows <pre><code>echo \"source /opt/ros/humble/setup.bash\" &gt;&gt; ~/.bashrc\n</code></pre> <pre><code>echo \"source ~/ros2_install/ros2-osx/setup.bash\" &gt;&gt; ~/.bash_profile\n</code></pre> <p>Only for PowerShell users, create a folder in \u2018My Documents\u2019 called \u2018WindowsPowerShell\u2019. Within \u2018WindowsPowerShell\u2019, create file \u2018Microsoft.PowerShell_profile.ps1\u2019. Inside the file, paste:</p> <pre><code>C:\\dev\\ros2_humble\\local_setup.ps1\n</code></pre> <p>PowerShell will request permission to run this script everytime a new shell is opened. To avoid that issue you can run:</p> <pre><code>Unblock-File C:\\dev\\ros2_humble\\local_setup.ps1\n</code></pre> <p>To undo this, remove the new \u2018Microsoft.PowerShell_profile.ps1\u2019 file.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#3-check-environment-variables","title":"3 Check Environment Variables","text":"<p>Sourcing ROS 2 setup files will set several environment variables necessary for operating ROS 2. If you ever have problems finding or using your ROS 2 packages, make sure that your environment is properly set up using the following command:</p> LinuxmacOSWindows <pre><code>printenv | grep ROS\n</code></pre> <pre><code>printenv | grep -i ROS\n</code></pre> <pre><code>set | findstr -i ROS\n</code></pre> <p>Check that variables like ROS_DISTRO and ROS_VERSION are set.</p> <p><pre><code>ROS_VERSION=2\nROS_PYTHON_VERSION=3\nROS_DISTRO=humble\n</code></pre> If the environment variables are not set correctly, return to the ROS 2 package installation section of the installation guide you followed. </p> <p>[The ROS_DOMAIN_ID variable]</p> <p>See the domain ID article for details on ROS domain IDs.</p> <p>Once you have determined a unique integer for your group of ROS 2 nodes, you can set the environment variable with the following command:</p> LinuxmacOSWindows <pre><code>export ROS_DOMAIN_ID=&lt;your_domain_id&gt;\n</code></pre> <p>To maintain this setting between shell sessions, you can add the command to your shell startup script:</p> <pre><code>echo \"export ROS_DOMAIN_ID=&lt;your_domain_id&gt;\" &gt;&gt; ~/.bashrc\n</code></pre> <pre><code>export ROS_DOMAIN_ID=&lt;your_domain_id&gt;\n</code></pre> <p>To maintain this setting between shell sessions, you can add the command to your shell startup script:</p> <pre><code>echo \"export ROS_DOMAIN_ID=&lt;your_domain_id&gt;\" &gt;&gt; ~/.bash_profile\n</code></pre> <p><pre><code>set ROS_DOMAIN_ID=&lt;your_domain_id&gt;\n</code></pre> If you want to make this permanent between shell sessions, also run:</p> <pre><code>setx ROS_DOMAIN_ID &lt;your_domain_id&gt;\n</code></pre> <p>[The ROS_LOCALHOST_ONLY variable]</p> <p>By default, ROS 2 communication is not limited to localhost. ROS_LOCALHOST_ONLY environment variable allows you to limit ROS 2 communication to localhost only. This means your ROS 2 system, and its topics, services, and actions will not be visible to other computers on the local network. Using ROS_LOCALHOST_ONLY is helpful in certain settings, such as classrooms, where multiple robots may publish to the same topic causing strange behaviors. You can set the environment variable with the following command:</p> LinuxmacOSWindows <pre><code>export ROS_LOCALHOST_ONLY=1\n</code></pre> <p>To maintain this setting between shell sessions, you can add the command to your shell startup script:</p> <pre><code>echo \"export ROS_LOCALHOST_ONLY=1\" &gt;&gt; ~/.bashrc\n</code></pre> <p><pre><code>export ROS_LOCALHOST_ONLY=1\n</code></pre> To maintain this setting between shell sessions, you can add the command to your shell startup script:</p> <pre><code>echo \"export ROS_LOCALHOST_ONLY=1\" &gt;&gt; ~/.bash_profile\n</code></pre> <p><pre><code>set ROS_LOCALHOST_ONLY=1\n</code></pre> If you want to make this permanent between shell sessions, also run:</p> <pre><code>setx ROS_LOCALHOST_ONLY 1\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#summary","title":"Summary","text":"<p>The ROS 2 development environment needs to be correctly configured before use. This can be done in two ways: either sourcing the setup files in every new shell you open, or adding the source command to your startup script.</p> <p>If you ever face any problems locating or using packages with ROS 2, the first thing you should do is check your environment variables and ensure they are set to the version and distro you intended.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#ii-using-turtlesim-ros2-and-rqt","title":"II Using turtlesim, ros2, and rqt","text":"<p>Goal: Install and use the turtlesim package and rqt tools to prepare for upcoming tutorials.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#background_1","title":"Background","text":"<p>Turtlesim is a lightweight simulator for learning ROS 2. It illustrates what ROS 2 does at the most basic level to give you an idea of what you will do with a real robot or a robot simulation later on.</p> <p>The ros2 tool is how the user manages, introspects, and interacts with a ROS system. It supports multiple commands that target different aspects of the system and its operation. One might use it to start a node, set a parameter, listen to a topic, and many more. The ros2 tool is part of the core ROS 2 installation.</p> <p>rqt is a graphical user interface (GUI) tool for ROS 2. Everything done in rqt can be done on the command line, but rqt provides a more user-friendly way to manipulate ROS 2 elements.</p> <p>This tutorial touches upon core ROS 2 concepts, like nodes, topics, and services. All of these concepts will be elaborated on in later tutorials; for now, you will simply set up the tools and get a feel for them.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#prerequisites_1","title":"Prerequisites","text":"<p>~</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#tasks_1","title":"Tasks","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#1-install-turtlesim","title":"1 Install turtlesim","text":"<p>As always, start by sourcing your setup files in a new terminal, as described in the previous tutorial.</p> <p>Install the turtlesim package for your ROS 2 distro:</p> LinuxmacOSWindows <pre><code>sudo apt update\n\nsudo apt install ros-humble-turtlesim\n</code></pre> <p>As long as the archive you installed ROS 2 from contains the ros_tutorials repository, you should already have turtlesim installed.</p> <p>As long as the archive you installed ROS 2 from contains the ros_tutorials repository, you should already have turtlesim installed.</p> <p>Check that the package is installed:</p> <p><pre><code>ros2 pkg executables turtlesim\n</code></pre> The above command should return a list of turtlesim\u2019s executables:</p> <pre><code>turtlesim draw_square\nturtlesim mimic\nturtlesim turtle_teleop_key\nturtlesim turtlesim_node\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#2-start-turtlesim","title":"2 Start turtlesim","text":"<p>To start turtlesim, enter the following command in your terminal:</p> <p><pre><code>ros2 run turtlesim turtlesim_node\n</code></pre> The simulator window should appear, with a random turtle in the center.</p> <p>In the terminal, under the command, you will see messages from the node:</p> <pre><code>[INFO] [turtlesim]: Starting turtlesim with node name /turtlesim\n[INFO] [turtlesim]: Spawning turtle [turtle1] at x=[5.544445], y=[5.544445], theta=[0.000000]\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#3-use-turtlesim","title":"3 Use turtlesim","text":"<p>Open a new terminal and source ROS 2 again.</p> <p>Now you will run a new node to control the turtle in the first node:</p> <p><pre><code>ros2 run turtlesim turtle_teleop_key\n</code></pre> At this point you should have three windows open: a terminal running turtlesim_node, a terminal running turtle_teleop_key and the turtlesim window. Arrange these windows so that you can see the turtlesim window, but also have the terminal running turtle_teleop_key active so that you can control the turtle in turtlesim.</p> <p>Use the arrow keys on your keyboard to control the turtle. It will move around the screen, using its attached \u201cpen\u201d to draw the path it followed so far.</p> <p>Note</p> <p>Pressing an arrow key will only cause the turtle to move a short distance and then stop. This is because, realistically, you wouldn\u2019t want a robot to continue carrying on an instruction if, for example, the operator lost the connection to the robot</p> <p>You can see the nodes, and their associated topics, services, and actions, using the list subcommands of the respective commands:</p> <p><pre><code>ros2 node list\nros2 topic list\nros2 service list\nros2 action list\n</code></pre> You will learn more about these concepts in the coming tutorials. Since the goal of this tutorial is only to get a general overview of turtlesim, you will use rqt to call some of the turtlesim services and interact with turtlesim_node.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#4-install-rqt","title":"4 Install rqt","text":"<p>Open a new terminal to install rqt and its plugins:</p> LinuxWindows <p>The standard archive for installing ROS 2 on macOS contains rqt and its plugins, so you should already have rqt installed.</p> <p>The standard archive for installing ROS 2 on Windows contains rqt and its plugins, so you should already have rqt installed.</p> <p>To run rqt</p> <pre><code>rqt\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#5-use-rqt","title":"5 Use rqt","text":"<p>When running rqt for the first time, the window will be blank. No worries; just select Plugins &gt; Services &gt; Service Caller from the menu bar at the top.</p> <p>Note</p> <p>It may take some time for rqt to locate all the plugins. If you click on Plugins but don\u2019t see Services or any other options, you should close rqt and enter the command rqt --force-discover in your terminal.</p> <p>Use the refresh button to the left of the Service dropdown list to ensure all the services of your turtlesim node are available.</p> <p>Click on the Service dropdown list to see turtlesim\u2019s services, and select the /spawn service.</p> <p>[Try the spawn service] Let\u2019s use rqt to call the /spawn service. You can guess from its name that /spawn will create another turtle in the turtlesim window.</p> <p>Give the new turtle a unique name, like turtle2, by double-clicking between the empty single quotes in the Expression column. You can see that this expression corresponds to the value of name and is of type string.</p> <p>Next enter some valid coordinates at which to spawn the new turtle, like x = 1.0 and y = 1.0.</p> <p>Note</p> <p>If you try to spawn a new turtle with the same name as an existing turtle, like the default turtle1, you will get an error message in the terminal running turtlesim_node:</p> <pre><code>[ERROR] [turtlesim]: A turtle named [turtle1] already exists\n</code></pre> <p>To spawn turtle2, you then need to call the service by clicking the Call button on the upper right side of the rqt window.</p> <p>If the service call was successful, you should see a new turtle (again with a random design) spawn at the coordinates you input for x and y.</p> <p>If you refresh the service list in rqt, you will also see that now there are services related to the new turtle, /turtle2/..., in addition to /turtle1/....</p> <p>[Try the set_pen service]</p> <p>Now let\u2019s give turtle1 a unique pen using the /set_pen service:</p> <p>The values for r, g and b, which are between 0 and 255, set the color of the pen turtle1 draws with, and width sets the thickness of the line.</p> <p>To have turtle1 draw with a distinct red line, change the value of r to 255, and the value of width to 5. Don\u2019t forget to call the service after updating the values.</p> <p>If you return to the terminal where turtle_teleop_key is running and press the arrow keys, you will see turtle1\u2019s pen has changed.</p> <p>You\u2019ve probably also noticed that there\u2019s no way to move turtle2. That\u2019s because there is no teleop node for turtle2.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#6-remapping","title":"6 Remapping","text":"<p>ou need a second teleop node in order to control turtle2. However, if you try to run the same command as before, you will notice that this one also controls turtle1. The way to change this behavior is by remapping the cmd_vel topic.</p> <p>In a new terminal, source ROS 2, and run:</p> <pre><code>ros2 run turtlesim turtle_teleop_key --ros-args --remap turtle1/cmd_vel:=turtle2/cmd_vel\n</code></pre> <p>Now, you can move turtle2 when this terminal is active, and turtle1 when the other terminal running turtle_teleop_key is active.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#7-close-turtlesim","title":"7 Close turtlesim","text":"<p>To stop the simulation, you can enter Ctrl + C in the turtlesim_node terminal, and q in the turtle_teleop_key terminals.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#summary_1","title":"Summary","text":"<p>Using turtlesim and rqt is a great way to learn the core concepts of ROS 2.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#iii-understanding-nodes","title":"III Understanding nodes","text":"<p>Goal: Learn about the function of nodes in ROS 2, and the tools to interact with them.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#background_2","title":"Background","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#1-the-ros-2-graph","title":"1 The ROS 2 graph","text":"<p>Over the next few tutorials, you will learn about a series of core ROS 2 concepts that make up what is referred to as the \u201cROS (2) graph\u201d.</p> <p>The ROS graph is a network of ROS 2 elements processing data together at the same time. It encompasses all executables and the connections between them if you were to map them all out and visualize them.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#2-nodes-in-ros-2","title":"2 Nodes in ROS 2","text":"<p>Each node in ROS should be responsible for a single, modular purpose, e.g. controlling the wheel motors or publishing the sensor data from a laser range-finder. Each node can send and receive data from other nodes via topics, services, actions, or parameters.</p> <p>A full robotic system is comprised of many nodes working in concert. In ROS 2, a single executable (C++ program, Python program, etc.) can contain one or more nodes.</p> <p></p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#prerequisites_2","title":"Prerequisites","text":"<p>The previous tutorial shows you how to install the turtlesim package used here.</p> <p>As always, don\u2019t forget to source ROS 2 in every new terminal you open.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#tasks_2","title":"Tasks","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#1-ros2-run","title":"1 ros2 run","text":"<p>the command <code>ros2 run</code> launches an executable from a package.</p> <p><pre><code>ros2 run &lt;package_name&gt; &lt;executable_name&gt;\n</code></pre> To run turtlesim, open a new terminal, and enter the following command:</p> <p><pre><code>ros2 run turtlesim turtlesim_node\n</code></pre> The turtlesim window will open, as you saw in the previous tutorial.</p> <p>Here, the package name is turtlesim and the executable name is turtlesim_node.</p> <p>We still don\u2019t know the node name, however. You can find node names by using ros2 node list</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#2-ros2-node-list","title":"2 ros2 node list","text":"<p>ros2 node list will show you the names of all running nodes. This is especially useful when you want to interact with a node, or when you have a system running many nodes and need to keep track of them.</p> <p>Open a new terminal while turtlesim is still running in the other one, and enter the following command:</p> <p><pre><code>ros2 node list\n</code></pre> The terminal will return the node name:</p> <p><pre><code>/turtlesim\n</code></pre> Open another new terminal and start the teleop node with the command:</p> <p><pre><code>ros2 run turtlesim turtle_teleop_key\n</code></pre> Here, we are referring to the turtlesim package again, but this time we target the executable named turtle_teleop_key.</p> <p>Return to the terminal where you ran ros2 node list and run it again. You will now see the names of two active nodes:</p> <pre><code>/turtlesim\n/turtle_teleop_key\n</code></pre> <p>[2.1 Remapping] Remapping allows you to reassign default node properties, like node name, topic names, service names, etc., to custom values. In the last tutorial, you used remapping on turtle_teleop_key to change the cmd_vel topic and target turtle2.</p> <p>Now, let\u2019s reassign the name of our /turtlesim node. In a new terminal, run the following command:</p> <p><pre><code>ros2 run turtlesim turtlesim_node --ros-args --remap __node:=my_turtle\n</code></pre> Since you\u2019re calling ros2 run on turtlesim again, another turtlesim window will open. However, now if you return to the terminal where you ran ros2 node list, and run it again, you will see three node names:</p> <pre><code>/my_turtle\n/turtlesim\n/teleop_turtle\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#3-ros2-node-info","title":"3 ros2 node info","text":"<p>Now that you know the names of your nodes, you can access more information about them with:</p> <pre><code>ros2 node info &lt;node_name&gt;\n</code></pre> <p>To examine your latest node, my_turtle, run the following command:</p> <pre><code>ros2 node info /my_turtle\n</code></pre> <p>ros2 node info returns a list of subscribers, publishers, services, and actions. i.e. the ROS graph connections that interact with that node. The output should look like this:</p> <p><pre><code>/my_turtle\n  Subscribers:\n    /parameter_events: rcl_interfaces/msg/ParameterEvent\n    /turtle1/cmd_vel: geometry_msgs/msg/Twist\n  Publishers:\n    /parameter_events: rcl_interfaces/msg/ParameterEvent\n    /rosout: rcl_interfaces/msg/Log\n    /turtle1/color_sensor: turtlesim/msg/Color\n    /turtle1/pose: turtlesim/msg/Pose\n  Service Servers:\n    /clear: std_srvs/srv/Empty\n    /kill: turtlesim/srv/Kill\n    /my_turtle/describe_parameters: rcl_interfaces/srv/DescribeParameters\n    /my_turtle/get_parameter_types: rcl_interfaces/srv/GetParameterTypes\n    /my_turtle/get_parameters: rcl_interfaces/srv/GetParameters\n    /my_turtle/list_parameters: rcl_interfaces/srv/ListParameters\n    /my_turtle/set_parameters: rcl_interfaces/srv/SetParameters\n    /my_turtle/set_parameters_atomically: rcl_interfaces/srv/SetParametersAtomically\n    /reset: std_srvs/srv/Empty\n    /spawn: turtlesim/srv/Spawn\n    /turtle1/set_pen: turtlesim/srv/SetPen\n    /turtle1/teleport_absolute: turtlesim/srv/TeleportAbsolute\n    /turtle1/teleport_relative: turtlesim/srv/TeleportRelative\n  Service Clients:\n\n  Action Servers:\n    /turtle1/rotate_absolute: turtlesim/action/RotateAbsolute\n  Action Clients:\n</code></pre> Now try running the same command on the /teleop_turtle node, and see how its connections differ from my_turtle.</p> <p>You will learn more about the ROS graph connection concepts including the message types in the upcoming tutorials.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#summary_2","title":"Summary","text":"<p>A node is a fundamental ROS 2 element that serves a single, modular purpose in a robotics system.</p> <p>In this tutorial, you utilized nodes created in the turtlesim package by running the executables turtlesim_node and turtle_teleop_key.</p> <p>You learned how to use ros2 node list to discover active node names and ros2 node info to introspect a single node. These tools are vital to understanding the flow of data in a complex, real-world robot system.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#iv-understanding-topics","title":"IV Understanding topics","text":"<p>Goal: Use rqt_graph and command line tools to introspect ROS 2 topics.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#background_3","title":"Background","text":"<p>ROS 2 breaks complex systems down into many modular nodes. Topics are a vital element of the ROS graph that act as a bus for nodes to exchange messages.</p> <p></p> <p>A node may publish data to any number of topics and simultaneously have subscriptions to any number of topics.</p> <p></p> <p>Topics are one of the main ways in which data is moved between nodes and therefore between different parts of the system.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#pre-requisites","title":"Pre-requisites","text":"<p>The previous tutorial provides some useful background information on nodes that is built upon here.</p> <p>As always, don\u2019t forget to source ROS 2 in every new terminal you open.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#tasks_3","title":"Tasks","text":"<p>1 Setup</p> <p>By now you should be comfortable starting up turtlesim.</p> <p>Open a new terminal and run:</p> <pre><code>ros2 run turtlesim turtlesim_node\n</code></pre> <p>Open another new terminal and run:</p> <p><pre><code>ros2 run turtlesim turtle_teleop_key\n</code></pre> Recall from the previous tutorial that the names of these nodes are /turtlesim and /teleop_turtle by default.</p> <p>rqt_graph</p> <p>Throughout this tutorial, we will use rqt_graph to visualize the changing nodes and topics, as well as the connections between them.</p> <p>The turtlesim tutorial tells you how to install rqt and all its plugins, including rqt_graph.</p> <p>To run rqt_graph, open a new terminal and enter the command:</p> <pre><code>rqt_graph\n</code></pre> <p>You can also open rqt_graph by opening rqt and selecting Plugins &gt; Introspection &gt; Node Graph.</p> <p>You should see the above nodes and topic, as well as two actions around the periphery of the graph (let\u2019s ignore those for now). If you hover your mouse over the topic in the center, you\u2019ll see the color highlighting like in the image above.</p> <p>The graph is depicting how the /turtlesim node and the /teleop_turtle node are communicating with each other over a topic. The /teleop_turtle node is publishing data (the keystrokes you enter to move the turtle around) to the /turtle1/cmd_vel topic, and the /turtlesim node is subscribed to that topic to receive the data.</p> <p>The highlighting feature of rqt_graph is very helpful when examining more complex systems with many nodes and topics connected in many different ways.</p> <p>rqt_graph is a graphical introspection tool. Now we\u2019ll look at some command line tools for introspecting topics.</p> <p>3 ros2 topic list</p> <p>Running the ros2 topic list command in a new terminal will return a list of all the topics currently active in the system:</p> <p><pre><code>/parameter_events\n/rosout\n/turtle1/cmd_vel\n/turtle1/color_sensor\n/turtle1/pose\n</code></pre> ros2 topic list -t will return the same list of topics, this time with the topic type appended in brackets:</p> <p><pre><code>/parameter_events [rcl_interfaces/msg/ParameterEvent]\n/rosout [rcl_interfaces/msg/Log]\n/turtle1/cmd_vel [geometry_msgs/msg/Twist]\n/turtle1/color_sensor [turtlesim/msg/Color]\n/turtle1/pose [turtlesim/msg/Pose]\n</code></pre> These attributes, particularly the type, are how nodes know they\u2019re talking about the same information as it moves over topics.</p> <p>If you\u2019re wondering where all these topics are in rqt_graph, you can uncheck all the boxes under Hide:</p> <p>For now, though, leave those options checked to avoid confusion.</p> <p>ros2 topic echo</p> <p>To see the data being published on a topic, use:</p> <pre><code>ros2 topic echo &lt;topic_name&gt;\n</code></pre> <p>Since we know that /teleop_turtle publishes data to /turtlesim over the /turtle1/cmd_vel topic, let\u2019s use echo to introspect that topic:</p> <p><pre><code>ros2 topic echo /turtle1/cmd_vel\n</code></pre> At first, this command won\u2019t return any data. That\u2019s because it\u2019s waiting for /teleop_turtle to publish something.</p> <p>Return to the terminal where turtle_teleop_key is running and use the arrows to move the turtle around. Watch the terminal where your echo is running at the same time, and you\u2019ll see position data being published for every movement you make:</p> <pre><code>linear:\n  x: 2.0\n  y: 0.0\n  z: 0.0\nangular:\n  x: 0.0\n  y: 0.0\n  z: 0.0\n  ---\n</code></pre> <p>/_ros2cli_26646 is the node created by the echo command we just ran (the number might be different). Now you can see that the publisher is publishing data over the cmd_vel topic, and two subscribers are subscribed to it.</p> <p>ros2 topic info</p> <p>Topics don\u2019t have to only be one-to-one communication; they can be one-to-many, many-to-one, or many-to-many.</p> <p>Another way to look at this is running:</p> <pre><code>ros2 topic info /turtle1/cmd_vel\n</code></pre> <p>Which will return:</p> <pre><code>Type: geometry_msgs/msg/Twist\nPublisher count: 1\nSubscription count: 2\n</code></pre> <p>6 ros2 interface show</p> <p>Nodes send data over topics using messages. Publishers and subscribers must send and receive the same type of message to communicate.</p> <p>The topic types we saw earlier after running ros2 topic list -t let us know what message type is used on each topic. Recall that the cmd_vel topic has the type:</p> <pre><code>geometry_msgs/msg/Twist\n</code></pre> <p>This means that in the package geometry_msgs there is a msg called Twist.</p> <p>Now we can run ros2 interface show  on this type to learn its details. Specifically, what structure of data the message expects. <p><pre><code>ros2 interface show geometry_msgs/msg/Twist\n</code></pre> For the message type from above it yields:</p> <pre><code># This expresses velocity in free space broken into its linear and angular parts.\n\n    Vector3  linear\n            float64 x\n            float64 y\n            float64 z\n    Vector3  angular\n            float64 x\n            float64 y\n            float64 z\n</code></pre> <p>This tells you that the /turtlesim node is expecting a message with two vectors, linear and angular, of three elements each. If you recall the data we saw /teleop_turtle passing to /turtlesim with the echo command, it\u2019s in the same structure:</p> <pre><code>linear:\n  x: 2.0\n  y: 0.0\n  z: 0.0\nangular:\n  x: 0.0\n  y: 0.0\n  z: 0.0\n  ---\n</code></pre> <p>7 ros2 topic pub</p> <p>Now that you have the message structure, you can publish data to a topic directly from the command line using:</p> <p><pre><code>ros2 topic pub &lt;topic_name&gt; &lt;msg_type&gt; '&lt;args&gt;'\n</code></pre> The '' argument is the actual data you\u2019ll pass to the topic, in the structure you just discovered in the previous section. <p>It\u2019s important to note that this argument needs to be input in YAML syntax. Input the full command like so:</p> <p><pre><code>ros2 topic pub --once /turtle1/cmd_vel geometry_msgs/msg/Twist \"{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 1.8}}\"\n</code></pre> --once is an optional argument meaning \u201cpublish one message then exit\u201d.</p> <p>You will see the following output in the terminal:</p> <p><pre><code>publisher: beginning loop\npublishing #1: geometry_msgs.msg.Twist(linear=geometry_msgs.msg.Vector3(x=2.0, y=0.0, z=0.0), angular=geometry_msgs.msg.Vector3(x=0.0, y=0.0, z=1.8))\n</code></pre> And you will see the turtle moves a quarter turn to the left.</p> <p>The turtle (and commonly the real robots which it is meant to emulate) require a steady stream of commands to operate continuously. So, to get the turtle to keep moving, you can run:</p> <p><pre><code>ros2 topic pub --rate 1 /turtle1/cmd_vel geometry_msgs/msg/Twist \"{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 1.8}}\"\n</code></pre> The difference here is the removal of the --once option and the addition of the --rate 1 option, which tells ros2 topic pub to publish the command in a steady stream at 1 Hz.</p> <p>You can refresh rqt_graph to see what\u2019s happening graphically. You will see that the ros2 topic pub ... node (/_ros2cli_30358) is publishing over the /turtle1/cmd_vel topic, which is being received by both the ros2 topic echo ... node (/_ros2cli_26646) and the /turtlesim node now.</p> <p>Finally, you can run echo on the pose topic and recheck rqt_graph:</p> <p><pre><code>ros2 topic echo /turtle1/pose\n</code></pre> You can see that the /turtlesim node is also publishing to the pose topic, which the new echo node has subscribed to.</p> <p>When publishing messages with timestamps, pub has two methods to automatically fill them out with the current time. For messages with a std_msgs/msg/Header, the header field can be set to auto to fill out the stamp field.</p> <p><pre><code>ros2 topic pub /pose geometry_msgs/msg/PoseStamped '{header: \"auto\", pose: {position: {x: 1.0, y: 2.0, z: 3.0}}}'\n</code></pre> If the message does not use a full header, but just has a field with type builtin_interfaces/msg/Time, that can be set to the value now.</p> <pre><code>ros2 topic pub /reference sensor_msgs/msg/TimeReference '{header: \"auto\", time_ref: \"now\", source: \"dumy\"}'\n</code></pre> <p>8 ros2 topic hz</p> <p>For one last introspection on this process, you can view the rate at which data is published using:</p> <p><pre><code>ros2 topic hz /turtle1/pose\n</code></pre> It will return data on the rate at which the /turtlesim node is publishing data to the pose topic.</p> <p><pre><code>average rate: 59.354\n  min: 0.005s max: 0.027s std dev: 0.00284s window: 58\n</code></pre> Recall that you set the rate of turtle1/cmd_vel to publish at a steady 1 Hz using ros2 topic pub --rate 1. If you run the above command with turtle1/cmd_vel instead of turtle1/pose, you will see an average reflecting that rate.</p> <p>9 Clean up</p> <p>At this point you\u2019ll have a lot of nodes running. Don\u2019t forget to stop them by entering Ctrl+C in each terminal.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#summary_3","title":"Summary","text":"<p>Nodes publish information over topics, which allows any number of other nodes to subscribe to and access that information. In this tutorial you examined the connections between several nodes over topics using rqt_graph and command line tools. You should now have a good idea of how data moves around a ROS 2 system.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#v-understanding-services","title":"V Understanding services","text":"<p>Goal: Learn about services in ROS 2 using command line tools.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#background_4","title":"Background","text":"<p>Services are another method of communication for nodes in the ROS graph. Services are based on a call-and-response model versus the publisher-subscriber model of topics. While topics allow nodes to subscribe to data streams and get continual updates, services only provide data when they are specifically called by a client.</p> <p></p> <p></p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#prerequisites_3","title":"Prerequisites","text":"<p>Some concepts mentioned in this tutorial, like Nodes and Topics, were covered in previous tutorials in the series.</p> <p>You will need the turtlesim package.</p> <p>As always, don\u2019t forget to source ROS 2 in every new terminal you open.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#tasks_4","title":"Tasks","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#1-setup","title":"1 Setup","text":"<p>Start up the two turtlesim nodes, /turtlesim and /teleop_turtle.</p> <p>Open a new terminal and run:</p> <pre><code>ros2 run turtlesim turtlesim_node\n</code></pre> <p>Open another terminal and run:</p> <pre><code>ros2 run turtlesim turtle_teleop_key\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#2-ros2-service-list","title":"2 ros2 service list","text":"<p>Running the ros2 service list command in a new terminal will return a list of all the services currently active in the system:</p> <p><pre><code>ros2 service list\n</code></pre> you will see the following output:</p> <p><pre><code>/clear\n/kill\n/reset\n/spawn\n/teleop_turtle/describe_parameters\n/teleop_turtle/get_parameter_types\n/teleop_turtle/get_parameters\n/teleop_turtle/list_parameters\n/teleop_turtle/set_parameters\n/teleop_turtle/set_parameters_atomically\n/turtle1/set_pen\n/turtle1/teleport_absolute\n/turtle1/teleport_relative\n/turtlesim/describe_parameters\n/turtlesim/get_parameter_types\n/turtlesim/get_parameters\n/turtlesim/list_parameters\n/turtlesim/set_parameters\n/turtlesim/set_parameters_atomically\n</code></pre> You will see that both nodes have the same six services with parameters in their names. Nearly every node in ROS 2 has these infrastructure services that parameters are built off of. There will be more about parameters in the next tutorial. In this tutorial, the parameter services will be omitted from the discussion.</p> <p>For now, let\u2019s focus on the turtlesim-specific services, /clear, /kill, /reset, /spawn, /turtle1/set_pen, /turtle1/teleport_absolute, and /turtle1/teleport_relative. You may recall interacting with some of these services using rqt in the Use turtlesim, ros2, and rqt tutorial.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#3-ros2-service-type","title":"3 ros2 service type","text":"<p>Services have types that describe how the request and response data of a service is structured. Service types are defined similarly to topic types, except service types have two parts: one message for the request and another for the response.</p> <p>To find out the type of a service, use the command:</p> <pre><code>ros2 service type &lt;service_name&gt;\n</code></pre> <p>Let\u2019s take a look at turtlesim\u2019s /clear service. In a new terminal, enter the command:</p> <pre><code>ros2 service type /clear\n</code></pre> <p>Which should return:</p> <pre><code>std_srvs/srv/Empty\n</code></pre> <p>The Empty type means the service call sends no data when making a request and receives no data when receiving a response.</p> <p>[ros2 service list -t] To see the types of all the active services at the same time, you can append the --show-types option, abbreviated as -t, to the list command:</p> <p><pre><code>ros2 service list -t\n</code></pre> which will return:</p> <pre><code>/clear [std_srvs/srv/Empty]\n/kill [turtlesim/srv/Kill]\n/reset [std_srvs/srv/Empty]\n/spawn [turtlesim/srv/Spawn]\n...\n/turtle1/set_pen [turtlesim/srv/SetPen]\n/turtle1/teleport_absolute [turtlesim/srv/TeleportAbsolute]\n/turtle1/teleport_relative [turtlesim/srv/TeleportRelative]\n...\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#4-ros2-service-find","title":"4 ros2 service find","text":"<p>If you want to find all the services of a specific type, you can use the command:</p> <p><pre><code>ros2 service find &lt;type_name&gt;\n</code></pre> For example, you can find all the Empty typed services like this:</p> <p><pre><code>ros2 service find std_srvs/srv/Empty\n</code></pre> Which will return:</p> <pre><code>/clear\n/reset\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#5-ros2-interface-show","title":"5 ros2 interface show","text":"<p>You can call services from the command line, but first you need to know the structure of the input arguments.</p> <pre><code>ros2 interface show &lt;type_name&gt;\n</code></pre> <p>Try this on the /clear service\u2019s type, Empty: <pre><code>ros2 interface show std_srvs/srv/Empty\n</code></pre></p> <p>Which will return:</p> <pre><code>---\n</code></pre> <p>The --- separates the request structure (above) from the response structure (below). But, as you learned earlier, the Empty type doesn\u2019t send or receive any data. So, naturally, its structure is blank.</p> <p>Let\u2019s introspect a service with a type that sends and receives data, like /spawn. From the results of ros2 service list -t, we know /spawn\u2019s type is turtlesim/srv/Spawn.</p> <p>To see the request and response arguments of the /spawn service, run the command:</p> <pre><code>ros2 interface show turtlesim/srv/Spawn\n</code></pre> <p>Which will return:</p> <pre><code>float32 x\nfloat32 y\nfloat32 theta\nstring name # Optional.  A unique name will be created and returned if this is empty\n---\nstring name\n</code></pre> <p>The information above the --- line tells us the arguments needed to call /spawn. x, y and theta determine the 2D pose of the spawned turtle, and name is clearly optional.</p> <p>The information below the line isn\u2019t something you need to know in this case, but it can help you understand the data type of the response you get from the call.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#6-ros2-service-call","title":"6 ros2 service call","text":"<p>Now that you know what a service type is, how to find a service\u2019s type, and how to find the structure of that type\u2019s arguments, you can call a service using:</p> <pre><code>ros2 service call &lt;service_name&gt; &lt;service_type&gt; &lt;arguments&gt;\n</code></pre> <p>The  part is optional. For example, you know that Empty typed services don\u2019t have any arguments: <p><pre><code>ros2 service call /clear std_srvs/srv/Empty\n</code></pre> This command will clear the turtlesim window of any lines your turtle has drawn.</p> <p>Now let\u2019s spawn a new turtle by calling /spawn and setting arguments. Input  in a service call from the command-line need to be in YAML syntax. <p>Enter the command:</p> <p><pre><code>ros2 service call /spawn turtlesim/srv/Spawn \"{x: 2, y: 2, theta: 0.2, name: ''}\"\n</code></pre> You will get this method-style view of what\u2019s happening, and then the service response: <pre><code>requester: making request: turtlesim.srv.Spawn_Request(x=2.0, y=2.0, theta=0.2, name='')\n\nresponse:\nturtlesim.srv.Spawn_Response(name='turtle2')\n</code></pre> Your turtlesim window will update with the newly spawned turtle right away:</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#summary_4","title":"Summary","text":"<p>Nodes can communicate using services in ROS 2. Unlike a topic - a one way communication pattern where a node publishes information that can be consumed by one or more subscribers - a service is a request/response pattern where a client makes a request to a node providing the service and the service processes the request and generates a response.</p> <p>You generally don\u2019t want to use a service for continuous calls; topics or even actions would be better suited.</p> <p>In this tutorial you used command line tools to identify, introspect, and call services.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#vi-understanding-parameters","title":"VI Understanding parameters","text":"<p>Goal: Learn how to get, set, save and reload parameters in ROS 2.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#background_5","title":"Background","text":"<p>A parameter is a configuration value of a node. You can think of parameters as node settings. A node can store parameters as integers, floats, booleans, strings, and lists. In ROS 2, each node maintains its own parameters. For more background on parameters, please see the concept document.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#prerequisites_4","title":"Prerequisites","text":"<p>This tutorial uses the turtlesim package. As always, don\u2019t forget to source ROS 2 in every new terminal you open.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#tasks_5","title":"Tasks","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#1-setup_1","title":"1 Setup","text":"<p>Start up the two turtlesim nodes, /turtlesim and /teleop_turtle.</p> <p>Open a new terminal and run:</p> <pre><code>ros2 run turtlesim turtlesim_node\n</code></pre> <p>Open another terminal and run:</p> <pre><code>ros2 run turtlesim turtle_teleop_key\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#2-ros2-param-list","title":"2 ros2 param list","text":"<p>To see the parameters belonging to your nodes, open a new terminal and enter the command: <pre><code>ros2 param list\n</code></pre></p> <p>You will see the node namespaces, /teleop_turtle and /turtlesim, followed by each node\u2019s parameters:</p> <pre><code>/teleop_turtle:\n  qos_overrides./parameter_events.publisher.depth\n  qos_overrides./parameter_events.publisher.durability\n  qos_overrides./parameter_events.publisher.history\n  qos_overrides./parameter_events.publisher.reliability\n  scale_angular\n  scale_linear\n  use_sim_time\n/turtlesim:\n  background_b\n  background_g\n  background_r\n  qos_overrides./parameter_events.publisher.depth\n  qos_overrides./parameter_events.publisher.durability\n  qos_overrides./parameter_events.publisher.history\n  qos_overrides./parameter_events.publisher.reliability\n  use_sim_time\n</code></pre> <p>Every node has the parameter use_sim_time; it\u2019s not unique to turtlesim.</p> <p>Based on their names, it looks like /turtlesim\u2019s parameters determine the background color of the turtlesim window using RGB color values.</p> <p>To determine a parameter\u2019s type, you can use ros2 param get.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#3-ros2-param-get","title":"3 ros2 param get","text":"<p>To display the type and current value of a parameter, use the command: <pre><code>ros2 param get &lt;node_name&gt; &lt;parameter_name&gt;\n</code></pre> Let\u2019s find out the current value of /turtlesim\u2019s parameter background_g: <pre><code>ros2 param get /turtlesim background_g\n</code></pre> Which will return the value: <pre><code>Integer value is: 86\n</code></pre> Now you know background_g holds an integer value.</p> <p>If you run the same command on background_r and background_b, you will get the values 69 and 255, respectively.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#4-ros2-param-set","title":"4 ros2 param set","text":"<p>To change a parameter\u2019s value at runtime, use the command: <pre><code>ros2 param set &lt;node_name&gt; &lt;parameter_name&gt; &lt;value&gt;\n</code></pre> Let\u2019s change /turtlesim\u2019s background color: <pre><code>ros2 param set /turtlesim background_r 150\n</code></pre> Your terminal should return the message: <pre><code>Set parameter successful\n</code></pre> And the background of your turtlesim window should change colors</p> <p>Setting parameters with the set command will only change them in your current session, not permanently. However, you can save your settings and reload them the next time you start a node.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#5-ros2-param-dump","title":"5 ros2 param dump","text":"<p>You can view all of a node\u2019s current parameter values by using the command: <pre><code>ros2 param dump &lt;node_name&gt;\n</code></pre></p> <p>The command prints to the standard output (stdout) by default but you can also redirect the parameter values into a file to save them for later. To save your current configuration of /turtlesim\u2019s parameters into the file turtlesim.yaml, enter the command:</p> <pre><code>ros2 param dump /turtlesim &gt; turtlesim.yaml\n</code></pre> <p>You will find a new file in the current working directory your shell is running in. If you open this file, you\u2019ll see the following content:</p> <pre><code>/turtlesim:\n  ros__parameters:\n    background_b: 255\n    background_g: 86\n    background_r: 150\n    qos_overrides:\n      /parameter_events:\n        publisher:\n          depth: 1000\n          durability: volatile\n          history: keep_last\n          reliability: reliable\n    use_sim_time: false\n</code></pre> <p>Dumping parameters comes in handy if you want to reload the node with the same parameters in the future.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#6-ros2-param-load","title":"6 ros2 param load","text":"<p>You can load parameters from a file to a currently running node using the command: <pre><code>ros2 param load &lt;node_name&gt; &lt;parameter_file&gt;\n</code></pre></p> <p>To load the turtlesim.yaml file generated with ros2 param dump into /turtlesim node\u2019s parameters, enter the command:</p> <pre><code>ros2 param load /turtlesim turtlesim.yaml\n</code></pre> <p>Your terminal will return the message:</p> <pre><code>Set parameter background_b successful\nSet parameter background_g successful\nSet parameter background_r successful\nSet parameter qos_overrides./parameter_events.publisher.depth failed: parameter 'qos_overrides./parameter_events.publisher.depth' cannot be set because it is read-only\nSet parameter qos_overrides./parameter_events.publisher.durability failed: parameter 'qos_overrides./parameter_events.publisher.durability' cannot be set because it is read-only\nSet parameter qos_overrides./parameter_events.publisher.history failed: parameter 'qos_overrides./parameter_events.publisher.history' cannot be set because it is read-only\nSet parameter qos_overrides./parameter_events.publisher.reliability failed: parameter 'qos_overrides./parameter_events.publisher.reliability' cannot be set because it is read-only\nSet parameter use_sim_time successful\n</code></pre> <p>Note</p> <p>Read-only parameters can only be modified at startup and not afterwards, that is why there are some warnings for the \u201cqos_overrides\u201d parameters.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#7-load-parameters-on-node-startup","title":"7 Load parameters on node startup","text":"<p>To start the same node using your saved parameter values, use: <pre><code>ros2 run &lt;package_name&gt; &lt;executable_name&gt; --ros-args --params-file &lt;file_name&gt;\n</code></pre></p> <p>This is the same command you always use to start turtlesim, with the added flags --ros-args and --params-file, followed by the file you want to load.</p> <p>Stop your running turtlesim node, and try reloading it with your saved parameters, using:</p> <pre><code>ros2 run turtlesim turtlesim_node --ros-args --params-file turtlesim.yaml\n</code></pre> <p>The turtlesim window should appear as usual, but with the purple background you set earlier.</p> <p>Note</p> <p>When a parameter file is used at node startup, all parameters, including the read-only ones, will be updated.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#summary_5","title":"Summary","text":"<p>Nodes have parameters to define their default configuration values. You can get and set parameter values from the command line. You can also save the parameter settings to a file to reload them in a future session.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#vii-understanding-actions","title":"VII Understanding actions","text":"<p>Goal: Introspect actions in ROS 2.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#background_6","title":"Background","text":"<p>Actions are one of the communication types in ROS 2 and are intended for long running tasks. They consist of three parts: a goal, feedback, and a result.</p> <p>Actions are built on topics and services. Their functionality is similar to services, except actions can be canceled. They also provide steady feedback, as opposed to services which return a single response.</p> <p>Actions use a client-server model, similar to the publisher-subscriber model (described in the topics tutorial). An \u201caction client\u201d node sends a goal to an \u201caction server\u201d node that acknowledges the goal and returns a stream of feedback and a result.</p> <p></p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#prerequisites_5","title":"Prerequisites","text":"<p>This tutorial builds off concepts, like nodes and topics, covered in previous tutorials.</p> <p>This tutorial uses the turtlesim package.</p> <p>As always, don\u2019t forget to source ROS 2 in every new terminal you open.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#tasks_6","title":"Tasks","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#1-setup_2","title":"1 Setup","text":"<p>Start up the two turtlesim nodes, /turtlesim and /teleop_turtle.</p> <p>Open a new terminal and run:</p> <pre><code>ros2 run turtlesim turtlesim_node\n</code></pre> <p>Open another terminal and run:</p> <pre><code>ros2 run turtlesim turtle_teleop_key\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#2-use-actions","title":"2 Use actions","text":"<p>When you launch the /teleop_turtle node, you will see the following message in your terminal:</p> <pre><code>Use arrow keys to move the turtle.\nUse G|B|V|C|D|E|R|T keys to rotate to absolute orientations. 'F' to cancel a rotation.\n</code></pre> <p>Let\u2019s focus on the second line, which corresponds to an action. (The first instruction corresponds to the \u201ccmd_vel\u201d topic, discussed previously in the topics tutorial.)</p> <p>Notice that the letter keys G|B|V|C|D|E|R|T form a \u201cbox\u201d around the F key on a US QWERTY keyboard (if you are not using a QWERTY keyboard, see this link to follow along). Each key\u2019s position around F corresponds to that orientation in turtlesim. For example, the E will rotate the turtle\u2019s orientation to the upper left corner.</p> <p>Pay attention to the terminal where the /turtlesim node is running. Each time you press one of these keys, you are sending a goal to an action server that is part of the /turtlesim node. The goal is to rotate the turtle to face a particular direction. A message relaying the result of the goal should display once the turtle completes its rotation:</p> <pre><code>[INFO] [turtlesim]: Rotation goal completed successfully\n</code></pre> <p>The <code>F</code> key will cancel a goal mid-execution.</p> <p>Try pressing the <code>C</code> key, and then pressing the <code>F</code> key before the turtle can complete its rotation. In the terminal where the /turtlesim node is running, you will see the message:</p> <pre><code>[INFO] [turtlesim]: Rotation goal canceled\n</code></pre> <p>Not only can the client-side (your input in the teleop) stop a goal, but the server-side (the <code>/turtlesim</code> node) can as well. When the server-side chooses to stop processing a goal, it is said to \u201cabort\u201d the goal.</p> <p>Try hitting the <code>D</code> key, then the <code>G</code> key before the first rotation can complete. In the terminal where the <code>/turtlesim</code> node is running, you will see the message:</p> <pre><code>[WARN] [turtlesim]: Rotation goal received before a previous goal finished. Aborting previous goal\n</code></pre> <p>This action server chose to abort the first goal because it got a new one. It could have chosen something else, like reject the new goal or execute the second goal after the first one finished. Don\u2019t assume every action server will choose to abort the current goal when it gets a new one.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#3-ros2-node-info_1","title":"3 ros2 node info","text":"<p>To see the list of actions a node provides, <code>/turtlesim</code> in this case, open a new terminal and run the command:</p> <pre><code>ros2 node info /turtlesim\n</code></pre> <p>Which will return a list of <code>/turtlesim</code>\u2019s subscribers, publishers, services, action servers and action clients:</p> <pre><code>/turtlesim\n  Subscribers:\n    /parameter_events: rcl_interfaces/msg/ParameterEvent\n    /turtle1/cmd_vel: geometry_msgs/msg/Twist\n  Publishers:\n    /parameter_events: rcl_interfaces/msg/ParameterEvent\n    /rosout: rcl_interfaces/msg/Log\n    /turtle1/color_sensor: turtlesim/msg/Color\n    /turtle1/pose: turtlesim/msg/Pose\n  Service Servers:\n    /clear: std_srvs/srv/Empty\n    /kill: turtlesim/srv/Kill\n    /reset: std_srvs/srv/Empty\n    /spawn: turtlesim/srv/Spawn\n    /turtle1/set_pen: turtlesim/srv/SetPen\n    /turtle1/teleport_absolute: turtlesim/srv/TeleportAbsolute\n    /turtle1/teleport_relative: turtlesim/srv/TeleportRelative\n    /turtlesim/describe_parameters: rcl_interfaces/srv/DescribeParameters\n    /turtlesim/get_parameter_types: rcl_interfaces/srv/GetParameterTypes\n    /turtlesim/get_parameters: rcl_interfaces/srv/GetParameters\n    /turtlesim/list_parameters: rcl_interfaces/srv/ListParameters\n    /turtlesim/set_parameters: rcl_interfaces/srv/SetParameters\n    /turtlesim/set_parameters_atomically: rcl_interfaces/srv/SetParametersAtomically\n  Service Clients:\n\n  Action Servers:\n    /turtle1/rotate_absolute: turtlesim/action/RotateAbsolute\n  Action Clients:\n</code></pre> <p>Notice that the <code>/turtle1/rotate_absolute</code> action for <code>/turtlesim</code> is under <code>Action Servers</code>. This means <code>/turtlesim</code> responds to and provides feedback for the <code>/turtle1/rotate_absolute</code> action.</p> <p>The <code>/teleop_turtle</code> node has the name <code>/turtle1/rotate_absolute</code> under <code>Action Clients</code> meaning that it sends goals for that action name. To see that, run:</p> <pre><code>ros2 node info /teleop_turtle\n</code></pre> <p>Which will return:</p> <pre><code>/teleop_turtle\n  Subscribers:\n    /parameter_events: rcl_interfaces/msg/ParameterEvent\n  Publishers:\n    /parameter_events: rcl_interfaces/msg/ParameterEvent\n    /rosout: rcl_interfaces/msg/Log\n    /turtle1/cmd_vel: geometry_msgs/msg/Twist\n  Service Servers:\n    /teleop_turtle/describe_parameters: rcl_interfaces/srv/DescribeParameters\n    /teleop_turtle/get_parameter_types: rcl_interfaces/srv/GetParameterTypes\n    /teleop_turtle/get_parameters: rcl_interfaces/srv/GetParameters\n    /teleop_turtle/list_parameters: rcl_interfaces/srv/ListParameters\n    /teleop_turtle/set_parameters: rcl_interfaces/srv/SetParameters\n    /teleop_turtle/set_parameters_atomically: rcl_interfaces/srv/SetParametersAtomically\n  Service Clients:\n\n  Action Servers:\n\n  Action Clients:\n    /turtle1/rotate_absolute: turtlesim/action/RotateAbsolute\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#4-ros2-action-list","title":"4 ros2 action list","text":"<p>To identify all the actions in the ROS graph, run the command: <pre><code>ros2 action list\n</code></pre></p> <p>Which will return:</p> <pre><code>/turtle1/rotate_absolute\n</code></pre> <p>This is the only action in the ROS graph right now. It controls the turtle\u2019s rotation, as you saw earlier. You also already know that there is one action client (part of /teleop_turtle) and one action server (part of /turtlesim) for this action from using the ros2 node info  command. <p>[ros2 action list -t]</p> <p>Actions have types, similar to topics and services. To find /turtle1/rotate_absolute\u2019s type, run the command:</p> <pre><code>ros2 action list -t\n</code></pre> <p>Which will return:</p> <pre><code>/turtle1/rotate_absolute [turtlesim/action/RotateAbsolute]\n</code></pre> <p>In brackets to the right of each action name (in this case only /turtle1/rotate_absolute) is the action type, turtlesim/action/RotateAbsolute. You will need this when you want to execute an action from the command line or from code.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#5-ros2-action-info","title":"5 ros2 action info","text":"<p>You can further introspect the <code>/turtle1/rotate_absolute</code> action with the command:</p> <pre><code>ros2 action info /turtle1/rotate_absolute\n</code></pre> <p>Which will return</p> <pre><code>Action: /turtle1/rotate_absolute\nAction clients: 1\n    /teleop_turtle\nAction servers: 1\n    /turtlesim\n</code></pre> <p>This tells us what we learned earlier from running <code>ros2 node info</code> on each node: The <code>/teleop_turtle</code> node has an action client and the <code>/turtlesim</code> node has an action server for the <code>/turtle1/rotate_absolute</code> action.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#6-ros2-interface-show","title":"6 ros2 interface show","text":"<p>One more piece of information you will need before sending or executing an action goal yourself is the structure of the action type.</p> <p>Recall that you identified <code>/turtle1/rotate_absolute</code>\u2019s type when running the command <code>ros2 action list -t</code>. Enter the following command with the action type in your terminal:</p> <pre><code>ros2 interface show turtlesim/action/RotateAbsolute\n</code></pre> <p>Which will return:</p> <pre><code>The desired heading in radians\nfloat32 theta\n---\nThe angular displacement in radians to the starting position\nfloat32 delta\n---\nThe remaining rotation in radians\nfloat32 remaining\n</code></pre> <p>The section of this message above the first <code>---</code> is the structure (data type and name) of the goal request. The next section is the structure of the result. The last section is the structure of the feedback.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#7-ros2-action-send_goal","title":"7 ros2 action send_goal","text":"<p>Now let\u2019s send an action goal from the command line with the following syntax:</p> <pre><code>ros2 action send_goal &lt;action_name&gt; &lt;action_type&gt; &lt;values&gt;\n</code></pre> <p> need to be in YAML format. <p>Keep an eye on the turtlesim window, and enter the following command into your terminal:</p> <pre><code>ros2 action send_goal /turtle1/rotate_absolute turtlesim/action/RotateAbsolute \"{theta: 1.57}\"\n</code></pre> <p>You should see the turtle rotating, as well as the following message in your terminal: <pre><code>Waiting for an action server to become available...\nSending goal:\n   theta: 1.57\n\nGoal accepted with ID: f8db8f44410849eaa93d3feb747dd444\n\nResult:\n  delta: -1.568000316619873\n\nGoal finished with status: SUCCEEDED\n</code></pre></p> <p>All goals have a unique ID, shown in the return message. You can also see the result, a field with the name delta, which is the displacement to the starting position.</p> <p>To see the feedback of this goal, add --feedback to the ros2 action send_goal command:</p> <pre><code>ros2 action send_goal /turtle1/rotate_absolute turtlesim/action/RotateAbsolute \"{theta: -1.57}\" --feedback\n</code></pre> <p>Your terminal will return the message:</p> <pre><code>Sending goal:\n   theta: -1.57\n\nGoal accepted with ID: e6092c831f994afda92f0086f220da27\n\nFeedback:\n  remaining: -3.1268222332000732\n\nFeedback:\n  remaining: -3.1108222007751465\n\n\u2026\n\nResult:\n  delta: 3.1200008392333984\n\nGoal finished with status: SUCCEEDED\n</code></pre> <p>You will continue to receive feedback, the remaining radians, until the goal is complete.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#summary_6","title":"Summary","text":"<p>Actions are like services that allow you to execute long running tasks, provide regular feedback, and are cancelable.</p> <p>A robot system would likely use actions for navigation. An action goal could tell a robot to travel to a position. While the robot navigates to the position, it can send updates along the way (i.e. feedback), and then a final result message once it\u2019s reached its destination.</p> <p>Turtlesim has an action server that action clients can send goals to for rotating turtles. In this tutorial, you introspected that action, <code>/turtle1/rotate_absolute</code>, to get a better idea of what actions are and how they work.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#viii-using-rqt_console-to-view-logs","title":"VIII Using rqt_console to view logs","text":"<p>Goal: Get to know rqt_console, a tool for introspecting log messages.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#background_7","title":"Background","text":"<p><code>rqt_console</code> is a GUI tool used to introspect log messages in ROS 2. Typically, log messages show up in your terminal. With <code>rqt_console</code>, you can collect those messages over time, view them closely and in a more organized manner, filter them, save them and even reload the saved files to introspect at a different time.</p> <p>Nodes use logs to output messages concerning events and status in a variety of ways. Their content is usually informational, for the sake of the user.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#prerequisites_6","title":"Prerequisites","text":"<p>You will need rqt_console and turtlesim installed.</p> <p>As always, don\u2019t forget to source ROS 2 in every new terminal you open.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#tasks_7","title":"Tasks","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#1-setup_3","title":"1 Setup","text":"<p>Start <code>rqt_console</code> in a new terminal with the following command:</p> <pre><code>ros2 run rqt_console rqt_console\n</code></pre> <p>The <code>rqt_console</code> window will open:</p> <p></p> <p>The first section of the console is where log messages from your system will display.</p> <p>In the middle you have the option to filter messages by excluding severity levels. You can also add more exclusion filters using the plus-sign button to the right.</p> <p>The bottom section is for highlighting messages that include a string you input. You can add more filters to this section as well.</p> <p>Now start <code>turtlesim</code> in a new terminal with the following command:</p> <pre><code>ros2 run turtlesim turtlesim_node\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#2-messages-on-rqt_console","title":"2 Messages on rqt_console","text":"<p>To produce log messages for <code>rqt_console</code> to display, let\u2019s have the turtle run into the wall. In a new terminal, enter the <code>ros2 topic pub</code> command (discussed in detail in the topics tutorial) below:</p> <pre><code>ros2 topic pub -r 1 /turtle1/cmd_vel geometry_msgs/msg/Twist \"{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0,y: 0.0,z: 0.0}}\"\n</code></pre> <p>Since the above command is publishing the topic at a steady rate, the turtle is continuously running into the wall. In <code>rqt_console</code> you will see the same message with the <code>Warn</code> severity level displayed over and over, like so:</p> <p></p> <p>Press Ctrl+C in the terminal where you ran the ros2 topic pub command to stop your turtle from running into the wall.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#3-logger-levels","title":"3 Logger levels","text":"<p>ROS 2\u2019s logger levels are ordered by severity:</p> <pre><code>Fatal\nError\nWarn\nInfo\nDebug\n</code></pre> <p>There is no exact standard for what each level indicates, but it\u2019s safe to assume that:</p> <ul> <li> <p>Fatal messages indicate the system is going to terminate to try to protect itself from detriment.</p> </li> <li> <p>Error messages indicate significant issues that won\u2019t necessarily damage the system, but are preventing it from functioning properly.</p> </li> <li> <p>Warn messages indicate unexpected activity or non-ideal results that might represent a deeper issue, but don\u2019t harm functionality outright.</p> </li> <li> <p>Info messages indicate event and status updates that serve as a visual verification that the system is running as expected.</p> </li> <li> <p>Debug messages detail the entire step-by-step process of the system execution.</p> </li> </ul> <p>The default level is Info. You will only see messages of the default severity level and more-severe levels.</p> <p>Normally, only Debug messages are hidden because they\u2019re the only level less severe than Info. For example, if you set the default level to Warn, you would only see messages of severity Warn, Error, and Fatal.</p> <p>[Set the default logger level]</p> <p>You can set the default logger level when you first run the <code>/turtlesim</code> node using remapping. Enter the following command in your terminal:</p> <pre><code>ros2 run turtlesim turtlesim_node --ros-args --log-level WARN\n</code></pre> <p>Now you won\u2019t see the initial Info level messages that came up in the console last time you started turtlesim. That\u2019s because Info messages are lower priority than the new default severity, Warn.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#summary_7","title":"Summary","text":"<p><code>rqt_console</code> can be very helpful if you need to closely examine the log messages from your system. You might want to examine log messages for any number of reasons, usually to find out where something went wrong and the series of events leading up to that.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#ix-launching-nodes","title":"IX Launching nodes","text":"<p>Goal: Use a command line tool to launch multiple nodes at once.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#background_8","title":"Background","text":"<p>In most of the introductory tutorials, you have been opening new terminals for every new node you run. As you create more complex systems with more and more nodes running simultaneously, opening terminals and reentering configuration details becomes tedious.</p> <p>Launch files allow you to start up and configure a number of executables containing ROS 2 nodes simultaneously.</p> <p>Running a single launch file with the <code>ros2 launch</code>\u00b7` command will start up your entire system - all nodes and their configurations - at once.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#prerequisites_7","title":"Prerequisites","text":"<p>Before starting these tutorials, install ROS 2 by following the instructions on the ROS 2 Installation page.</p> <p>The commands used in this tutorial assume you followed the binary packages installation guide for your operating system (Debian packages for Linux). You can still follow along if you built from source, but the path to your setup files will likely be different. You also won\u2019t be able to use the <code>sudo apt install ros-&lt;distro&gt;-&lt;package&gt;</code> command (used frequently in the beginner level tutorials) if you install from source.</p> <p>If you are using Linux and are not already familiar with the shell, this tutorial will help.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#tasks_8","title":"Tasks","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#running-a-launch-file","title":"Running a Launch File","text":"<p>Open a new terminal and run:</p> <pre><code>ros2 launch turtlesim multisim.launch.py\n</code></pre> <p>This command will run the following launch file:</p> <pre><code># turtlesim/launch/multisim.launch.py\n\nfrom launch import LaunchDescription\nimport launch_ros.actions\n\ndef generate_launch_description():\n    return LaunchDescription([\n        launch_ros.actions.Node(\n            namespace= \"turtlesim1\", package='turtlesim', executable='turtlesim_node', output='screen'),\n        launch_ros.actions.Node(\n            namespace= \"turtlesim2\", package='turtlesim', executable='turtlesim_node', output='screen'),\n    ])\n</code></pre> <p>Note</p> <p>The launch file above is written in Python, but you can also use XML and YAML to create launch files. You can see a comparison of these different ROS 2 launch formats in Using Python, XML, and YAML for ROS 2 Launch Files.</p> <p>This will run two turtlesim nodes</p> <p>For now, don\u2019t worry about the contents of this launch file. You can find more information on ROS 2 launch in the ROS 2 launch tutorials.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#optional-control-the-turtlesim-nodes","title":"(Optional) Control the Turtlesim Nodes\uf0c1","text":"<p>Now that these nodes are running, you can control them like any other ROS 2 nodes. For example, you can make the turtles drive in opposite directions by opening up two additional terminals and running the following commands:</p> <p>In the second terminal:</p> <pre><code>ros2 topic pub  /turtlesim1/turtle1/cmd_vel geometry_msgs/msg/Twist \"{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 1.8}}\"\n</code></pre> <p>In the third terminal:</p> <pre><code>ros2 topic pub  /turtlesim2/turtle1/cmd_vel geometry_msgs/msg/Twist \"{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: -1.8}}\"\n</code></pre> <p>After running these commands, you should see something like the following:</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#summary_8","title":"Summary","text":"<p>The significance of what you\u2019ve done so far is that you\u2019ve run two turtlesim nodes with one command. Once you learn to write your own launch files, you\u2019ll be able to run multiple nodes - and set up their configuration - in a similar way, with the ros2 launch command.</p> <p>For more tutorials on ROS 2 launch files, see the main launch file tutorial page.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#x-recording-and-playing-back-data","title":"X Recording and playing back data","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#background_9","title":"Background","text":"<p><code>ros2 bag</code> is a command line tool for recording data published on topics in your system. It accumulates the data passed on any number of topics and saves it in a database. You can then replay the data to reproduce the results of your tests and experiments. Recording topics is also a great way to share your work and allow others to recreate it.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#prerequisites_8","title":"Prerequisites","text":"<p>You should have ros2 bag installed as a part of your regular ROS 2 setup.</p> <p>If you need to install ROS 2, see the Installation instructions.</p> <p>This tutorial talks about concepts covered in previous tutorials, like nodes and topics. It also uses the turtlesim package.</p> <p>As always, don\u2019t forget to source ROS 2 in every new terminal you open.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#tasks_9","title":"Tasks","text":""},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#1-setup_4","title":"1 Setup","text":"<p>You\u2019ll be recording your keyboard input in the turtlesim system to save and replay later on, so begin by starting up the <code>/turtlesim</code> and <code>/teleop_turtle</code> nodes.</p> <p>Open a new terminal and run:</p> <pre><code>ros2 run turtlesim turtlesim_node\n</code></pre> <p>Open another terminal and run:</p> <pre><code>ros2 run turtlesim turtle_teleop_key\n</code></pre> <p>Let\u2019s also make a new directory to store our saved recordings, just as good practice:</p> Linux <pre><code>mkdir bag_files\ncd bag_files\n</code></pre> <p>=== \u201cMacOS\u201d</p> <pre><code>```bash\nmkdir bag_files\ncd bag_files\n```\n</code></pre> <p>=== \u201cWindows\u201d</p> <pre><code>```bash\nmd bag_files\ncd bag_files\n```\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#2-choose-a-topic","title":"2 Choose a topic","text":"<p><code>ros2 bag</code> can only record data from published messages in topics. To see the list of your system\u2019s topics, open a new terminal and run the command:</p> <pre><code>ros2 topic list\n</code></pre> <p>Which will return:</p> <pre><code>/parameter_events\n/rosout\n/turtle1/cmd_vel\n/turtle1/color_sensor\n/turtle1/pose\n</code></pre> <p>In the topics tutorial, you learned that the <code>/turtle_teleop</code> node publishes commands on the <code>/turtle1/cmd_vel</code> topic to make the turtle move in turtlesim.</p> <p>To see the data that <code>/turtle1/cmd_vel</code> is publishing, run the command:</p> <pre><code>ros2 topic echo /turtle1/cmd_vel\n</code></pre> <p>Nothing will show up at first because no data is being published by the teleop. Return to the terminal where you ran the teleop and select it so it\u2019s active. Use the arrow keys to move the turtle around, and you will see data being published on the terminal running <code>ros2 topic echo</code>.</p> <pre><code>linear:\n  x: 2.0\n  y: 0.0\n  z: 0.0\nangular:\n  x: 0.0\n  y: 0.0\n  z: 0.0\n  ---\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#3-ros2-bag-record","title":"3 ros2 bag record","text":"<p>[Record a single topic] To record the data published to a topic use the command syntax:</p> <pre><code>ros2 bag record &lt;topic_name&gt;\n</code></pre> <p>Before running this command on your chosen topic, open a new terminal and move into the bag_files directory you created earlier, because the rosbag file will save in the directory where you run it.</p> <p>Run the command:</p> <pre><code>ros2 bag record /turtle1/cmd_vel\n</code></pre> <p>You will see the following messages in the terminal (the date and time will be different):</p> <pre><code>[INFO] [rosbag2_storage]: Opened database 'rosbag2_2019_10_11-05_18_45'.\n[INFO] [rosbag2_transport]: Listening for topics...\n[INFO] [rosbag2_transport]: Subscribed to topic '/turtle1/cmd_vel'\n[INFO] [rosbag2_transport]: All requested topics are subscribed. Stopping discovery...\n</code></pre> <p>Now <code>ros2 bag</code> is recording the data published on the <code>/turtle1/cmd_vel</code> topic. Return to the teleop terminal and move the turtle around again. The movements don\u2019t matter, but try to make a recognizable pattern to see when you replay the data later.</p> <p>Press <code>Ctrl+C</code> to stop recording.</p> <p>The data will be accumulated in a new bag directory with a name in the pattern of <code>rosbag2_year_month_day-hour_minute_second</code>. This directory will contain a <code>metadata.yaml</code> along with the bag file in the recorded format.</p> <p>[Record multiple topics] You can also record multiple topics, as well as change the name of the file ros2 bag saves to.</p> <p>Run the following command:</p> <pre><code>ros2 bag record -o subset /turtle1/cmd_vel /turtle1/pose\n</code></pre> <p>The <code>-o</code> option allows you to choose a unique name for your bag file. The following string, in this case subset, is the file name.</p> <p>To record more than one topic at a time, simply list each topic separated by a space.</p> <p>You will see the following message, confirming that both topics are being recorded.</p> <pre><code>[INFO] [rosbag2_storage]: Opened database 'subset'.\n[INFO] [rosbag2_transport]: Listening for topics...\n[INFO] [rosbag2_transport]: Subscribed to topic '/turtle1/cmd_vel'\n[INFO] [rosbag2_transport]: Subscribed to topic '/turtle1/pose'\n[INFO] [rosbag2_transport]: All requested topics are subscribed. Stopping discovery...\n</code></pre> <p>You can move the turtle around and press <code>Ctrl+C</code> when you\u2019re finished.</p> <p>Note</p> <p>There is another option you can add to the command, <code>-a</code>, which records all the topics on your system.</p>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#4-ros2-bag-info","title":"4 ros2 bag info","text":"<p>You can see details about your recording by running:</p> <pre><code>ros2 bag info &lt;bag_file_name&gt;\n</code></pre> <p>Running this command on the subset bag file will return a list of information on the file:</p> <pre><code>ros2 bag info subset\n</code></pre> <pre><code>Files:             subset.db3\nBag size:          228.5 KiB\nStorage id:        sqlite3\nDuration:          48.47s\nStart:             Oct 11 2019 06:09:09.12 (1570799349.12)\nEnd                Oct 11 2019 06:09:57.60 (1570799397.60)\nMessages:          3013\nTopic information: Topic: /turtle1/cmd_vel | Type: geometry_msgs/msg/Twist | Count: 9 | Serialization Format: cdr\n                 Topic: /turtle1/pose | Type: turtlesim/msg/Pose | Count: 3004 | Serialization Format: cdr\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#5-ros2-bag-play","title":"5 ros2 bag play","text":"<p>Before replaying the bag file, enter <code>Ctrl+C</code> in the terminal where the teleop is running. Then make sure your turtlesim window is visible so you can see the bag file in action.</p> <p>Enter the command:</p> <pre><code>ros2 bag play subset\n</code></pre> <p>The terminal will return the message:</p> <pre><code>[INFO] [rosbag2_storage]: Opened database 'subset'.\n</code></pre> <p>Your turtle will follow the same path you entered while recording (though not 100% exactly; turtlesim is sensitive to small changes in the system\u2019s timing).</p> <p>Because the subset file recorded the <code>/turtle1/pose</code> topic, the <code>ros2 bag play</code> command won\u2019t quit for as long as you had turtlesim running, even if you weren\u2019t moving.</p> <p>This is because as long as the <code>/turtlesim</code> node is active, it publishes data on the <code>/turtle1/pose</code> topic at regular intervals. You may have noticed in the ros2 bag info example result above that the <code>/turtle1/cmd_vel</code> topic\u2019s Count information was only 9; that\u2019s how many times we pressed the arrow keys while recording.</p> <p>Notice that <code>/turtle1/pose</code> has a Count value of over 3000; while we were recording, data was published on that topic 3000 times.</p> <p>To get an idea of how often position data is published, you can run the command:</p> <pre><code>ros2 topic hz /turtle1/pose\n</code></pre>"},{"location":"ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/#summary_9","title":"Summary","text":"<p>You can record data passed on topics in your ROS 2 system using the ros2 bag command. Whether you\u2019re sharing your work with others or introspecting your own experiments, it\u2019s a great tool to know about.</p>"},{"location":"AI/ai/","title":"Artificial Intelligence (AI)","text":""},{"location":"AI/BASICS/basics/","title":"AI Basics","text":"<p>Evolution of AI: https://www.linkedin.com/pulse/biggest-confusion-cleared-ai-vs-ml-dl-ashwin-kumar/</p>"},{"location":"AI/BASICS/basics/#machine-learning","title":"Machine Learning","text":"<ul> <li> <p> Machine Learning</p> <p>Progress: [\u2705]</p> <p>Comments: Andrew Ng's Machine Learning course on Coursera. (Kinda of obseleted. When I study this course, it is based on Matlab/Octave. Now the remake version is based on Python.)</p> <p>  Portal </p> </li> </ul>"},{"location":"AI/BASICS/basics/#deep-learning","title":"Deep Learning","text":"<ul> <li> <p> Deep Learning Specialization \ud83c\udfc6</p> <p>Progress: [\u2705]</p> <p>Contents: 5 courses</p> <ul> <li>Neural Networks and Deep Learning</li> <li>Improving Deep Neural Networks: Hyperparameter tuning, Regularization and Optimization</li> <li>Structuring Machine Learning Projects</li> <li>Convolutional Neural Networks</li> <li>Sequence Models</li> </ul> <p>Comments: \ud83c\udfc6 Andrew Ng's Deep Learning Specialization on Coursera, almost everything about deep learning is covered in this specialization. Well-rounded and highly recommended, if you have enough time.</p> <p>  Portal </p> </li> <li> <p> Dive Into Deep Learning \ud83c\udfc6</p> <p>Status: [\u2705 Finished 1,2,18] [\ud83d\udea7 Ongoing 17]</p> <p>Comments: A very good book for deep learning beginners. It is free and open source. It is also available in Chinese. The book is still under development, but it is already very good. Highly recommended.</p> <p>  Portal  </p> </li> </ul>"},{"location":"AI/CNN/cnn/","title":"Convolutional Neural Networks (CNN)","text":""},{"location":"AI/CV/cv/","title":"Computer Vision","text":""},{"location":"AI/CV/cv/#links","title":"Links","text":"<ul> <li> <p> OpenCV</p> <p>Library for computer vision, image processing and machine learning. C++, Python and Java interfaces and supports Windows, Linux, Mac OS, iOS and Android. OpenCV was designed for computational efficiency and with a strong focus on real-time applications. Written in optimized C/C++, the library can take advantage of multi-core processing. Enabled with OpenCL, it can take advantage of the hardware acceleration of the underlying heterogeneous compute platform.</p> <p>  Portal </p> </li> </ul>"},{"location":"AI/FL/fl/","title":"Federated Learning","text":""},{"location":"AI/FRAMEWORKS/frameworks/","title":"DL Frameworks","text":"<p>Talking about DL frameworks, we have to mention the most popular ones: TensorFlow, PyTorch, Caffe, MXNet, CNTK, and so on. They are all open source and have a large community. They are also the most popular frameworks in the industry. In this section, we will only introduce TensorFlow and PyTorch.</p> <ul> <li> <p> TensorFlow</p> <p>TensorFlow is an end-to-end open source platform for machine learning. It has a comprehensive, flexible ecosystem of tools, libraries and community resources that lets researchers push the state-of-the-art in ML and developers easily build and deploy ML powered applications.</p> <p>Industry-preferred</p> <p>  Tutorials </p> </li> <li> <p> PyTorch</p> <p>PyTorch is an open source machine learning framework that accelerates the path from research prototyping to production deployment. It was developed by Facebook's AI Research Group in 2016. PyTorch emphasizes flexibility and allows deep learning models to be expressed in idiomatic Python.</p> <p>Academia-preferred</p> <p>  Tutorials </p> </li> </ul>"},{"location":"AI/FRAMEWORKS/frameworks/#tensorflow","title":"TensorFlow","text":"<ul> <li> <p> Official Site</p> <p>\ud83c\udf10 https://www.tensorflow.org/</p> </li> <li> <p> Tutorials</p> <p>\ud83c\udf10 https://www.tensorflow.org/tutorials</p> </li> <li> <p> Edge Computing</p> <p>\ud83c\udf10 https://www.tensorflow.org/lite</p> </li> </ul>"},{"location":"AI/FRAMEWORKS/frameworks/#pytorch","title":"PyTorch","text":"<ul> <li> <p> Official Site</p> <p>\ud83c\udf10 https://pytorch.org/</p> </li> <li> <p> Tutorials</p> <p>\ud83c\udf10 https://pytorch.org/tutorials/</p> </li> <li> <p> Edge Computing</p> <p>\ud83c\udf10 https://pytorch.org/mobile/</p> </li> </ul>"},{"location":"AI/GAN/gan/","title":"Generative Adversarial Networks (GAN)","text":""},{"location":"AI/MLP/mlp/","title":"Multi Layer Perceptron","text":""},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/","title":"CH01 - Introduction","text":""},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#machine-learning-in-daily-life","title":"Machine Learning In Daily Life","text":"<p>\"Hi, Siri\" is good example.</p> <p></p> <p>A typical training process.</p> <p></p>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#key-components","title":"Key Components","text":"<ol> <li>Data</li> <li>Model</li> <li>Objective Function</li> <li>Optimization Algorithms</li> </ol>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#data","title":"Data","text":"<p>Garbage in, garbage out. Data quality is even more important than the model itself.</p>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#some-key-concepts","title":"Some key concepts:","text":"<ul> <li>Sample</li> <li>Feature</li> <li>Label</li> <li>Dimensionality</li> </ul>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#data-division","title":"Data Division","text":"<ul> <li>Training Set</li> <li>Validation Set</li> <li>Test Set</li> </ul>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#model","title":"Model","text":"<p>There is no one-size-fits-all model. The model should be selected according to the data and the task.</p>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#objective-function","title":"Objective Function","text":"<p>The objective function is used to measure the quality of the model.</p>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#optimization-algorithms","title":"Optimization Algorithms","text":"<p>Most of problems comes down to optimization problems. The optimization algorithms are used to find the optimal parameters of the model.</p>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#kinds-of-machine-learning","title":"Kinds of Machine Learning","text":""},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#supervised-learning","title":"Supervised Learning","text":"<ul> <li> <p>Regression</p> </li> <li> <p>Classification</p> </li> <li> <p>Tagging</p> </li> <li> <p>Search and Ranking</p> </li> <li> <p>Recommender Systems</p> </li> <li> <p>Sequence Learning</p> </li> </ul>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#unsupervised-learning","title":"Unsupervised Learning","text":"<ul> <li> <p>Clustering</p> </li> <li> <p>Dimensionality Reduction</p> <ul> <li>Principal Component Analysis (PCA)</li> </ul> </li> <li> <p>Causality and Probabilistic Graphical Models</p> </li> <li> <p>Generative Models</p> </li> </ul>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#interacting-with-an-environment","title":"Interacting with an Environment","text":"<p>Online Learning / Adaptive Learning</p> <p></p>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#reinforcement-learning","title":"Reinforcement Learning","text":"<p>Reinforcement learning gives a very general statement of a problem in which an agent interacts with an environment over a series of time steps. At each time step, the agent receives some observation from the environment and must choose an action that is subsequently transmitted back to the environment via some mechanism (sometimes called an actuator), when, after each loop, the agent receives a reward from the environment. This process is illustrated in Fig. 1.3.7. The agent then receives a subsequent observation, and chooses a subsequent action, and so on. The behavior of a reinforcement learning agent is governed by a policy. In brief, a policy is just a function that maps from observations of the environment to actions. The goal of reinforcement learning is to produce good policies.</p> <p></p> <p>Note</p> <p>Any supervised learning problem can be cast as a reinforcement learning problem. But RL is more powerful than supervised learning.</p> <ul> <li>Key problems\uff1a</li> <li>Credit Assignment</li> <li>Observability</li> <li>Exploration and Exploitation (sometimes, the agent need to give up some reward in order to gain new knowledge)</li> </ul>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#roots","title":"Roots","text":"<p>...</p>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#the-road-to-deep-learning","title":"The Road to Deep Learning","text":"<p>...</p>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#success-stories","title":"Success Stories","text":"<p>...</p>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#the-essence-of-deep-learning","title":"The Essence of Deep Learning","text":"<p>...</p>"},{"location":"AI/NOTE-D2L/CH1-INTRO/ch1-intro/#summary","title":"Summary","text":"<p>Machine learning studies how computer systems can leverage experience (often data) to improve performance at specific tasks. It combines ideas from statistics, data mining, and optimization. Often, it is used as a means of implementing AI solutions. As a class of machine learning, representational learning focuses on how to automatically find the appropriate way to represent data. Considered as multi-level representation learning through learning many layers of transformations, deep learning replaces not only the shallow models at the end of traditional machine learning pipelines, but also the labor-intensive process of feature engineering. Much of the recent progress in deep learning has been triggered by an abundance of data arising from cheap sensors and Internet-scale applications, and by significant progress in computation, mostly through GPUs. Furthermore, the availability of efficient deep learning frameworks has made design and implementation of whole system optimization significantly easier, and this is a key component in obtaining high performance.</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/","title":"CH02 - Preliminaries","text":"<p>To prepare for your dive into deep learning, you will need a few survival skills: (i) techniques for storing and manipulating data; (ii) libraries for ingesting and preprocessing data from a variety of sources; (iii) knowledge of the basic linear algebraic operations that we apply to high-dimensional data elements; (iv) just enough calculus to determine which direction to adjust each parameter in order to decrease the loss function; (v) the ability to automatically compute derivatives so that you can forget much of the calculus you just learned; (vi) some basic fluency in probability, our primary language for reasoning under uncertainty; and (vii) some aptitude for finding answers in the official documentation when you get stuck.</p> <p>In short, this chapter provides a rapid introduction to the basics that you will need to follow most of the technical content in this book.</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#21-data-manipulation","title":"2.1 Data Manipulation","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#211-data-acquisition","title":"2.1.1 Data Acquisition","text":"<p>import <code>torch</code> and <code>torchvision</code> for data acquisition</p> PYTORCHTENSORFLOW <pre><code>import torch\n</code></pre> <pre><code>import tensorflow as tf\n</code></pre> <p>tensor is a multi-dimensional array with support for autograd operations like <code>backward()</code>. We can specify the data type of the tensor, e.g., <code>float32</code>, <code>int32</code>, <code>uint8</code>, and <code>bool</code>.</p> PYTORCHTENSORFLOW <pre><code>x = torch.arange(12)\nx\n</code></pre> <pre><code>tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11])\n</code></pre> <pre><code>x = tf.range(12)\nx\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(12,), dtype=int32, numpy=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11], dtype=int32)&gt;\n</code></pre> <p>If you want to check the shape of a tensor, you can access its shape property.</p> PYTORCHTENSORFLOW <pre><code>x.shape\n</code></pre> <pre><code>torch.Size([12])\n</code></pre> <pre><code>x.shape\n</code></pre> <pre><code>TensorShape([12])\n</code></pre> <p>If we just want to know the total number of elements in a tensor, i.e., the product of all of the shape elements, we can inspect its size. Because we are dealing with a vector here, the single element of its shape is identical to its size.</p> PYTORCHTENSORFLOW <pre><code>x.numel()\n</code></pre> <pre><code>12\n</code></pre> <pre><code>tf.size(x)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=int32, numpy=12&gt;\n</code></pre> <p>To change the shape of a tensor without altering either the number of elements or their values, we can invoke the <code>reshape</code> function. For example, we can transform our tensor, <code>x</code>, from a row vector with shape <code>(12,)</code> to a matrix with shape <code>(3, 4)</code>. This new tensor contains the exact same values as the old tensor, but it views them as a matrix organized as a stack of rows.</p> PYTORCHTENSORFLOW <pre><code>x = x.reshape(3, 4)\nx\n</code></pre> <pre><code>tensor([[ 0,  1,  2,  3],\n        [ 4,  5,  6,  7],\n        [ 8,  9, 10, 11]])\n</code></pre> <pre><code>x = tf.reshape(x, (3, 4))\nx\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=int32, numpy=\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11]], dtype=int32)&gt;\n</code></pre> <p>If we only know how many columns we want but are unsure about the number of rows, we can specify this with the special value <code>-1</code>. In our case, instead of calling <code>x.reshape(3, 4)</code>, we could have equivalently called <code>x.reshape(-1, 4)</code> or <code>x.reshape(3, -1)</code>.</p> PYTORCHTENSORFLOW <pre><code>x.reshape(-1, 4)\n</code></pre> <pre><code>tensor([[ 0,  1,  2,  3],\n        [ 4,  5,  6,  7],\n        [ 8,  9, 10, 11]])\n</code></pre> <pre><code>tf.reshape(x, (-1, 4))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=int32, numpy=\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11]], dtype=int32)&gt;\n</code></pre> <p>Sometimes, we want to use all 0 or all 1 values as the initial value for a tensor. We can create a tensor full of zeros with the specified shape by calling <code>zeros</code>. Similarly, we can create tensors filled with 1 by calling <code>ones</code>.</p> PYTORCHTENSORFLOW <pre><code>torch.zeros((2, 3, 4))\n</code></pre> <pre><code>tensor([[[0., 0., 0., 0.],\n         [0., 0., 0., 0.],\n         [0., 0., 0., 0.]],\n\n        [[0., 0., 0., 0.],\n         [0., 0., 0., 0.],\n         [0., 0., 0., 0.]]])\n</code></pre> <pre><code>tf.zeros((2, 3, 4))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(2, 3, 4), dtype=float32, numpy=\narray([[[0., 0., 0., 0.],\n        [0., 0., 0., 0.],\n        [0., 0., 0., 0.]],\n\n       [[0., 0., 0., 0.],\n        [0., 0., 0., 0.],\n        [0., 0., 0., 0.]]], dtype=float32)&gt;\n</code></pre> <p>All 1s are not as commonly used as all 0s, but we can still call <code>ones</code> for any tensor shape to get a tensor containing all 1s.</p> PYTORCHTENSORFLOW <pre><code>torch.ones((2, 3, 4))\n</code></pre> <pre><code>tensor([[[1., 1., 1., 1.],\n         [1., 1., 1., 1.],\n         [1., 1., 1., 1.]],\n\n        [[1., 1., 1., 1.],\n         [1., 1., 1., 1.],\n         [1., 1., 1., 1.]]])\n</code></pre> <pre><code>tf.ones((2, 3, 4))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(2, 3, 4), dtype=float32, numpy=\narray([[[1., 1., 1., 1.],\n        [1., 1., 1., 1.],\n        [1., 1., 1., 1.]],\n\n       [[1., 1., 1., 1.],\n        [1., 1., 1., 1.],\n        [1., 1., 1., 1.]]], dtype=float32)&gt;\n</code></pre> <p>We can also specify the exact values for each element in the desired tensor by supplying a Python list (or list of lists) containing the numerical values.</p> PYTORCHTENSORFLOW <pre><code>torch.tensor([[2, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\n</code></pre> <pre><code>tensor([[2, 1, 4, 3],\n        [1, 2, 3, 4],\n        [4, 3, 2, 1]])\n</code></pre> <pre><code>tf.constant([[2, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=int32, numpy=\narray([[2, 1, 4, 3],\n       [1, 2, 3, 4],\n       [4, 3, 2, 1]], dtype=int32)&gt;\n</code></pre> <p>We can create tensors whose elements are sampled randomly from a standard Gaussian (normal) distribution with a mean of 0 and a standard deviation of 1.</p> PYTORCHTENSORFLOW <pre><code>torch.randn(3, 4)\n</code></pre> <pre><code>tensor([[ 0.1835,  0.8077,  0.4194, -0.0254],\n        [-0.3695, -0.1367, -0.2394, -0.0985],\n        [-0.6557, -0.0235, -0.8858, -0.7724]])\n</code></pre> <pre><code>tf.random.normal(shape=(3, 4))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=float32, numpy=\narray([[ 0.1835,  0.8077,  0.4194, -0.0254],\n       [-0.3695, -0.1367, -0.2394, -0.0985],\n       [-0.6557, -0.0235, -0.8858, -0.7724]], dtype=float32)&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#212-operations","title":"2.1.2 Operations","text":"<p>Tensor supports a wide range of element-wise operations, including arithmetic operations (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, and <code>**</code>) and various advanced operations, such as <code>sin</code>, <code>cos</code>, and <code>exp</code>. We can call element-wise operations on any two tensors of the same shape. In the following example, we use commas to formulate a 5-element tuple, where each element is the result of an element-wise operation.</p> PYTORCHTENSORFLOW <pre><code>x = torch.tensor([1.0, 2, 4, 8])\ny = torch.tensor([2, 2, 2, 2])\nx + y, x - y, x * y, x / y, x ** y\n</code></pre> <pre><code>(tensor([ 3.,  4.,  6., 10.]),\n tensor([-1.,  0.,  2.,  6.]),\n tensor([ 2.,  4.,  8., 16.]),\n tensor([0.5000, 1.0000, 2.0000, 4.0000]),\n tensor([ 1.,  4., 16., 64.]))\n</code></pre> <pre><code>x = tf.constant([1.0, 2, 4, 8])\ny = tf.constant([2, 2, 2, 2])\nx + y, x - y, x * y, x / y, x ** y\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 3.,  4.,  6., 10.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([-1.,  0.,  2.,  6.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 2.,  4.,  8., 16.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.5, 1. , 2. , 4. ], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 1.,  4., 16., 64.], dtype=float32)&gt;)\n</code></pre> <p>Many more operations can be applied element-wise, including unary operators like exponentiation.</p> PYTORCHTENSORFLOW <pre><code>x.exp()\n</code></pre> <pre><code>tensor([ 2.7183,  7.3891, 54.5981,  2.7183])\n</code></pre> <pre><code>tf.exp(x)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 2.7183,  7.3891, 54.5981,  2.7183], dtype=float32)&gt;\n</code></pre> <p>We can also concatenate multiple tensors together, stacking them end-to-end to form a larger tensor. We just need to provide a list of tensors and tell the system along which axis to concatenate. The example below shows what happens when we concatenate tensors along rows (axis 0, the first element of the shape) vs. columns (axis 1, the second element of the shape).</p> PYTORCHTENSORFLOW <pre><code>x = torch.arange(12, dtype=torch.float32).reshape((3, 4))\ny = torch.tensor([[2.0, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\ntorch.cat((x, y), dim=0), torch.cat((x, y), dim=1)\n</code></pre> <pre><code>(tensor([[ 0.,  1.,  2.,  3.],\n         [ 4.,  5.,  6.,  7.],\n         [ 8.,  9., 10., 11.],\n         [ 2.,  1.,  4.,  3.],\n         [ 1.,  2.,  3.,  4.],\n         [ 4.,  3.,  2.,  1.]]),\n tensor([[ 0.,  1.,  2.,  3.,  2.,  1.,  4.,  3.],\n         [ 4.,  5.,  6.,  7.,  1.,  2.,  3.,  4.],\n         [ 8.,  9., 10., 11.,  4.,  3.,  2.,  1.]]))\n</code></pre> <pre><code>x = tf.reshape(tf.range(12, dtype=tf.float32), (3, 4))\ny = tf.constant([[2.0, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\ntf.concat((x, y), axis=0), tf.concat((x, y), axis=1)\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(6, 4), dtype=float32, numpy=\narray([[ 0.,  1.,  2.,  3.],\n       [ 4.,  5.,  6.,  7.],\n       [ 8.,  9., 10., 11.],\n       [ 2.,  1.,  4.,  3.],\n       [ 1.,  2.,  3.,  4.],\n       [ 4.,  3.,  2.,  1.]], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(3, 8), dtype=float32, numpy=\narray([[ 0.,  1.,  2.,  3.,  2.,  1.,  4.,  3.],\n       [ 4.,  5.,  6.,  7.,  1.,  2.,  3.,  4.],\n       [ 8.,  9., 10., 11.,  4.,  3.,  2.,  1.]], dtype=float32)&gt;)\n</code></pre> <p>Sometimes, we want to construct a binary tensor via logical statements. Take <code>x == y</code> as an example. For each position, if <code>x</code> and <code>y</code> are equal at that position, the corresponding entry in the new tensor takes a value of 1, meaning that the logical statement <code>x == y</code> is true at that position; otherwise that position takes 0.</p> PYTORCHTENSORFLOW <pre><code>x == y\n</code></pre> <pre><code>tensor([[False,  True, False,  True],\n        [False, False, False, False],\n        [False, False, False, False]])\n</code></pre> <pre><code>tf.equal(x, y)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=bool, numpy=\narray([[False,  True, False,  True],\n       [False, False, False, False],\n       [False, False, False, False]])&gt;\n</code></pre> <p>Summing all the elements in the tensor yields a tensor with only one element.</p> PYTORCHTENSORFLOW <pre><code>x.sum()\n</code></pre> <pre><code>tensor(66.)\n</code></pre> <pre><code>tf.reduce_sum(x)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=66.0&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#213-broadcasting-mechanism","title":"2.1.3 Broadcasting Mechanism","text":"<p>In the above section, we saw how to perform element-wise operations on two tensors of the same shape. Under certain conditions, even when shapes differ, we can still perform element-wise operations by invoking the broadcasting mechanism. This mechanism works in the following way: First, expand one or both arrays by copying elements appropriately so that after this transformation, the two tensors have the same shape. Second, carry out the element-wise operations on the resulting arrays.</p> <p>In most cases, we broadcast along an axis where an array initially only has length 1, such as in the following example.</p> PYTORCHTENSORFLOW <pre><code>a = torch.arange(3).reshape((3, 1))\nb = torch.arange(2).reshape((1, 2))\na, b\n</code></pre> <pre><code>(tensor([[0],\n         [1],\n         [2]]),\n tensor([[0, 1]]))\n</code></pre> <pre><code>a = tf.reshape(tf.range(3), (3, 1))\nb = tf.reshape(tf.range(2), (1, 2))\na, b\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(3, 1), dtype=int32, numpy=\narray([[0],\n       [1],\n       [2]], dtype=int32)&gt;,\n &lt;tf.Tensor: shape=(1, 2), dtype=int32, numpy=array([[0, 1]], dtype=int32)&gt;)\n</code></pre> <p>Since <code>a</code> and <code>b</code> are <code>(3 \u00d7 1)</code> and <code>(1 \u00d7 2)</code> matrices respectively, their shapes do not match up if we want to add them. We broadcast the entries of both matrices into a larger <code>(3 \u00d7 2)</code> matrix as follows: for matrix <code>a</code> it replicates the columns and for matrix <code>b</code> it replicates the rows before adding up both element-wise.</p> PYTORCHTENSORFLOW <pre><code>a + b\n</code></pre> <pre><code>tensor([[0, 1],\n        [1, 2],\n        [2, 3]])\n</code></pre> <pre><code>a + b\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 2), dtype=int32, numpy=\narray([[0, 1],\n       [1, 2],\n       [2, 3]], dtype=int32)&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#214-indexing-and-slicing","title":"2.1.4 Indexing and Slicing","text":"<p>Just as in any other Python array, elements in a tensor can be accessed by index. As in any Python array, the first element has index 0 and ranges are specified to include the first but not the last element. Negative indices are commonly used to access elements relative to the end of the array. As usual, we can modify the contents of an array by specifying an index and assigning a new value.</p> PYTORCHTENSORFLOW <pre><code>x[-1]\n</code></pre> <pre><code>tensor([ 8.,  9., 10., 11.])\n</code></pre> <pre><code>x[-1]\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 8.,  9., 10., 11.], dtype=float32)&gt;\n</code></pre> <p>Beyond reading, writing, and slicing by elements, we can also access ranges of elements. For instance, we can slice <code>x</code> to obtain the first two rows.</p> PYTORCHTENSORFLOW <pre><code>x[1:3]\n</code></pre> <pre><code>tensor([[ 4.,  5.,  6.,  7.],\n        [ 8.,  9., 10., 11.]])\n</code></pre> <pre><code>x[1:3]\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(2, 4), dtype=float32, numpy=\narray([[ 4.,  5.,  6.,  7.],\n       [ 8.,  9., 10., 11.]], dtype=float32)&gt;\n</code></pre> <p>Besides reading, writing, and slicing single elements or ranges of elements, we can also assign multiple elements with the same value. For instance, <code>[0, 1]</code> is the index for the first and second elements. Rather than assigning them one by one, we can assign them at the same time.</p> PYTORCHTENSORFLOW <pre><code>x[1,2] = 9\nx\n</code></pre> <pre><code>tensor([[ 0.,  1.,  2.,  3.],\n        [ 4.,  5.,  9.,  7.],\n        [ 8.,  9., 10., 11.]])\n</code></pre> <pre><code>x[1,2].assign(9)\nx\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=float32, numpy=\narray([[ 0.,  1.,  2.,  3.],\n       [ 4.,  5.,  9.,  7.],\n       [ 8.,  9., 10., 11.]], dtype=float32)&gt;\n</code></pre> <p>Similarly, if we want to assign multiple elements the same value, we simply index all of them and then assign them the value. Below, we assign each element in the second and third rows to 12.</p> PYTORCHTENSORFLOW <pre><code>x[1:3, :] = 12\nx\n</code></pre> <pre><code>tensor([[ 0.,  1.,  2.,  3.],\n        [12., 12., 12., 12.],\n        [12., 12., 12., 12.]])\n</code></pre> <pre><code>x[1:3, :].assign(12)\nx\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=float32, numpy=\narray([[ 0.,  1.,  2.,  3.],\n       [12., 12., 12., 12.],\n       [12., 12., 12., 12.]], dtype=float32)&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#215-saving-memory","title":"2.1.5 Saving Memory","text":"<p>In some cases, we might want to perform an operation on the same array several times. If we are not careful, we will allocate new memory to store the results of each operation. For example, if we write <code>y = x + y</code>, we will dereference the tensor that <code>y</code> used to point to and instead point <code>y</code> at the newly allocated memory. In the following example, we demonstrate this with Python's <code>id</code> function, which gives us the exact address of the referenced object in memory. After running <code>y = y + x</code>, we will find that <code>id(y)</code> points to a different location. That is because Python first evaluates <code>y + x</code>, allocating new memory for the result and then subsequently redirects <code>y</code> to point at this new location in memory.</p> PYTORCHTENSORFLOW <pre><code>before = id(y)\ny = y + x\nid(y) == before\n</code></pre> <pre><code>False\n</code></pre> <pre><code>before = id(y)\ny = y + x\nid(y) == before\n</code></pre> <pre><code>False\n</code></pre> <p>This might be undesirable for two reasons. First, we do not want to run around allocating memory unnecessarily all the time. In machine learning, we might have hundreds of megabytes of parameters and update all of them multiple times per second. Typically, we will want to perform these updates in place. Second, we might point at the same parameters from multiple variables. If we do not update in place, other references will still point to the old memory location, making it possible for parts of our code to inadvertently reference stale parameters.</p> <p>Fortunately, performing in-place operations in MXNet is easy. We can assign the result of an operation to a previously allocated array with slice notation, e.g., <code>y[:] = &lt;expression&gt;</code>. To illustrate the behavior, we first clone the shape of another variable, allocating new memory in the process, and then perform an operation, writing the result to the newly allocated space. In this case, <code>id(y)</code> still points to the same location because we allocated no new memory for the operation.</p> PYTORCHTENSORFLOW <pre><code>z = torch.zeros_like(y)\nprint('id(z):', id(z))\nz[:] = x + y\nprint('id(z):', id(z))\n</code></pre> <pre><code>id(z): 140539816595456\nid(z): 140539816595456\n</code></pre> <pre><code>z = tf.zeros_like(y)\nprint('id(z):', id(z))\nz[:] = x + y\nprint('id(z):', id(z))\n</code></pre> <pre><code>id(z): 140539816595456\nid(z): 140539816595456\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#216-conversion-to-other-python-objects","title":"2.1.6 Conversion to Other Python Objects","text":"<p>Converting to a NumPy tensor, or vice versa, is easy. The converted result does not share memory. This minor inconvenience is actually quite important: when you perform operations on the CPU or on GPUs, you do not want to halt computation, waiting to see whether the NumPy package of Python might want to be doing something else with the same chunk of memory.</p> PYTORCHTENSORFLOW <pre><code>a = x.numpy()\nb = torch.tensor(a)\ntype(a), type(b)\n</code></pre> <pre><code>(numpy.ndarray, torch.Tensor)\n</code></pre> <pre><code>a = x.numpy()\nb = tf.convert_to_tensor(a)\ntype(a), type(b)\n</code></pre> <pre><code>(numpy.ndarray, tensorflow.python.framework.ops.EagerTensor)\n</code></pre> <p>To convert a size-1 tensor to a Python scalar, we can invoke the <code>item</code> function or Python's built-in functions.</p> PYTORCHTENSORFLOW <pre><code>a = torch.tensor([3.5])\na, a.item(), float(a), int(a)\n</code></pre> <pre><code>(tensor([3.5000]), 3.5, 3.5, 3)\n</code></pre> <pre><code>a = tf.constant([3.5])\na, a.numpy(), float(a), int(a)\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(1,), dtype=float32, numpy=array([3.5], dtype=float32)&gt;,\n array([3.5], dtype=float32),\n 3.5,\n 3)\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#217-summary","title":"2.1.7 Summary","text":"<p>The tensor class is the main interface for storing and manipulating data in deep learning libraries. Tensors provide a variety of functionalities including construction routines; indexing and slicing; basic mathematics operations; broadcasting; memory-efficient assignment; and conversion to and from other Python objects.</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#22-data-preprocessing","title":"2.2 Data Preprocessing","text":"<p>So far, we have been working with synthetic data that arrived in ready-made tensors. However, to apply deep learning in the wild we must extract messy data stored in arbitrary formats, and preprocess it to suit our needs. Fortunately, the pandas library can do much of the heavy lifting. This section, while no substitute for a proper pandas tutorial, will give you a crash course on some of the most common routines.\\</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#221-reading-the-dataset","title":"2.2.1 Reading the Dataset","text":"<p>Comma-separated values (CSV) files are ubiquitous for the storing of tabular (spreadsheet-like) data. In them, each line corresponds to one record and consists of several (comma-separated) fields, e.g., \u201cAlbert Einstein,March 14 1879,Ulm,Federal polytechnic school,field of gravitational physics\u201d. To demonstrate how to load CSV files with pandas, we create a CSV file below ../data/house_tiny.csv. This file represents a dataset of homes, where each row corresponds to a distinct home and the columns correspond to the number of rooms (NumRooms), the roof type (RoofType), and the price (Price).</p> PYTORCH <pre><code>import os\n\nos.makedirs(os.path.join('..', 'data'), exist_ok=True)\ndata_file = os.path.join('..', 'data', 'house_tiny.csv')\nwith open(data_file, 'w') as f:\n    f.write('NumRooms,Alley,Price\\n')  # Column names\n    f.write('NA,Pave,127500\\n')  # Each row represents a data example\n    f.write('2,NA,106000\\n')\n    f.write('4,NA,178100\\n')\n    f.write('NA,NA,140000\\n')\n</code></pre> <p>Now let's import pandas and load the dataset with <code>read_csv</code>. The argument <code>na_values</code> means \u201cnot available values\u201d.</p> PYTORCHTENSORFLOW <pre><code>import pandas as pd\ndata = pd.read_csv(data_file)\nprint(data)\n</code></pre> <pre><code>   NumRooms Alley   Price\n0       NaN  Pave  127500\n1       2.0   NaN  106000\n2       4.0   NaN  178100\n3       NaN   NaN  140000\n</code></pre> <pre><code>import pandas as pd\ndata = pd.read_csv(data_file)\nprint(data)\n</code></pre> <pre><code>   NumRooms Alley   Price\n0       NaN  Pave  127500\n1       2.0   NaN  106000\n2       4.0   NaN  178100\n3       NaN   NaN  140000\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#222-data-preparation","title":"2.2.2 Data Preparation","text":"<p>In supervised learning, we train models to predict a designated target value, given some set of input values. Our first step in processing the dataset is to separate out columns corresponding to input versus target values. We can select columns either by name or via integer-location based indexing (iloc).</p> <p>You might have noticed that pandas replaced all CSV entries with value NA with a special NaN (not a number) value. This can also happen whenever an entry is empty, e.g., \u201c3,,,270000\u201d. These are called missing values and they are the \u201cbed bugs\u201d of data science, a persistent menace that you will confront throughout your career. Depending upon the context, missing values might be handled either via imputation or deletion. Imputation replaces missing values with estimates of their values while deletion simply discards either those rows or those columns that contain missing values.</p> <p>Here are some common imputation heuristics. For categorical input fields, we can treat NaN as a category. Since the RoofType column takes values Slate and NaN, pandas can convert this column into two columns RoofType_Slate and RoofType_nan. A row whose roof type is Slate will set values of RoofType_Slate and RoofType_nan to 1 and 0, respectively. The converse holds for a row with a missing RoofType value.</p> PYTORCHTENSORFLOW <pre><code>inputs, targets = data.iloc[:, 0:2], data.iloc[:, 2]\ninputs = pd.get_dummies(inputs, dummy_na=True)\nprint(inputs)\n</code></pre> <pre><code>   NumRooms  RoofType_Slate  RoofType_nan\n0       NaN           False          True\n1       2.0           False          True\n2       4.0            True         False\n3       NaN           False          True\n</code></pre> <pre><code>inputs, targets = data.iloc[:, 0:2], data.iloc[:, 2]\ninputs = pd.get_dummies(inputs, dummy_na=True)\nprint(inputs)\n</code></pre> <pre><code>   NumRooms  RoofType_Slate  RoofType_nan\n0       NaN           False          True\n1       2.0           False          True\n2       4.0            True         False\n3       NaN           False          True\n</code></pre> <p>For missing numerical values, one common heuristic is to replace the NaN entries with the mean value of the corresponding column.</p> PYTORCHTENSORFLOW <pre><code># Fill missing values with the column mean\ninputs = inputs.fillna(inputs.mean())\nprint(inputs)\n</code></pre> <pre><code>   NumRooms  RoofType_Slate  RoofType_nan\n0       3.0           False          True\n1       2.0           False          True\n2       4.0            True         False\n3       3.0           False          True\n</code></pre> <pre><code># Fill missing values with the column mean\ninputs = inputs.fillna(inputs.mean())\nprint(inputs)\n</code></pre> <pre><code>   NumRooms  RoofType_Slate  RoofType_nan\n0       3.0           False          True\n1       2.0           False          True\n2       4.0            True         False\n3       3.0           False          True\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#223-conversion-to-the-tensor-format","title":"2.2.3 Conversion to the Tensor Format","text":"<p>Now that all the entries in inputs and targets are numerical, we can load them into a tensor (recall Section 2.1).</p> PYTORCHTENSORFLOW <pre><code>import torch\nX, y = torch.tensor(inputs.values), torch.tensor(targets.values)\nX, y\n</code></pre> <pre><code>(tensor([[3., 0., 1.],\n         [2., 0., 1.],\n         [4., 1., 0.],\n         [3., 0., 1.]], dtype=torch.float64),\n tensor([127500, 106000, 178100, 140000]))\n</code></pre> <pre><code>import tensorflow as tf\nX, y = tf.constant(inputs.values), tf.constant(targets.values)\nX, y\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(4, 3), dtype=float64, numpy=\narray([[3., 0., 1.],\n       [2., 0., 1.],\n       [4., 1., 0.],\n       [3., 0., 1.]])&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=int64, numpy=array([127500, 106000, 178100, 140000])&gt;)\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#224-summary","title":"2.2.4 Summary","text":"<p>You now know how to partition data columns, impute missing variables, and load pandas data into tensors. In Section 5.7, you will pick up some more data processing skills. While this crash course kept things simple, data processing can get hairy. For example, rather than arriving in a single CSV file, our dataset might be spread across multiple files extracted from a relational database. For instance, in an e-commerce application, customer addresses might live in one table and purchase data in another. Moreover, practitioners face myriad data types beyond categorical and numeric, for example, text strings, images, audio data, and point clouds. Oftentimes, advanced tools and efficient algorithms are required in order to prevent data processing from becoming the biggest bottleneck in the machine learning pipeline. These problems will arise when we get to computer vision and natural language processing. Finally, we must pay attention to data quality. Real-world datasets are often plagued by outliers, faulty measurements from sensors, and recording errors, which must be addressed before feeding the data into any model. Data visualization tools such as seaborn, Bokeh, or matplotlib can help you to manually inspect the data and develop intuitions about the type of problems you may need to address.</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#23-linear-algebra","title":"2.3 Linear Algebra","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#231-scalars","title":"2.3.1 Scalars","text":"<p>If you never studied linear algebra or machine learning, then you might be surprised to see so many boldfaced letters. These are not typos! We use boldfaced lowercase letters (e.g., \\(\\mathbf{x}\\)) to refer to vectors and boldfaced uppercase letters (e.g., \\(\\mathbf{X}\\)) to denote matrices. For scalars (single numbers), we use regular letters (e.g., \\(x\\)). We also work with tensors, which are arrays with more than two axes. We use calligraphic font (e.g., \\(\\mathcal{X}\\)) for tensors.</p> <p>We use \\(\\mathbb{R}\\) to denote the set containing all scalar real-valued numbers. By convention, we use calligraphic font (e.g., \\(\\mathcal{X}\\)) for sets. This is because we can think of a scalar as a set containing just one element. By extension, \\(\\mathbb{R}^n\\) denotes the set of all vectors consisting of \\(n\\) real-valued scalars. In machine learning, we typically work with sets of scalars, vectors, matrices, or tensors of various sizes and shapes, so it is important to keep the distinctions among them straight.</p> <p>Scalars are implemented as tensors that contain only one element. Below, we assign two scalars and perform the familiar addition, multiplication, division, and exponentiation operations.</p> PYTORCHTENSORFLOW <pre><code>import torch\nx = torch.tensor(3.0)\ny = torch.tensor(2.0)\nx + y, x * y, x / y, x ** y\n</code></pre> <pre><code>(tensor(5.), tensor(6.), tensor(1.5000), tensor(9.))\n</code></pre> <pre><code>import tensorflow as tf\nx = tf.constant(3.0)\ny = tf.constant(2.0)\nx + y, x * y, x / y, x ** y\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(), dtype=float32, numpy=5.0&gt;,\n &lt;tf.Tensor: shape=(), dtype=float32, numpy=6.0&gt;,\n &lt;tf.Tensor: shape=(), dtype=float32, numpy=1.5&gt;,\n &lt;tf.Tensor: shape=(), dtype=float32, numpy=9.0&gt;)\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#232-vectors","title":"2.3.2 Vectors","text":"<p>You can think of a vector as simply a list of scalar values. We call these values the elements (or entries) of the vector. When our vectors represent examples from our dataset, its elements correspond to features of our examples. For example, if we collected data on the height, weight, and age of a group of people, we could represent a single person as a vector \\(\\mathbf{x} = [x_1, x_2, x_3]\\) with elements corresponding to height, weight, and age, respectively. Throughout this book, we work with column vectors, which are represented as n-dimensional arrays with n rows and 1 column. Each element \\(x_i\\) of a vector \\(\\mathbf{x}\\) is indicated by its index \\(i\\).</p> <p>In math notation, we will usually denote vectors as bold-faced, upright letters (e.g., \\(\\mathbf{x}\\)). In the source code of the book, we denote them as variables with arrow on top (e.g., <code>x</code>). In either case, we use lowercase letters with either no decoration (e.g., \\(x\\)) or arrows (e.g., \\(\\vec{x}\\)) to refer to their elements.</p> <p>We can create a row vector <code>x</code> containing the first \\(n\\) natural numbers with <code>arange</code>. Then we access any element by indexing into the tensor.</p> PYTORCHTENSORFLOW <pre><code>x = torch.arange(4)\nx\n</code></pre> <pre><code>tensor([0, 1, 2, 3])\n</code></pre> <pre><code>x = tf.range(4)\nx\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=int32, numpy=array([0, 1, 2, 3], dtype=int32)&gt;\n</code></pre> <p>We can refer to any element of a vector by using a subscript. For example, we can refer to the \\(i^\\mathrm{th}\\) element of \\(\\mathbf{x}\\) by \\(x_i\\). Note that the element \\(x_i\\) is a scalar, so we do not boldface the font when referring to it. Also, note that the element \\(x_i\\) is a scalar, so we do not boldface the font when referring to it.</p> PYTORCHTENSORFLOW <pre><code>x[3]\n</code></pre> <pre><code>tensor(3)\n</code></pre> <pre><code>x[3]\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=int32, numpy=3&gt;\n</code></pre> <p>You can check the length of the vector with <code>len(x)</code>.</p> PYTORCHTENSORFLOW <pre><code>len(x)\n</code></pre> <pre><code>4\n</code></pre> <pre><code>len(x)\n</code></pre> <pre><code>4\n</code></pre> <p>You can check the shape of the vector with <code>x.shape</code>.</p> PYTORCHTENSORFLOW <pre><code>x.shape\n</code></pre> <pre><code>torch.Size([4])\n</code></pre> <pre><code>x.shape\n</code></pre> <pre><code>TensorShape([4])\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#233-matrices","title":"2.3.3 Matrices","text":"<p>Just as vectors generalize scalars from order 0 to order 1, matrices generalize vectors from order 1 to order 2. Matrices, which we will typically denote with bold-faced, capital letters (e.g., \\(\\mathbf{X}\\)), are represented in code as arrays with two axes. Visually, we can illustrate any matrix \\(\\mathbf{X} \\in \\mathbb{R}^{m \\times n}\\) with a table, where each element \\(x_{ij}\\) belongs to the \\(i^{\\mathrm{th}}\\) row and \\(j^{\\mathrm{th}}\\) column:</p> \\[\\mathbf{X} = \\begin{bmatrix} x_{11} &amp; x_{12} &amp; \\cdots &amp; x_{1n} \\\\ x_{21} &amp; x_{22} &amp; \\cdots &amp; x_{2n} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ x_{m1} &amp; x_{m2} &amp; \\cdots &amp; x_{mn} \\end{bmatrix}.\\] <p>We can create a matrix <code>A</code> with \\(m\\) rows and \\(n\\) columns with <code>arange</code> and <code>reshape</code>.</p> PYTORCHTENSORFLOW <pre><code>A = torch.arange(20).reshape(5, 4)\nA\n</code></pre> <pre><code>tensor([[ 0,  1,  2,  3],\n        [ 4,  5,  6,  7],\n        [ 8,  9, 10, 11],\n        [12, 13, 14, 15],\n        [16, 17, 18, 19]])\n</code></pre> <pre><code>A = tf.range(20).reshape(5, 4)\nA\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(5, 4), dtype=int32, numpy=\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11],\n       [12, 13, 14, 15],\n       [16, 17, 18, 19]], dtype=int32)&gt;\n</code></pre> <p>We can access the scalar element \\(x_{ij}\\) of a matrix \\(\\mathbf{X}\\) by specifying the indices for the row (\\(i\\)) and column (\\(j\\)), such as <code>A[i, j]</code>.</p> PYTORCHTENSORFLOW <pre><code>A[2, 3]\n</code></pre> <pre><code>tensor(11)\n</code></pre> <pre><code>A[2, 3]\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=int32, numpy=11&gt;\n</code></pre> <p>We can transpose the matrix through <code>A.T</code>.</p> PYTORCHTENSORFLOW <pre><code>A.T\n</code></pre> <pre><code>tensor([[ 0,  4,  8, 12, 16],\n        [ 1,  5,  9, 13, 17],\n        [ 2,  6, 10, 14, 18],\n        [ 3,  7, 11, 15, 19]])\n</code></pre> <pre><code>tf.transpose(A)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4, 5), dtype=int32, numpy=\narray([[ 0,  4,  8, 12, 16],\n       [ 1,  5,  9, 13, 17],\n       [ 2,  6, 10, 14, 18],\n       [ 3,  7, 11, 15, 19]], dtype=int32)&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#234-tensors","title":"2.3.4 Tensors","text":"<p>Just as vectors generalize scalars, and matrices generalize vectors, we can build data structures with even more axes. Tensors give us a generic way of describing \\(n\\)-dimensional arrays with an arbitrary number of axes. Vectors, for example, are first-order tensors, and matrices are second-order tensors. Tensors will become more important when we start working with images, which arrive as 3D data structures. For now, we will skip the fancy notation and just think of tensors as multidimensional arrays. We can create a tensor <code>X</code> with 3 axes and sizes \\(2 \\times 3 \\times 4\\).</p> PYTORCHTENSORFLOW <pre><code>X = torch.arange(24).reshape(2, 3, 4)\nX\n</code></pre> <pre><code>tensor([[[ 0,  1,  2,  3],\n         [ 4,  5,  6,  7],\n         [ 8,  9, 10, 11]],\n\n        [[12, 13, 14, 15],\n         [16, 17, 18, 19],\n         [20, 21, 22, 23]]])\n</code></pre> <pre><code>X = tf.range(24).reshape(2, 3, 4)\nX\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(2, 3, 4), dtype=int32, numpy=\narray([[[ 0,  1,  2,  3],\n        [ 4,  5,  6,  7],\n        [ 8,  9, 10, 11]],\n\n       [[12, 13, 14, 15],\n        [16, 17, 18, 19],\n        [20, 21, 22, 23]]], dtype=int32)&gt;\n</code></pre> <p>Tensors can be even more useful than matrices. For instance, we can stack matrices to obtain a 3D tensor with a shape of \\(3 \\times 3 \\times 4\\).</p> PYTORCHTENSORFLOW <pre><code>A = torch.arange(20, dtype=torch.float32).reshape(5, 4)\nB = A.clone()  # Assign a copy of A to B by allocating new memory\nA, A + B\n</code></pre> <pre><code>(tensor([[ 0.,  1.,  2.,  3.],\n         [ 4.,  5.,  6.,  7.],\n         [ 8.,  9., 10., 11.],\n         [12., 13., 14., 15.],\n         [16., 17., 18., 19.]]),\n tensor([[ 0.,  2.,  4.,  6.],\n         [ 8., 10., 12., 14.],\n         [16., 18., 20., 22.],\n         [24., 26., 28., 30.],\n         [32., 34., 36., 38.]]))\n</code></pre> <pre><code>A = tf.range(20, dtype=tf.float32).reshape(5, 4)\nB = tf.Variable(A)  # Assign a copy of A to B by allocating new memory\nA, A + B\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(5, 4), dtype=float32, numpy=\narray([[ 0.,  1.,  2.,  3.],\n       [ 4.,  5.,  6.,  7.],\n       [ 8.,  9., 10., 11.],\n       [12., 13., 14., 15.],\n       [16., 17., 18., 19.]], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(5, 4), dtype=float32, numpy=\narray([[ 0.,  2.,  4.,  6.],\n       [ 8., 10., 12., 14.],\n       [16., 18., 20., 22.],\n       [24., 26., 28., 30.],\n       [32., 34., 36., 38.]], dtype=float32)&gt;)\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#235-basic-properties-of-tensor-arithmetic","title":"2.3.5 Basic Properties of Tensor Arithmetic","text":"<p>Scalars, vectors, matrices, and higher-order tensors all have some handy properties. For example, elementwise operations produce outputs that have the same shape as their operands.</p> PYTORCHTENSORFLOW <pre><code>A = torch.arange(6, dtype=torch.float32).reshape(2, 3)\nB = A.clone()  # Assign a copy of A to B by allocating new memory\nA, A + B\n</code></pre> <pre><code>(tensor([[0., 1., 2.],\n         [3., 4., 5.]]),\n tensor([[ 0.,  2.,  4.],\n         [ 6.,  8., 10.]]))\n</code></pre> <pre><code>A = tf.reshape(tf.range(6, dtype=tf.float32), (2, 3))\nB = A  # No cloning of A to B by allocating new memory\nA, A + B\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(2, 3), dtype=float32, numpy=\narray([[0., 1., 2.],\n       [3., 4., 5.]], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(2, 3), dtype=float32, numpy=\narray([[ 0.,  2.,  4.],\n       [ 6.,  8., 10.]], dtype=float32)&gt;)\n</code></pre> <p>The elementwise product of two matrices is called their Hadamard product (denoted \\(\\odot\\)). We can spell out the entries of the Hadamard product of two matrices \\(\\mathbf{A}, \\mathbf{B} \\in \\mathbb{R}^{m \\times n}\\):</p> \\[(\\mathbf{A} \\odot \\mathbf{B})_{ij} = \\begin{bmatrix} a_{11} b_{11} &amp; a_{12} b_{12} &amp; \\cdots &amp; a_{1n} b_{1n} \\\\ a_{21} b_{21} &amp; a_{22} b_{22} &amp; \\cdots &amp; a_{2n} b_{2n} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{m1} b_{m1} &amp; a_{m2} b_{m2} &amp; \\cdots &amp; a_{mn} b_{mn} \\end{bmatrix}.\\] PYTORCHTENSORFLOW <pre><code>A * B\n</code></pre> <pre><code>tensor([[ 0.,  1.,  4.],\n        [ 9., 16., 25.]])\n</code></pre> <pre><code>A * B\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(2, 3), dtype=float32, numpy=\narray([[ 0.,  1.,  4.],\n       [ 9., 16., 25.]], dtype=float32)&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#236-reduction","title":"2.3.6 Reduction","text":"<p>Often, we wish to calculate the sum of a tensor\u2019s elements. To express the sum of the elements in a vector \\(x\\) of length n, we use \\(\\sum_{i=1}^n x_i\\). In code, we can call the method <code>sum</code>.</p> PYTORCHTENSORFLOW <pre><code>x = torch.arange(3, dtype=torch.float32)\nx, x.sum()\n</code></pre> <pre><code>(tensor([0., 1., 2.]), tensor(3.))\n</code></pre> <pre><code>x = tf.range(3, dtype=tf.float32)\nx, tf.reduce_sum(x)\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(3,), dtype=float32, numpy=array([0., 1., 2.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(), dtype=float32, numpy=3.0&gt;)\n</code></pre> <p>To express sums over the elements of tensors of arbitrary shape, we simply sum over all its axes.</p> PYTORCHTENSORFLOW <pre><code>A.shape, A.sum()\n</code></pre> <pre><code>(torch.Size([5, 4]), tensor(190.))\n</code></pre> <pre><code>A.shape, tf.reduce_sum(A)\n</code></pre> <pre><code>(TensorShape([5, 4]), &lt;tf.Tensor: shape=(), dtype=float32, numpy=190.0&gt;)\n</code></pre> <p>Specifying axis=1 will reduce the column dimension (axis 1) by summing up elements of all the columns.</p> PYTORCHTENSORFLOW <pre><code>A_sum_axis1 = A.sum(axis=1)\nA_sum_axis1, A_sum_axis1.shape\n</code></pre> <pre><code>(tensor([ 6., 22., 38., 54., 70.]), torch.Size([5]))\n</code></pre> <pre><code>A_sum_axis1 = tf.reduce_sum(A, axis=1)\nA_sum_axis1, A_sum_axis1.shape\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(5,), dtype=float32, numpy=array([ 6., 22., 38., 54., 70.], dtype=float32)&gt;,\n TensorShape([5]))\n</code></pre> <p>Reducing a matrix along both rows and columns via summation is equivalent to summing up all the elements of the matrix.</p> PYTORCHTENSORFLOW <pre><code>A.sum(axis=[0, 1])\n</code></pre> <pre><code>tensor(190.)\n</code></pre> <pre><code>tf.reduce_sum(A, axis=[0, 1])\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=190.0&gt;\n</code></pre> <p>A related quantity is the mean, also called the average. We calculate the mean by dividing the sum by the total number of elements. Because computing the mean is so common, it gets a dedicated library function that works analogously to sum.</p> PYTORCHTENSORFLOW <pre><code>A.mean(), A.sum() / A.numel()\n</code></pre> <pre><code>(tensor(9.5000), tensor(9.5000))\n</code></pre> <pre><code>tf.reduce_mean(A), tf.reduce_sum(A) / tf.size(A).numpy()\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(), dtype=float32, numpy=9.5&gt;,\n &lt;tf.Tensor: shape=(), dtype=float32, numpy=9.5&gt;)\n</code></pre> <p>Likewise, the function for calculating the mean can also reduce a tensor along specific axes.</p> PYTORCHTENSORFLOW <pre><code>A.mean(axis=0), A.sum(axis=0) / A.shape[0]\n</code></pre> <pre><code>(tensor([ 8.,  9., 10., 11.]), tensor([ 8.,  9., 10., 11.]))\n</code></pre> <pre><code>tf.reduce_mean(A, axis=0), tf.reduce_sum(A, axis=0) / A.shape[0]\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 8.,  9., 10., 11.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 8.,  9., 10., 11.], dtype=float32)&gt;)\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#237-non-reduction-sum","title":"2.3.7 Non-Reduction Sum","text":"<p>Sometimes it can be useful to keep the number of axes unchanged when invoking the function for calculating the sum or mean. This matters when we want to use the broadcast mechanism.</p> PYTORCHTENSORFLOW <pre><code>sum_A = A.sum(axis=1, keepdims=True)\nsum_A\n</code></pre> <pre><code>tensor([[ 6.],\n        [22.],\n        [38.],\n        [54.],\n        [70.]])\n</code></pre> <pre><code>sum_A = tf.reduce_sum(A, axis=1, keepdims=True)\nsum_A\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(5, 1), dtype=int32, numpy=\narray([[ 6],\n       [22],\n       [38],\n       [54],\n       [70]], dtype=int32)&gt;\n</code></pre> <p>For instance, since sum_A keeps its two axes after summing each row, we can divide A by sum_A with broadcasting to create a matrix where each row sums up to 1.</p> PYTORCHTENSORFLOW <pre><code>A / sum_A\n</code></pre> <pre><code>tensor([[0.0000, 0.1667, 0.3333, 0.5000],\n        [0.1818, 0.2273, 0.2727, 0.3182],\n        [0.2105, 0.2368, 0.2632, 0.2895],\n        [0.2222, 0.2407, 0.2593, 0.2778],\n        [0.2286, 0.2429, 0.2571, 0.2714]])\n</code></pre> <pre><code>A / sum_A\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(5, 4), dtype=float32, numpy=\narray([[0.        , 0.16666667, 0.33333334, 0.5       ],\n       [0.18181819, 0.22727273, 0.27272728, 0.3181818 ],\n       [0.21052632, 0.23684211, 0.2631579 , 0.28947368],\n       [0.22222222, 0.24074075, 0.25925925, 0.2777778 ],\n       [0.22857143, 0.24285714, 0.25714287, 0.2714286 ]],\n      dtype=float32)&gt;\n</code></pre> <p>If we want to calculate the cumulative sum of elements of A along some axis, say axis=0 (row by row), we can call the cumsum function. By design, this function does not reduce the input tensor along any axis.</p> PYTORCHTENSORFLOW <pre><code>A.cumsum(axis=0)\n</code></pre> <pre><code>tensor([[ 0.,  1.,  2.,  3.],\n        [ 4.,  6.,  8., 10.],\n        [12., 15., 18., 21.],\n        [24., 28., 32., 36.],\n        [40., 45., 50., 55.]])\n</code></pre> <pre><code>tf.cumsum(A, axis=0)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(5, 4), dtype=int32, numpy=\narray([[ 0,  1,  2,  3],\n       [ 4,  6,  8, 10],\n       [12, 15, 18, 21],\n       [24, 28, 32, 36],\n       [40, 45, 50, 55]], dtype=int32)&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#238-dot-products","title":"2.3.8 Dot Products","text":"<p>So far, we have only performed elementwise operations, sums, and averages. And if this was all we could do, linear algebra would not deserve its own section. Fortunately, this is where things get more interesting. One of the most fundamental operations is the dot product. Given two vectors \\(\\mathbf{x}, \\mathbf{y} \\in \\mathbb{R}^d\\), their dot product \\(\\mathbf{x}^\\top \\mathbf{y}\\) (or \\(\\langle \\mathbf{x}, \\mathbf{y} \\rangle\\)) is a sum over the products of the elements at the same position: \\(\\mathbf{x}^\\top \\mathbf{y} = \\sum_{i=1}^d x_i y_i\\).</p> PYTORCHTENSORFLOW <pre><code>y = torch.ones(4, dtype=torch.float32)\nx, y, torch.dot(x, y)\n</code></pre> <pre><code>(tensor([0., 1., 2., 3.]), tensor([1., 1., 1., 1.]), tensor(6.))\n</code></pre> <pre><code>y = tf.ones(4, dtype=tf.float32)\nx, y, tf.tensordot(x, y, axes=1)\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([0., 1., 2., 3.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([1., 1., 1., 1.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(), dtype=float32, numpy=6.0&gt;)\n</code></pre> <p>Equivalently, we can calculate the dot product of two vectors by performing an elementwise multiplication followed by a sum:</p> \\[\\mathbf{x}^\\top \\mathbf{y} = \\sum_{i=1}^d x_i y_i.\\] PYTORCHTENSORFLOW <pre><code>torch.sum(x * y)\n</code></pre> <pre><code>tensor(6.)\n</code></pre> <pre><code>tf.reduce_sum(x * y)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=6.0&gt;\n</code></pre> <p>Dot products are useful in a wide range of contexts. For example, given some set of values, denoted by a vector \\(\\mathbf{x} \\in \\mathbb{R}^d\\) and a set of weights denoted by \\(\\mathbf{w} \\in \\mathbb{R}^d\\), the weighted sum of the values in \\(\\mathbf{x}\\) according to the weights \\(\\mathbf{w}\\) could be expressed as the dot product \\(\\mathbf{x}^\\top \\mathbf{w}\\). When the weights are non-negative and sum to one (i.e., \\(\\left(\\sum_{i=1}^d {w_i} = 1\\right)\\)), the dot product expresses a weighted average. We revisit this example in the section on softmax operations (see Section 2.5).</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#239-matrix-vector-products","title":"2.3.9 Matrix-Vector Products","text":"<p>Now that we know how to calculate dot products, we can begin to understand the product between an \\(m \\times n\\) matrix \\(\\mathbf{A}\\) and an \\(n\\)-dimensional vector \\(x\\). To start off, we visualize our matrix in terms of its row vectors:</p> \\[\\mathbf{A} = \\begin{bmatrix} \\mathbf{a}^\\top_{1} \\\\ \\mathbf{a}^\\top_{2} \\\\ \\vdots \\\\ \\mathbf{a}^\\top_{m} \\end{bmatrix},\\] <p>where each \\(\\mathbf{a}^\\top_{i} \\in \\mathbb{R}^n\\) is a row vector representing the \\(i^\\mathrm{th}\\) row of the matrix \\(\\mathbf{A}\\). </p> <p>The maxtri-vector product \\(\\mathbf{A}\\mathbf{x}\\) is simply a column vector of length \\(m\\) whose \\(i^\\mathrm{th}\\) element is the dot product \\(\\mathbf{a}^\\top_i \\mathbf{x}\\):</p> \\[\\mathbf{A} = \\begin{bmatrix} \\mathbf{a}^\\top_{1} \\\\ \\mathbf{a}^\\top_{2} \\\\ \\vdots \\\\ \\mathbf{a}^\\top_{m} \\end{bmatrix} \\quad \\mathbf{A}\\mathbf{x} = \\begin{bmatrix} \\mathbf{a}^\\top_{1} \\mathbf{x} \\\\ \\mathbf{a}^\\top_{2} \\mathbf{x} \\\\ \\vdots \\\\ \\mathbf{a}^\\top_{m} \\mathbf{x} \\end{bmatrix}.\\] <p>We can think of the matrix-vector product \\(\\mathbf{A}\\mathbf{x}\\) as simply performing \\(m\\) matrix-vector products and stitching the results together to form a vector of length \\(m\\).</p> PYTORCHTENSORFLOW <pre><code>A.shape, x.shape, torch.mv(A, x)\n</code></pre> <pre><code>(torch.Size([5, 4]), torch.Size([4]), tensor([14., 38., 62., 86., 110.]))\n</code></pre> <pre><code>A.shape, x.shape, tf.linalg.matvec(A, x)\n</code></pre> <pre><code>(TensorShape([5, 4]),\n TensorShape([4]),\n &lt;tf.Tensor: shape=(5,), dtype=int32, numpy=array([14, 38, 62, 86, 110], dtype=int32)&gt;)\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#2310-matrix-matrix-multiplication","title":"2.3.10 Matrix-Matrix Multiplication","text":"<p>Once you have gotten the hang of dot products and matrix\u2013vector products, then matrix\u2013matrix multiplication should be straightforward.</p> <p>Say that we have two matrices \\(\\mathbf{A} \\in \\mathbb{R}^{n \\times k}\\) and \\(\\mathbf{B} \\in \\mathbb{R}^{k \\times m}\\):</p> \\[\\mathbf{A} = \\begin{bmatrix} \\mathbf{a_{11}} &amp; \\mathbf{a_{12}} &amp; \\cdots &amp; \\mathbf{a_{1k}} \\\\ \\mathbf{a_{21}} &amp; \\mathbf{a_{22}} &amp; \\cdots &amp; \\mathbf{a_{2k}} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\mathbf{a_{n1}} &amp; \\mathbf{a_{n2}} &amp; \\cdots &amp; \\mathbf{a_{nk}} \\end{bmatrix}, \\quad \\mathbf{B} = \\begin{bmatrix} \\mathbf{b_{11}} &amp; \\mathbf{b_{12}} &amp; \\cdots &amp; \\mathbf{b_{1m}} \\\\ \\mathbf{b_{21}} &amp; \\mathbf{b_{22}} &amp; \\cdots &amp; \\mathbf{b_{2m}} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\mathbf{b_{k1}} &amp; \\mathbf{b_{k2}} &amp; \\cdots &amp; \\mathbf{b_{km}} \\end{bmatrix}.\\] <p>Let us focus on computing the matrix product \\(\\mathbf{C} = \\mathbf{A}\\mathbf{B}\\), where \\(\\mathbf{C} \\in \\mathbb{R}^{n \\times m}\\). To produce the matrix product \\(\\mathbf{C}\\), we will carry out \\(n\\) matrix-vector products and form the matrix \\(\\mathbf{C}\\) by concatenating the results together into a matrix with \\(n\\) rows.</p> \\[\\mathbf{C} = \\begin{bmatrix} \\mathbf{a_{11}} \\mathbf{B} &amp; \\mathbf{a_{12}} \\mathbf{B} &amp; \\cdots &amp; \\mathbf{a_{1k}} \\mathbf{B} \\\\ \\mathbf{a_{21}} \\mathbf{B} &amp; \\mathbf{a_{22}} \\mathbf{B} &amp; \\cdots &amp; \\mathbf{a_{2k}} \\mathbf{B} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\mathbf{a_{n1}} \\mathbf{B} &amp; \\mathbf{a_{n2}} \\mathbf{B} &amp; \\cdots &amp; \\mathbf{a_{nk}} \\mathbf{B} \\end{bmatrix}.\\] <p>Note that \\(\\mathbf{a_{ij}} \\mathbf{B}\\) is a matrix-vector product. Here, we are writing \\(\\mathbf{a_{ij}}\\) to denote the row vector \\(\\mathbf{A}[i,:]\\) and \\(\\mathbf{a_{ij}} \\mathbf{B}\\) still denotes a matrix-matrix product but one in which we multiply a row vector by a matrix.</p> PYTORCHTENSORFLOW <pre><code>B = torch.ones(3, 4)\ntorch.mm(A, B), A@B\n</code></pre> <pre><code>(tensor([[ 3.,  3.,  3.,  3.],\n     [12., 12., 12., 12.]]),\ntensor([[ 3.,  3.,  3.,  3.],\n     [12., 12., 12., 12.]]))\n</code></pre> <pre><code>B = tf.ones((3, 4))\ntf.matmul(A, B), A@B\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(2, 4), dtype=int32, numpy=\narray([[ 3,  3,  3,  3],\n       [12, 12, 12, 12]], dtype=int32)&gt;,\n &lt;tf.Tensor: shape=(2, 4), dtype=int32, numpy=\narray([[ 3,  3,  3,  3],\n       [12, 12, 12, 12]], dtype=int32)&gt;)\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#2311-norms","title":"2.3.11 Norms","text":"<p>Some of the most useful operators in linear algebra are norms. Informally, the norm of a vector tells us how big it is. For instance, the \\(l_2\\)  norm measures the (Euclidean) length of a vector. Here, we are employing a notion of size that concerns the magnitude of a vector\u2019s components (not its dimensionality).</p> <p>A norm is a function \\(f\\) that maps a vector to a scalar, satisfying a handful of properties. Given any vector \\(\\mathbf{x}\\), the first property says that if we scale all the elements of a vector by a constant factor \\(\\alpha\\), its norm also scales by the absolute value of the same constant factor:</p> \\[f(\\alpha \\mathbf{x}) = |\\alpha| f(\\mathbf{x}).\\] <p>The second property is the familiar triangle inequality:</p> \\[f(\\mathbf{x} + \\mathbf{y}) \\leq f(\\mathbf{x}) + f(\\mathbf{y}).\\] <p>The third property simply says that the norm must be non-negative:</p> \\[f(\\mathbf{x}) \\geq 0.\\] <p>That makes sense, as in most contexts the smallest size for anything is 0. The final property requires that the smallest norm is achieved and only achieved by a vector consisting of all zeros.</p> \\[\\forall i, [\\mathbf{x}]_i = 0 \\Leftrightarrow f(\\mathbf{x})=0.\\] <p>You might notice that norms sound a lot like measures of distance. And with good reason! In fact, the \\(l_2\\) norm of a vector is the square root of the total squared distance of the vector:</p> \\[\\|\\mathbf{x}\\|_2 = \\sqrt{\\sum_{i=1}^n x_i^2},\\] <p>where the subscript \\(2\\) is often omitted in \\(l_2\\) norms. In the above equation, the notation \\(\\mathbf{x}_i\\) refers to the scalar element of a vector \\(\\mathbf{x}\\).</p> <p>In code, we can calculate the \\(l_2\\) norm of a vector by calling <code>norm</code>.</p> PYTORCHTENSORFLOW <pre><code>u = torch.tensor([3.0, -4.0])\ntorch.norm(u)\n</code></pre> <pre><code>tensor(5.)\n</code></pre> <pre><code>u = tf.constant([3.0, -4.0])\ntf.norm(u)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=5.0&gt;\n</code></pre> <p>In deep learning, we work more often with the squared \\(l_2\\) norm. You might have noticed this from the formula for the objective function of linear regression, which involves a sum of squared terms. We can calculate this quantity via <code>torch.dot</code>.</p> PYTORCHTENSORFLOW <pre><code>torch.dot(u, u)\n</code></pre> <pre><code>tensor(25.)\n</code></pre> <pre><code>tf.tensordot(u, u, axes=1)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=25.0&gt;\n</code></pre> <p>The \\(l_1\\) norm of a vector is calculated as the sum of the absolute values of the vector\u2019s components:</p> \\[\\|\\mathbf{x}\\|_1 = \\sum_{i=1}^n \\left|x_i \\right|.\\] <p>As compared with the \\(l_2\\) norm, it is less influenced by outliers. To calculate the \\(l_1\\) norm, we compose <code>abs</code> and <code>sum</code>.</p> PYTORCHTENSORFLOW <pre><code>torch.abs(u).sum()\n</code></pre> <pre><code>tensor(7.)\n</code></pre> <pre><code>tf.reduce_sum(tf.abs(u))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=7.0&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#24-calculus","title":"2.4 Calculus","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#241-derivatives-and-differentiation","title":"2.4.1. Derivatives and Differentiation","text":"<p>Put simply, a derivative is the rate of change in a function with respect to changes in its arguments. Derivatives can tell us how rapidly a loss function would increase or decrease were we to increase or decrease each parameter by an infinitesimally small amount. Formally, for functions \\(f: \\mathbb{R} \\rightarrow \\mathbb{R}\\), the derivative of \\(f\\) is defined as</p> \\[f'(x) = \\lim_{h \\rightarrow 0} \\frac{f(x+h) - f(x)}{h}.\\] <p>The notation for derivatives varies quite a bit. The following are all common ways of expressing the same thing:</p> \\[\\frac{df(x)}{dx} = f'(x) = D_x f(x) = D_x y = y' = \\frac{dy}{dx}.\\] <p>The derivative of a function \\(f\\) with respect to its argument \\(x\\) is defined as</p> \\[f'(x) = \\lim_{h \\rightarrow 0} \\frac{f(x+h) - f(x)}{h}.\\] <p>In deep learning, our models are parameterized by sets of weights and biases. We often want to optimize these parameters to minimize some loss function, e.g., to improve our model\u2019s accuracy on held-out data or to minimize the production cost. In order to do so, we will need to take derivatives of these loss functions with respect to our model parameters. Thus it is worth reviewing the basics of derivatives.</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#242-partial-derivatives","title":"2.4.2. Partial Derivatives","text":"<p>When our functions depend on more than one variable, we call them multivariate functions. Given a multivariate function \\(f(\\mathbf{x}) : \\mathbb{R}^n \\rightarrow \\mathbb{R}\\), its partial derivative with respect to \\(x_i\\) is</p> \\[\\frac{\\partial}{\\partial x_i} f(\\mathbf{x}) = \\lim_{h \\rightarrow 0} \\frac{f(\\mathbf{x} + h \\mathbf{e}_i) - f(\\mathbf{x})}{h},\\] <p>where \\(\\mathbf{e}_i\\) is a vector of zeros with a one in the \\(i^\\mathrm{th}\\) coordinate. In multivariate functions, we can take derivatives with respect to any variable, treating all others as constants. This is called partial differentiation. To calculate a partial derivative, we simply differentiate as usual, following all the usual rules, but treating all the other variables as constants.</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#243-gradients","title":"2.4.3. Gradients","text":"<p>The gradient of a multivariate function \\(f: \\mathbb{R}^n \\rightarrow \\mathbb{R}\\) is the vector containing all of the partial derivatives, denoted \\(\\nabla_{\\mathbf{x}} f(\\mathbf{x})\\):</p> \\[\\nabla_{\\mathbf{x}} f(\\mathbf{x}) = \\begin{bmatrix} \\frac{\\partial}{\\partial x_1} f(\\mathbf{x})  \\\\ \\frac{\\partial}{\\partial x_2} f(\\mathbf{x}) \\\\ \\vdots \\\\ \\frac{\\partial}{\\partial x_n} f(\\mathbf{x}) \\end{bmatrix}.\\] <p>The gradient points in the direction of the greatest rate of increase of the function \\(f\\), and its magnitude is the slope of the function in that direction. The gradient of a function \\(f: \\mathbb{R}^n \\rightarrow \\mathbb{R}\\) gives us a vector \\(\\nabla_{\\mathbf{x}} f(\\mathbf{x})\\) whose entries are the partial derivatives of \\(f\\) with respect to each of the input variables. This vector points in the direction of greatest increase of \\(f\\) and its magnitude is the slope in that direction.</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#244-chain-rule","title":"2.4.4. Chain Rule","text":"<p>The chain rule allows us to differentiate compositions of functions. Given two functions \\(f: \\mathbb{R}^m \\rightarrow \\mathbb{R}^n\\) and \\(g: \\mathbb{R}^n \\rightarrow \\mathbb{R}^p\\), the chain rule states that the gradient of the composition \\(g \\circ f\\) is given by</p> \\[\\nabla (\\mathbf{g} \\circ \\mathbf{f})(\\mathbf{x}) = \\mathbf{J}_{\\mathbf{f}}(\\mathbf{x})^\\top \\mathbf{J}_{\\mathbf{g}}(\\mathbf{f}(\\mathbf{x})),\\] <p>where \\(\\mathbf{J}_{\\mathbf{f}}(\\mathbf{x})\\) and \\(\\mathbf{J}_{\\mathbf{g}}(\\mathbf{f}(\\mathbf{x}))\\) are the Jacobian matrices of \\(f\\) and \\(g\\), respectively. In other words, the gradient of the function composition is the matrix product of the two Jacobian matrices.</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#245-discussion","title":"2.4.5. Discussion","text":"<p>While we have just scratched the surface of a deep topic, a number of concepts already come into focus:  - First, the composition rules for differentiation can be applied routinely, enabling us to compute gradients automatically. This task requires no creativity and thus we can focus our cognitive powers elsewhere.  - Second, computing the derivatives of vector-valued functions requires us to multiply matrices as we trace the dependency graph of variables from output to input. In particular, this graph is traversed in a forward direction when we evaluate a function and in a backwards direction when we compute gradients. Later chapters will formally introduce backpropagation, a computational procedure for applying the chain rule.</p> <p>From the viewpoint of optimization, gradients allow us to determine how to move the parameters of a model in order to lower the loss, and each step of the optimization algorithms used throughout this book will require calculating the gradient.</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#25-automatic-differentiation","title":"2.5 Automatic Differentiation","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#251-a-simple-example","title":"2.5.1. A Simple Example","text":"<p>To get started we import the <code>autograd</code> package. Here, <code>autograd</code> stands for automatic differentiation.</p> PYTORCHTENSORFLOW <pre><code>x = torch.arange(4.0)\nx\n</code></pre> <pre><code>tensor([0., 1., 2., 3.], requires_grad=True)\n</code></pre> <pre><code>x = tf.range(4.0)\nx\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([0., 1., 2., 3.], dtype=float32)&gt;\n</code></pre> <p>Before we can compute gradients, we need to allocate memory for the gradients we wish to calculate.</p> PYTORCHTENSORFLOW <pre><code>x.requires_grad_(True)  # Same as `x = torch.arange(4.0, requires_grad=True)`\nx.grad  # The default value is None\n</code></pre> <pre><code>tensor([0., 1., 2., 3.], requires_grad=True)\n</code></pre> <pre><code>x = tf.Variable(x)\nx\n</code></pre> <pre><code>&lt;tf.Variable 'Variable:0' shape=(4,) dtype=float32, numpy=array([0., 1., 2., 3.], dtype=float32)&gt;\n</code></pre> <p>Now let's compute the sum of the squares of <code>x</code>.</p> PYTORCHTENSORFLOW <pre><code>y = 2 * torch.dot(x, x)\ny\n</code></pre> <pre><code>tensor(28., grad_fn=&lt;MulBackward0&gt;)\n</code></pre> <pre><code>y = 2 * tf.tensordot(x, x, axes=1)\ny\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=28.0&gt;\n</code></pre> <p>We can now take the gradient of y with respect to x by calling its backward method. Next, we can access the gradient via x\u2019s grad attribute.</p> PYTORCHTENSORFLOW <pre><code>y.backward()\nx.grad\n</code></pre> <pre><code>tensor([ 0.,  4.,  8., 12.])\n</code></pre> <pre><code>with tf.GradientTape() as t:\n    y = 2 * tf.tensordot(x, x, axes=1)\nx_grad = t.gradient(y, x)\nx_grad\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 0.,  4.,  8., 12.], dtype=float32)&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#252-backward-for-non-scalar-variables","title":"2.5.2. Backward for Non-Scalar Variables","text":"<p>When y is a vector, the most natural representation of the derivative of y with respect to a vector x is a matrix called the Jacobian that contains the partial derivatives of each component of y with respect to each component of x. Likewise, for higher-order y and x, the result of differentiation could be an even higher-order tensor.</p> <p>While Jacobians do show up in some advanced machine learning techniques, more commonly we want to sum up the gradients of each component of y with respect to the full vector x, yielding a vector of the same shape as x. For example, we often have a vector representing the value of our loss function calculated separately for each example among a batch of training examples. Here, we just want to sum up the gradients computed individually for each example.</p> PYTORCHTENSORFLOW <pre><code>x.grad.zero_()\ny = x.sum()\ny.backward()\nx.grad\n</code></pre> <pre><code>tensor([1., 1., 1., 1.])\n</code></pre> <pre><code>with tf.GradientTape() as t:\n    y = tf.reduce_sum(x)\nx_grad = t.gradient(y, x)\nx_grad\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([1., 1., 1., 1.], dtype=float32)&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#253-detaching-computation","title":"2.5.3. Detaching Computation","text":"<p>Sometimes, we wish to move some calculations outside of the recorded computational graph. For example, say that y is a function of x, and that we wish to compute the gradient of y with respect to x, but that we plan to use the value of y, say y_val later on, without ever computing further derivatives of y with respect to x.</p> PYTORCHTENSORFLOWPYTORCHTENSORFLOW <pre><code>x.grad.zero_()\ny = x * x\nu = y.detach()\nz = u * x\n\nz.sum().backward()\nx.grad == u\n</code></pre> <pre><code>tensor([True, True, True, True])\n</code></pre> <pre><code># Set persistent=True to preserve the compute graph.\n# This lets us run t.gradient more than once\nwith tf.GradientTape(persistent=True) as t:\n    y = x * x\n    u = tf.stop_gradient(y)\n    z = u * x\n\nx_grad = t.gradient(z, x)\nx_grad == u\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=bool, numpy=array([ True,  True,  True,  True])&gt;\n</code></pre> <pre><code>x.grad.zero_()\ny.sum().backward()\nx.grad == 2 * x\n</code></pre> <pre><code>tensor([True, True, True, True])\n</code></pre> <pre><code>x_grad = t.gradient(y.sum(), x)\nx_grad == 2 * x\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=bool, numpy=array([ True,  True,  True,  True])&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#254-computing-the-gradient-of-python-control-flow","title":"2.5.4. Computing the Gradient of Python Control Flow","text":"<p>One benefit of using automatic differentiation is that even if the computational graph of the function contains Python\u2019s control flow (such as conditional and loops), we can still calculate the gradient of the resulting variable. Consider the following program:</p> PYTORCHTENSORFLOW <pre><code>def f(a):\n    b = a * 2\n    while b.norm() &lt; 1000:\n        b = b * 2\n    if b.sum() &gt; 0:\n        c = b\n    else:\n        c = 100 * b\n    return c\n</code></pre> <pre><code>def f(a):\n    b = a * 2\n    while tf.norm(b) &lt; 1000:\n        b = b * 2\n    if tf.reduce_sum(b) &gt; 0:\n        c = b\n    else:\n        c = 100 * b\n    return c\n</code></pre> <p>Let us compute the gradient.</p> PYTORCHTENSORFLOW <pre><code>a = torch.randn(size=(), requires_grad=True)\nd = f(a)\nd.backward()\na.grad == d / a\n</code></pre> <pre><code>tensor(True)\n</code></pre> <pre><code>a = tf.Variable(tf.random.normal(shape=()))\nwith tf.GradientTape() as t:\n    d = f(a)\nd_grad = t.gradient(d, a)\nd_grad == d / a\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=bool, numpy=True&gt;\n</code></pre>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#255-discussion","title":"2.5.5. Discussion","text":"<p>You have now gotten a taste of the power of automatic differentiation. The development of libraries for calculating derivatives both automatically and efficiently has been a massive productivity booster for deep learning practitioners, liberating them so they can focus on less menial. Moreover, autograd lets us design massive models for which pen and paper gradient computations would be prohibitively time consuming. Interestingly, while we use autograd to optimize models (in a statistical sense) the optimization of autograd libraries themselves (in a computational sense) is a rich subject of vital interest to framework designers. Here, tools from compilers and graph manipulation are leveraged to compute results in the most expedient and memory-efficient manner.</p> <p>For now, try to remember these basics:  (i) attach gradients to those variables with respect to which we desire derivatives; (ii) record the computation of the target value;  (iii) execute the backpropagation function; (iv) access the resulting gradient.</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#26-probability-and-statistics","title":"2.6 Probability and Statistics","text":"<p>One way or another, machine learning is all about uncertainty. In supervised learning, we want to predict something unknown (the target) given something known (the features). Depending on our objective, we might attempt to predict the most likely value of the target. Or we might predict the value with the smallest expected distance from the target. And sometimes we wish not only to predict a specific value but to quantify our uncertainty. For example, given some features describing a patient, we might want to know how likely they are to suffer a heart attack in the next year. In unsupervised learning, we often care about uncertainty. To determine whether a set of measurements are anomalous, it helps to know how likely one is to observe values in a population of interest. Furthermore, in reinforcement learning, we wish to develop agents that act intelligently in various environments. This requires reasoning about how an environment might be expected to change and what rewards one might expect to encounter in response to each of the available actions.</p> <p>Probability is the mathematical field concerned with reasoning under uncertainty. Given a probabilistic model of some process, we can reason about the likelihood of various events. The use of probabilities to describe the frequencies of repeatable events (like coin tosses) is fairly uncontroversial. In fact, frequentist scholars adhere to an interpretation of probability that applies only to such repeatable events. By contrast Bayesian scholars use the language of probability more broadly to formalize reasoning under uncertainty. Bayesian probability is characterized by two unique features: (i) assigning degrees of belief to non-repeatable events, e.g., what is the probability that a dam will collapse?; and (ii) subjectivity. While Bayesian probability provides unambiguous rules for how one should update their beliefs in light of new evidence, it allows for different individuals to start off with different prior beliefs. Statistics helps us to reason backwards, starting off with collection and organization of data and backing out to what inferences we might draw about the process that generated the data. Whenever we analyze a dataset, hunting for patterns that we hope might characterize a broader population, we are employing statistical thinking. Many courses, majors, theses, careers, departments, companies, and institutions have been devoted to the study of probability and statistics. While this section only scratches the surface, we will provide the foundation that you need to begin building models.</p>"},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#261-basics","title":"2.6.1. Basics","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#262-advanced-topics","title":"2.6.2 Advanced Topics","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#263-random-variables","title":"2.6.3 Random Variables","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#264-multile-random-variables","title":"2.6.4 Multile Random Variables","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#265-expectation","title":"2.6.5 Expectation","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#266-variance","title":"2.6.6 Variance","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#267-summary","title":"2.6.7 Summary","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#27-documentation","title":"2.7 Documentation","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#271-functions-and-classes-in-a-module","title":"2.7.1. Functions and Classes in a Module","text":""},{"location":"AI/NOTE-D2L/CH2-PRE/ch2-pre/#272-specific-functions-and-classes","title":"2.7.2. Specific Functions and Classes","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/","title":"CH03 - Linear Neural Networks","text":"<p>Before we worry about making our neural networks deep, it will be helpful to implement some shallow ones, for which the inputs connect directly to the outputs. This will prove important for a few reasons. First, rather than getting distracted by complicated architectures, we can focus on the basics of neural network training, including parametrizing the output layer, handling data, specifying a loss function, and training the model. Second, this class of shallow networks happens to comprise the set of linear models, which subsumes many classical methods of statistical prediction, including linear and softmax regression. Understanding these classical tools is pivotal because they are widely used in many contexts and we will often need to use them as baselines when justifying the use of fancier architectures. This chapter will focus narrowly on linear regression and the next one will extend our modeling repertoire by developing linear neural networks for classification.</p>"},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#31-linear-regression","title":"3.1. Linear Regression","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#311-basics","title":"3.1.1. Basics","text":"<p>Regression problems pop up whenever we want to predict a numerical value. </p>"},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3111-models","title":"3.1.1.1 Models","text":"<p>At the heart of every solution is a model that describes how features can be transformed into an estimate of the target. The assumption of linearity means that the expected value of the target (price) can be expressed as a weighted sum of the features (area and age):</p> \\[\\mathbb{E}[\\text{price}|\\text{area,age}] = w_{\\text{area}} \\cdot \\text{area} + w_{\\text{age}} \\cdot \\text{age} + b\\] <p>Here, \\(w_{\\text{area}}\\) and \\(w_{\\text{age}}\\) are weights that determine the influence of each feature on our prediction and \\(b\\) is the bias term, which offsets any constant factors that would shift our prediction away from the true price.</p> <p>Strictly speaking, the formular is an affine transformation of input features, which is characterized by a linear transformation of features via a weighted sum, combined with a translation via the added bias. Given a dataset, our goal is to choose the weights \\(w_{\\text{area}}\\) and \\(w_{\\text{age}}\\) and the bias \\(b\\) such that on average, the predictions actually made by our model are as close as possible to the true prices observed in the dataset.</p>"},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3112-loss-functions","title":"3.1.1.2 Loss Functions","text":"<p>Naturally, fitting our model to the data requires that we agree on some measure of fitness (or, equivalently, of unfitness). Loss functions quantify the distance between the real and predicted values of the target. The loss will usually be a nonnegative number where smaller values are better and perfect predictions incur a loss of 0. For regression problems, the most common loss function is the squared error. When our prediction for an example \\(i\\) is \\(\\hat{y}^{(i)}\\) and the corresponding true label is \\(y^{(i)}\\), the squared error is given by:</p> \\[\\mathcal{L}(\\mathbf{w},b) = \\frac{1}{2} \\left(\\hat{y}^{(i)} - y^{(i)}\\right)^2\\] <p>Note that large differences between estimate and observation are penalized much more than small ones due to the quadratic dependence. To measure the quality of a model on the entire dataset, we simply average (or equivalently, sum) the losses on the training set. To measure the quality of a model on the entire dataset of <code>n</code> examples, we simply average (or equivalently, sum) the losses on the training set:</p> \\[\\mathcal{L}(\\mathbf{w},b) = \\frac{1}{n} \\sum_{i=1}^n \\left(\\hat{y}^{(i)} - y^{(i)}\\right)^2\\] <p>When training the model, we seek parameters \\(\\mathbf{w}^*,b^*\\) that minimize the total loss across all training examples:</p> \\[\\mathbf{w}^*,b^* = \\arg \\min_{\\mathbf{w},b} \\mathcal{L}(\\mathbf{w},b)\\]"},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3113-analytic-solution","title":"3.1.1.3 Analytic Solution","text":"<p>Unlike most of the models that we will cover, linear regression presents us with a surprisingly easy optimization problem. In particular, we can find the optimal parameters (as assessed on the training data) analytically by applying a simple formula as follows. First, we can collect all the data examples into a matrix \\(\\mathbf{X}\\) and collect all the corresponding target values in a vector \\(\\mathbf{y}\\). Using linear algebra, we can express the squared error loss for all examples as:</p> \\[\\mathcal{L}(\\mathbf{w},b) = \\frac{1}{2} (\\mathbf{X} \\mathbf{w} + b \\mathbf{1} - \\mathbf{y})^\\top (\\mathbf{X} \\mathbf{w} + b \\mathbf{1} - \\mathbf{y})\\] <p>where we have used the fact that the vector of all ones \\(\\mathbf{1}\\) satisfies \\(\\mathbf{X}^\\top \\mathbf{1} = \\mathbf{0}\\). Expanding out the squared terms and reorganizing terms, we get:</p> \\[\\mathcal{L}(\\mathbf{w},b) = \\frac{1}{2} \\left(\\mathbf{w}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{w} + b^2 \\mathbf{1}^\\top \\mathbf{1} + \\mathbf{y}^\\top \\mathbf{y} - 2 \\mathbf{w}^\\top \\mathbf{X}^\\top \\mathbf{y} - 2 b \\mathbf{1}^\\top \\mathbf{X} \\mathbf{w} + 2 b \\mathbf{1}^\\top \\mathbf{y} \\right)\\] <p>Since the first three terms are constant with respect to \\(\\mathbf{w}\\) and \\(b\\), minimizing the loss is equivalent to minimizing:</p> \\[\\mathcal{L}(\\mathbf{w},b) = \\frac{1}{2} \\left(\\mathbf{w}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{w} - 2 \\mathbf{w}^\\top \\mathbf{X}^\\top \\mathbf{y} + b \\mathbf{1}^\\top \\mathbf{1} + 2 b \\mathbf{1}^\\top \\mathbf{y} \\right)\\] <p>Since the first three terms are constant with respect to \\(\\mathbf{w}\\) and \\(b\\), minimizing the loss is equivalent to minimizing:</p> \\[\\mathcal{L}(\\mathbf{w},b) = \\frac{1}{2} \\left(\\mathbf{w}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{w} - 2 \\mathbf{w}^\\top \\mathbf{X}^\\top \\mathbf{y} + b \\mathbf{1}^\\top \\mathbf{1} + 2 b \\mathbf{1}^\\top \\mathbf{y} \\right)\\] <p>Note that the first term does not depend on \\(b\\) and the second term does not depend on \\(\\mathbf{w}\\). Dropping these terms leaves us with the optimization problem of minimizing:</p> \\[\\mathcal{L}(\\mathbf{w},b) = \\frac{1}{2} \\left(\\mathbf{w}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{w} - 2 \\mathbf{w}^\\top \\mathbf{X}^\\top \\mathbf{y} \\right)\\] <p>Recall that \\(\\mathbf{X}^\\top \\mathbf{X}\\) is a Gram matrix. It is guaranteed to be positive semidefinite, which implies that \\(\\mathbf{w}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{w} \\geq 0\\). Consequently, the quadratic term is always nonnegative and the problem is convex. Setting the gradient equal to zero yields the analytic solution:</p> \\[\\mathbf{w}^* = (\\mathbf{X}^\\top \\mathbf{X})^{-1} \\mathbf{X}^\\top \\mathbf{y}\\] <p>This is a system of \\(d\\) linear equations in \\(d\\) unknowns. Assuming that the inverse \\((\\mathbf{X}^\\top \\mathbf{X})^{-1}\\) exists, it follows that the unique global minimum is achieved when:</p> \\[\\mathbf{w}^* = (\\mathbf{X}^\\top \\mathbf{X})^{-1} \\mathbf{X}^\\top \\mathbf{y}\\]"},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3114-minibatch-stochastic-gradient-descent","title":"3.1.1.4 Minibatch Stochastic Gradient Descent","text":"<p>Fortunately, even in cases where we cannot solve the models analytically, we can still often train models effectively in practice. Moreover, for many tasks, those hard-to-optimize models turn out to be so much better that figuring out how to train them ends up being well worth the trouble.</p> <p>The key technique for optimizing nearly every deep learning model, and which we will call upon throughout this book, consists of iteratively reducing the error by updating the parameters in the direction that incrementally lowers the loss function. This algorithm is called gradient descent. </p> <p>The most naive application of gradient descent consists of taking the derivative of the loss function, which is an average of the losses computed on every single example in the dataset. In practice, this can be extremely slow: we must pass over the entire dataset before making a single update, even if the update steps might be very powerful. Even worse, if there is a lot of redundancy in the training data, the benefit of a full update is limited.</p> <p>The other extreme is to consider only a single example at a time and to take update steps based on one observation at a time. The resulting algorithm, stochastic gradient descent (SGD) can be an effective strategy, even for large datasets. Unfortunately, SGD has drawbacks, both computational and statistical. One problem arises from the fact that processors are a lot faster multiplying and adding numbers than they are at moving data from main memory to processor cache. It is up to an order of magnitude more efficient to perform a matrix\u2013vector multiplication than a corresponding number of vector\u2013vector operations. This means that it can take a lot longer to process one sample at a time compared to a full batch. A second problem is that some of the layers, such as batch normalization, only work well when we have access to more than one observation at a time.</p> <p>The solution to both problems is to pick an intermediate strategy: rather than taking a full batch or only a single sample at a time, we take a minibatch of observations (Li et al., 2014). The specific choice of the size of the said minibatch depends on many factors, such as the amount of memory, the number of accelerators, the choice of layers, and the total dataset size. Despite all that, a number between 32 and 256, preferably a multiple of a large power of 2, is a good start. This leads us to minibatch stochastic gradient descent.</p> <p>In its most basic form, in each iteration \\(t\\) we first randomly sample a minibatch \\(\\mathcal{B}^{(t)}\\) consisting of a fixed number of training examples. We then compute the derivative (gradient) of the average loss on the minibatch (averaging loss over the minibatch examples) with regard to the model parameters. Finally, we multiply the gradient by a predetermined positive value \\(\\eta\\) and subtract the resulting term from the current parameter values. Next, we iterate over the dataset again and again until we find an answer that is good enough (or until we run out of time).</p> \\[\\mathbf{w}^{(t+1)} \\leftarrow \\mathbf{w}^{(t)} - \\eta \\frac{1}{|\\mathcal{B}^{(t)}|} \\sum_{i \\in \\mathcal{B}^{(t)}} \\nabla_{\\mathbf{w}} \\mathcal{L}^{(i)} (\\mathbf{w}^{(t)})\\] <p>In summary, minibatch SGD proceeds as follows: (i) initialize the values of the model parameters, typically at random; (ii) iteratively sample random minibatches from the data, updating the parameters in the direction of the negative gradient. For quadratic losses and affine transformations, this has a closed-form expansion:</p> \\[\\mathbf{w}^{(t+1)} \\leftarrow (\\mathbf{X}^\\top \\mathbf{X})^{-1} \\mathbf{X}^\\top \\mathbf{y}\\] <p>Frequently minibatch size and learning rate are user-defined. Such tunable parameters that are not updated in the training loop are called hyperparameters. They can be tuned automatically by a number of techniques, such as Bayesian optimization. In the end, the quality of the solution is typically assessed on a separate validation dataset (or validation set).</p>"},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3115-gradient-descent-for-linear-regression","title":"3.1.1.5 Gradient Descent for Linear Regression","text":"<p>Given the model \\(\\hat{y} = \\mathbf{w}^\\top \\mathbf{x} + b\\) we can now make predictions for a new example, e.g., predicting the sales price of a previously unseen house given its area \\(x_{1}\\) and age \\(x_{2}\\). Deep learning practitioners have taken to calling the prediction phase inference but this is a bit of a misnomer\u2014inference refers broadly to any conclusion reached on the basis of evidence, including both the values of the parameters and the likely label for an unseen instance. If anything, in the statistics literature inference more often denotes parameter inference and this overloading of terminology creates unnecessary confusion when deep learning practitioners talk to statisticians. In the following we will stick to prediction whenever possible.</p>"},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#312-vectorization-for-speed","title":"3.1.2. Vectorization for Speed","text":"<p>When training our models, we typically want to process whole minibatches of examples simultaneously. Doing this efficiently requires that we vectorize the calculations and leverage fast linear algebra libraries rather than writing costly for-loops in Python.</p> <p>To see why this matters so much, let\u2019s consider two methods for adding vectors. To start, we instantiate two 10,000-dimensional vectors containing all 1s. In the first method, we loop over the vectors with a Python for-loop. In the second, we rely on a single call to +.</p>"},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#313-the-normal-distribution-and-squared-loss","title":"3.1.3. The Normal Distribution and Squared Loss","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#314-linear-regression-as-a-neural-network","title":"3.1.4. Linear Regression as a Neural Network","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#315-summary","title":"3.1.5. Summary","text":"<p>In this section, we introduced traditional linear regression, where the parameters of a linear function are chosen to minimize squared loss on the training set. We also motivated this choice of objective both via some practical considerations and through an interpretation of linear regression as maximimum likelihood estimation under an assumption of linearity and Gaussian noise. After discussing both computational considerations and connections to statistics, we showed how such linear models could be expressed as simple neural networks where the inputs are directly wired to the output(s). While we will soon move past linear models altogether, they are sufficient to introduce most of the components that all of our models require: parametric forms, differentiable objectives, optimization via minibatch stochastic gradient descent, and ultimately, evaluation on previously unseen data.</p>"},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#32-object-oriented-design-for-implementation","title":"3.2. Object-Oriented Design for Implementation","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#321-utilities","title":"3.2.1. Utilities","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#322-models","title":"3.2.2. Models","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#323-data","title":"3.2.3. Data","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#324-training","title":"3.2.4. Training","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#325-summary","title":"3.2.5. Summary","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#33-synthetic-regression-data","title":"3.3. Synthetic Regression Data","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#331-generating-the-dataset","title":"3.3.1. Generating the Dataset","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#332-reading-the-dataset","title":"3.3.2. Reading the Dataset","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#333-concise-implementation-of-the-data-loader","title":"3.3.3. Concise Implementation of the Data Loader","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#334-summary","title":"3.3.4. Summary","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#34-linear-regression-implementation-from-scratch","title":"3.4. Linear Regression Implementation from Scratch","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#341-defining-the-model","title":"3.4.1. Defining the Model","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#342-defining-the-loss-function","title":"3.4.2. Defining the Loss Function","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#343-defining-the-optimization-algorithm","title":"3.4.3. Defining the Optimization Algorithm","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#344-training","title":"3.4.4. Training","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#345-summary","title":"3.4.5. Summary","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#35-concise-implementation-of-linear-regression","title":"3.5. Concise Implementation of Linear Regression","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#351-defining-the-model","title":"3.5.1. Defining the Model","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#352-defining-the-loss-function","title":"3.5.2. Defining the Loss Function","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#353-defining-the-optimization-algorithm","title":"3.5.3. Defining the Optimization Algorithm","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#354-training","title":"3.5.4. Training","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#355-summary","title":"3.5.5. Summary","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#36-generalization","title":"3.6. Generalization","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#361-training-error-and-generalization-error","title":"3.6.1. Training Error and Generalization Error","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#362-underfitting-or-overfitting","title":"3.6.2. Underfitting or Overfitting?","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#363-model-selection","title":"3.6.3. Model Selection","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#364-summary","title":"3.6.4. Summary","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#37-weight-decay","title":"3.7. Weight Decay","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#371-norms-and-weight-decay","title":"3.7.1. Norms and Weight Decay","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#372-high-dimensional-linear-regression","title":"3.7.2. High-Dimensional Linear Regression","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#373-implementation-from-scratch","title":"3.7.3. Implementation from Scratch","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#374-concise-implementation","title":"3.7.4. Concise Implementation","text":""},{"location":"AI/NOTE-D2L/CH3-LNN/ch3-lnn/#375-summary","title":"3.7.5. Summary","text":""},{"location":"AI/RL/rl/","title":"Reinforcement Learning","text":""},{"location":"AI/RNN/rnn/","title":"Recursive Neural Networks (RNN)","text":""},{"location":"AI/TRANSFORMER/transformer/","title":"Transformer","text":""},{"location":"CLOUD/cloud/","title":"Cloud Techs","text":""},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/","title":"Get Yourself A Cloud Server","text":""},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#what-is-a-cloud-server","title":"What Is A Cloud Server","text":"<p>A cloud server is a virtual server (rather than a physical server) running in a cloud computing environment. It is built, hosted and delivered via a cloud computing platform via the internet, and can be accessed remotely. They are also known as virtual servers.</p>"},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#cloud-server-providers","title":"Cloud Server Providers","text":"<p>There are many cloud server providers, some of them are listed below:</p> <ul> <li> <p>Amazon Web Services</p> </li> <li> <p>Microsoft Azure</p> </li> <li> <p>Google Cloud</p> </li> <li> <p>Alibaba Cloud [Personal Choice]</p> </li> <li> <p>Tencent Cloud</p> </li> <li> <p>Huawei Cloud</p> </li> </ul> <p>These providers provide similar services, pick one that suits you the best.</p>"},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#how-to-determine-the-configuration-of-the-cloud-server","title":"How To Determine The Configuration Of The Cloud Server","text":"<p>There are some key factors that you need to consider when choosing the configuration of the cloud server:</p> <ul> <li> <p>CPU - This determines the computing power of the cloud server.</p> </li> <li> <p>Memory - This determines the amount of memory of the cloud server.</p> </li> <li> <p>Storage - This determines the amount of storage of the cloud server.</p> </li> <li> <p>Bandwidth - This relates to the network speed of the cloud server.</p> </li> <li> <p>Location - This determines the location of the cloud server. The closer the location is to you, the faster the network speed is.</p> </li> <li> <p>Price - No need to explain.</p> </li> <li> <p>Use Purpose - The use purpose determines the bottom line of the configuration. For example, if you are going to use the cloud server to run a website, you need to make sure that the configuration is good enough to run the website smoothly.</p> </li> </ul>"},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#explore-the-cloud-server-providers-website","title":"Explore The Cloud Server Provider's Website","text":"<p>Check what services the cloud server provider provides, and determine your own choice.</p> <p>For me, for example, I picked ECS (Elastic Cloud Server) of Alibaba Cloud, which is a virtual server that can be used to host websites, run enterprise applications, or create development environments.</p>"},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#create-an-account","title":"Create An Account","text":"<p>Usually, the provider will require you to create an account before you can use their services. You can manage all your cloud servers in your account.</p>"},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#create-an-instance","title":"Create An Instance","text":"<p>After payment of your cloud server, you can create an instance. An instance is a virtual server that can be used to host websites, run enterprise applications, or create development environments. You can create an instance on the cloud server provider's website. Usually, the provider will provide a wizard to help you create an instance.</p> <p>After creating an instance, you will be able to see your instance in your account. You can access necessary information of your instance in your account, such as the IP address, the username and password, etc.</p>"},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#choose-and-install-operating-system","title":"Choose And Install Operating System","text":"<p>You can either determine the operating system of your instance when creating the instance, or you can install the operating system after creating the instance. Usually, the provider will provide a wizard to help you install the operating system. You can also install the operating system by yourself.</p> <p>In general, there are two types of operating systems on the market for cloud servers, Windows and Linux. Most cloud server providers provide both Windows and Linux. You can choose the operating system that suits you the best.</p> <ul> <li> <p>Windows - Windows is a series of operating systems developed by Microsoft. Windows is the most popular operating system in the world. Windows is easy to use, and it is suitable for beginners. However, Windows is not free, and it is not open source.</p> </li> <li> <p>Linux - Linux is a family of open-source Unix-like operating systems based on the Linux kernel, an operating system kernel first released on September 17, 1991, by Linus Torvalds. Linux is free, and it is open source. Linux is suitable for advanced users. There are many distributions of Linux, such as Ubuntu, CentOS, Debian, etc.</p> </li> </ul> <p>Most cases, for cloud server, you will choose Linux. Popular choices are Ubuntu and CentOS. For me, I chose Ubuntu.</p> <ul> <li> <p>Ubuntu - Ubuntu is a free and open-source Linux distribution based on Debian. Ubuntu is officially released in three editions: Desktop, Server, and Core for Internet of things devices and robots. All the editions can run on the computer alone, or in a virtual machine. Ubuntu is a popular operating system for cloud servers.</p> </li> <li> <p>CentOS - CentOS is a Linux distribution that provides a free, community-supported computing platform functionally compatible with its upstream source, Red Hat Enterprise Linux (RHEL). CentOS is a popular operating system for cloud servers.</p> </li> </ul>"},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#connect-to-the-cloud-server","title":"Connect To The Cloud Server","text":"<p>After creating the instance, you can connect to the cloud server. Usually, the provider will provide a wizard to help you connect to the cloud server. You can also connect to the cloud server by yourself.</p> <p>If you use Aliyun like me, you need to setup the password inside the instance management page, and then you can connect to the cloud server.</p> <p>Tip</p> <p>For terminal tools, you can you the web-based SSH provided by the provider, or you can use third-party tools. On windows, you can use PuTTY, or MobaXterm (My Favorite!). On Mac, you can use third-party tools such as Termius. They can help you remember the IP address, username and password of your cloud server, and you can connect to your cloud server with one click. Also, you can use them to transfer files between your local computer and your cloud server. Most of them are free or have free plans.</p> <p>To connect to your cloud server, you need to know the IP address, username and password of your cloud server. You can find them in your account.</p> <p>To use ssh to connect to your cloud server, you can use the following command:</p> <pre><code>ssh username@ip_address\n</code></pre>"},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#install-necessary-softwares","title":"Install Necessary Softwares","text":"<p>After connecting to your cloud server, you can install necessary software. For example, you can install Docker to run containers, or you can install Nginx to run a website.</p>"},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#upload-files-to-the-cloud-server","title":"Upload Files To The Cloud Server","text":"<p>After connecting to your cloud server, you can upload files to your cloud server. For example, you can upload files to run a website.</p> <p>Tip</p> <p>You can use third-party tools such as WinSCP to upload files to your cloud server.</p> <p>Moreover, with Git and GitHub, you can clone your repository to your cloud server, and pull the latest changes from your repository to your cloud server.</p>"},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#use-the-cloud-server","title":"Use The Cloud Server","text":"<p>This part is up to you. You can use the cloud server to run a website, or use it as a broker for your IoT devices, or use it as a development environment, etc.</p>"},{"location":"CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#the-end","title":"The End","text":"<p>That's all for this article. Hope you enjoy it! </p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/","title":"Configure Your Server For Use","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#generic-configuration","title":"Generic Configuration","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#docker","title":"Docker","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#what-is-docker","title":"What is Docker?","text":"<p>Docker is a containerization platform that allows you to run applications in an isolated environment. It is a tool that can package an application and its dependencies in a virtual container that can run on any Linux server. This provides a lightweight, standalone, portable, and self-sufficient environment for applications to run.</p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-install-docker-linux-as-an-example","title":"How to Install Docker? (Linux as an example)","text":"<p>On Linux, you can install Docker using the following command:</p> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#git","title":"Git","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#what-is-git","title":"What is Git?","text":"<p>Git is a distributed version control system that allows you to track changes to files and coordinate work on those files among multiple people and machines. It is primarily used for source code management in software development, but it can be used to keep track of changes in any files.</p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-install-git-linux-as-an-example","title":"How to Install Git? (Linux as an example)","text":"<p>On Linux, you can install Git using the following command:</p> <pre><code>sudo apt-get install git\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#nginx","title":"Nginx","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#what-is-nginx","title":"What is Nginx?","text":"<p>Nginx is a web server that can also be used as a reverse proxy, load balancer, mail proxy, and HTTP cache. It is free and open-source software, released under the terms of the 2-clause BSD license.</p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-install-nginx-linux-as-an-example","title":"How to Install Nginx? (Linux as an example)","text":"<p>On Linux, you can install Nginx using the following command:</p> <pre><code>sudo apt-get install nginx\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#nodejs","title":"Node.js","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#what-is-nodejs","title":"What is Node.js?","text":"<p>Node.js is an open-source, cross-platform, JavaScript runtime environment that executes JavaScript code outside of a browser. Node.js lets developers use JavaScript to write command line tools and for server-side scripting\u2014running scripts server-side to produce dynamic web page content before the page is sent to the user's web browser.</p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-install-nodejs-linux-as-an-example","title":"How to Install Node.js? (Linux as an example)","text":"<p>On Linux, you can install Node.js using the following command:</p> <pre><code>sudo apt-get install nodejs\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#node-package-manager-npm","title":"Node Package Manager (npm)","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#what-is-npm","title":"What is npm?","text":"<p>npm is a package manager for the JavaScript programming language. It is the default package manager for the JavaScript runtime environment Node.js. It consists of a command line client, also called npm, and an online database of public and paid-for private packages, called the npm registry.</p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-install-npm-linux-as-an-example","title":"How to Install npm? (Linux as an example)","text":"<p>On Linux, you can install npm using the following command:</p> <pre><code>sudo apt-get install npm\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#python","title":"Python","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#what-is-python","title":"What is Python?","text":"<p>Python is an interpreted, high-level, general-purpose programming language. Created by Guido van Rossum and first released in 1991, Python's design philosophy emphasizes code readability with its notable use of significant whitespace.</p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-install-python-linux-as-an-example","title":"How to Install Python? (Linux as an example)","text":"<p>On Linux, you can install Python using the following command:</p> <pre><code>sudo apt-get install python3\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#python-package-manager-pip","title":"Python Package Manager (pip)","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#what-is-pip","title":"What is pip?","text":"<p>pip is the standard package manager for Python. It allows you to install and manage additional packages that are not part of the Python standard library.</p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-install-pip-linux-as-an-example","title":"How to Install pip? (Linux as an example)","text":"<p>On Linux, you can install pip using the following command:</p> <pre><code>sudo apt-get install python3-pip\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#python-virtual-environment-venv","title":"Python Virtual Environment (venv)","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#what-is-venv","title":"What is venv?","text":"<p>venv is a tool that allows you to create isolated Python environments. It creates a folder which contains all the necessary executables to use the packages that a Python project would need.</p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-install-venv-linux-as-an-example","title":"How to Install venv? (Linux as an example)","text":"<p>On Linux, you can install venv using the following command:</p> <pre><code>sudo apt-get install python3-venv\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#specific-configuration-for-computing-and-data-science","title":"Specific Configuration - For Computing and Data Science","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#anoconda","title":"Anoconda","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#what-is-anoconda","title":"What is Anoconda?","text":"<p>Anaconda is a free and open-source distribution of the Python and R programming languages for scientific computing, that aims to simplify package management and deployment. Package versions are managed by the package management system conda.</p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-install-anoconda-linux-as-an-example","title":"How to Install Anoconda? (Linux as an example)","text":"<p>On Linux, you can install Anoconda using the following command:</p> <pre><code>sudo apt-get install anaconda\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#anoconda-virtual-environment-conda","title":"Anoconda Virtual Environment (conda)","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#what-is-conda","title":"What is conda?","text":"<p>conda is an open-source package management system and environment management system that runs on Windows, macOS, and Linux. Conda quickly installs, runs, and updates packages and their dependencies. Conda easily creates, saves, loads, and switches between environments on your local computer. It was created for Python programs, but it can package and distribute software for any language.</p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-install-conda-linux-as-an-example","title":"How to Install conda? (Linux as an example)","text":"<p>On Linux, you can install conda using the following command:</p> <pre><code>sudo apt-get install conda\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#uwf-firewall","title":"UWF (firewall)","text":""},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#what-is-uwf","title":"What is UWF?","text":"<p>UFW, or Uncomplicated Firewall, is an interface to iptables that is geared towards simplifying the process of configuring a firewall. While iptables is a solid and flexible tool, it can be difficult for beginners to learn how to use it to properly configure a firewall. If you're looking to get started securing your network, and you're not sure which tool to use, UFW may be the right choice for you.</p>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-install-uwf-linux-as-an-example","title":"How to Install UWF? (Linux as an example)","text":"<p>On Linux, you can install UWF using the following command:</p> <p><pre><code>sudo apt-get install ufw\n</code></pre> Activate UWF using the following command:</p> <pre><code>sudo ufw enable\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-check-the-port-status-using-uwf-linux-as-an-example","title":"How to check the port status using UWF? (Linux as an example)","text":"<p>On Linux, you can check the port status using UWF using the following command:</p> <pre><code>sudo ufw status\n</code></pre> <p>check which ports are open using the following command:</p> <pre><code>sudo ufw status verbose\n</code></pre> <p>you can also use netstat to check the port status using the following command:</p> <pre><code>sudo netstat -tulpn\n</code></pre> <p>or</p> <pre><code>sudo ss -tulpn\n</code></pre> <p>you can also use iptables to check the port status using the following command:</p> <pre><code>sudo iptables -L\n</code></pre>"},{"location":"CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#how-to-use-uwf-to-enable-ports-linux-as-an-example","title":"How to use uwf to enable ports? (Linux as an example)","text":"<p>First, you need to enable the ports in the cloud service provider's firewall, and then you need to enable the ports in the UWF.</p> <p>On Linux, you can use UWF to enable ports using the following command:</p> <p><pre><code>sudo ufw allow &lt;port&gt;/&lt;protocol&gt;\n</code></pre> or you can ignore the protocol for simplicity:</p> <pre><code>sudo ufw allow &lt;port&gt;\n</code></pre> <p>for example port 80 for http, this is usually the default port for http, so you can use the following command:</p> <pre><code>sudo ufw allow 80/tcp \n</code></pre>"},{"location":"CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/","title":"Get A Domain Name For Your Website","text":""},{"location":"CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#ip-address-vs-domain-name","title":"IP Address vs. Domain Name","text":"<p>An IP address is a unique series of numbers that identifies computers on a network, so an IP address can easily be used to determine the location of a device on the Internet. Currently, there are IPv4 and IPv6 addresses. IPv4 addresses are 32-bit numbers, and IPv6 addresses are 128-bit numbers. An example of an IPv4 address is xxx.xxx.xxx.xxx, and an example of an IPv6 address is xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx. However, it is difficult for people to remember these numbers, so domain names are used to identify websites instead. A domain name is a unique name that identifies a website. For example, the domain name for Google is google.com. Domain names are easier to remember than IP addresses, so they are used to identify websites instead of IP addresses.</p>"},{"location":"CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#domain-name-structure","title":"Domain Name Structure","text":"<p>A domain name is made up of two parts: the top-level domain (TLD) and the second-level domain (SLD). The TLD is the last part of the domain name, and the SLD is the part before the TLD. For example, in the domain name google.com, the TLD is .com, and the SLD is google. The TLD is also called the domain extension. There are many different TLDs, and each TLD has its own meaning. For example, .com is used for commercial websites, .org is used for non-profit organizations, .edu is used for educational institutions, .gov is used for government websites, and .net is used for network infrastructure websites. There are also country code TLDs (ccTLDs) that are used for websites in specific countries. For example, .us is used for websites in the United States, .ca is used for websites in Canada, .uk is used for websites in the United Kingdom, and .cn is used for websites in China. The TLDs .com, .org, .edu, .gov, and .net are called generic top-level domains (gTLDs). There are also sponsored top-level domains (sTLDs) that are used for specific purposes. For example, .gov is used for government websites, .edu is used for educational institutions, and .mil is used for the United States military. There are also internationalized country code top-level domains (IDN ccTLDs) that are used for websites in specific countries.</p>"},{"location":"CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#domain-name-registration","title":"Domain Name Registration","text":"<p>Domain names are registered through domain name registrars. Domain name registrars are companies that register domain names for people and businesses. Domain name registrars are accredited by the Internet Corporation for Assigned Names and Numbers (ICANN). ICANN is a non-profit organization that manages the domain name system (DNS). The DNS is a hierarchical naming system that is used to identify websites. The DNS is used to translate domain names into IP addresses. Domain names are registered for a period of time, and domain names can be renewed before they expire. Domain names can also be transferred to other domain name registrars. </p>"},{"location":"CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#domain-name-providers","title":"Domain Name Providers","text":"<p>There several domain name providers that provide domain name registration services. Some of the most popular domain name providers are GoDaddy, Namecheap, and Namesilo. Usually, the domain name is payed for on a yearly basis, and the domain name can be renewed before it expires. </p>"},{"location":"CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#linking-domain-name-to-website","title":"Linking Domain Name to Website","text":"<p>To link a domain name to a website, the domain name must be pointed to the IP address of the website. This can be done by changing the DNS records of the domain name. Some cloud service providers provide services for domain name registration and DNS management. For example, Amazon Web Services (AWS) provides Route 53, Google Cloud Platform (GCP) provides Cloud DNS, and Microsoft Azure provides Azure DNS.</p>"},{"location":"CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#the-end","title":"The End","text":"<p>After linking the domain name to the website, the website can be accessed using the domain name, rather than the IP address. For example, my website IP is \ud83c\udf10 8.214.19.225, after bonding the domain name to the website, the website can be accessed using the domain name \ud83c\udf10 https://www.cuishuaiwen.com. For this tech blog, before bonding, you can visit this blog via \ud83c\udf10 8.214.19.225:8000, after bonding, you can visit this blog via \ud83c\udf10 https://www.cuishuaiwen.com:8000.</p>"},{"location":"CODING/coding/","title":"Coding","text":"<p>Quote</p> <p>Talk is cheap. Show me the code. \u2014\u2014 Linus Torvalds</p>"},{"location":"CODING/C-C%2B%2B/c-c%2B%2B/","title":"C c++","text":""},{"location":"CODING/C-C%2B%2B/C/c/","title":"C","text":"<p>Note</p> <p>The classic book for C language is The C Programming Language by Brian W. Kernighan and Dennis M. Ritchie. It is a must-read book for C language beginners.</p> <ul> <li> <p> The C Programming Language\ud83c\udfaf</p> <p>Authors: Brian W. Kernighan and Dennis M. Ritchie</p> <p>Reading Progress: [2/8]</p> <p>  Download PDF </p> </li> </ul>"},{"location":"CODING/C-C%2B%2B/C%2B%2B/c%2B%2B/","title":"C++","text":""},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/","title":"C Language Study Notes","text":""},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#table-of-contents","title":"Table of Contents","text":"<p>CH1 - A Tutorial Introduction CH2 - Types, Operators, and Expressions CH3 - Control Flow CH4 - Functions and Program Structure CH5 - Pointers and Arrays CH6 - Structures CH7 - Input and Output CH8 - The UNIX System Interface</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#ch1-a-tutorial-introduction","title":"CH1 - A Tutorial Introduction","text":"<p>Some simple examples.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#ch2-types-operators-and-expressions","title":"CH2 - Types, Operators, and Expressions","text":"<ul> <li>Variables and constants are the basic data objects manipulated in a program. </li> <li>Declarations list the variables to be used, and state what type they have and perhaps what their initial values are. </li> <li>Operators specify what is to be done to them. </li> <li>Expressions combine variables and constants to produce new values. </li> <li>The type of an object determines the set of values it can have and what operations can be performed on it.</li> </ul>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#21-variable-names","title":"2.1 Variable Names","text":"<p>There are some restrictions on the names of variables and symbolic constants: - A name must begin with a letter.   - Underscore is considered a letter, so it may appear in a name.   - Since library routines and external variables begin with an underscore, it is better not to begin variable names with underscore. - Upper and lower case letters are different.   - By convention, variable names are lower case, and symbolic constants are upper case. - The choice of variable names should be mnemonic.   - Local variables may be short; one-letter names are ok for local variables, especially for loop indices.   - External variables should have longer names.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#22-data-types-and-sizes","title":"2.2 Data Types and Sizes","text":"<p>C provides a basic set of data types:</p> <ul> <li>char: a single byte, capable of holding one character in the local character set.</li> <li>int: an integer, typically reflecting the natural size of integers on the host machine.</li> <li>float: single-precision floating point.</li> <li>double: double-precision floating point.</li> </ul> <p>In addition, there are several qualifiers that can be applied to these basic types. The qualifier 'short' or 'long' can be applied to integers, and long can be applied to doubles. The effect is to either extend the size of the type or shorten it.</p> <p>short int sh; long int counter;</p> <p>In these declarations, the keyword int can be omitted. It is usually omitted when the declaration contains a list of variables, as in the above example.</p> <p>The introduction of 'short' and 'long' provides us with integers of different lengths to suit different needs. Integers are usually 16 bits long, long integers are usually 32 bits long, and short integers are usually 16 bits long. The compiler is free to choose appropriate sizes for its own hardware, subject only to the restriction that shorts and ints are at least 16 bits, longs are at least 32 bits, and short is no longer than int, which is no longer than long.</p> <p>The qualifiers 'signed' and 'unsigned' may be applied to char or any integer. Unsigned numbers are always positive or zero, and obey the laws of arithmetic modulo 2^n, where n is the number of bits in the type. For example, if chars are 8 bits, unsigned char variables have values between 0 and 255, while signed chars have values between -128 and 127 (in a two's complement machine). Whether plain chars are signed or unsigned is machine-dependent, but printable characters are always positive.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#23-constants","title":"2.3 Constants","text":""},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#integer-constants","title":"Integer Constants","text":"<p>Integer constants is a type of int. If it is too large to fit in an int, it becomes a long. If it is suffixed with 'L' or 'l', it is a long. If it is suffixed with 'U' or 'u', it is an unsigned int. If it is suffixed with 'UL', 'Ul', 'uL', or 'ul', it is an unsigned long.</p> <p>Apart from decimal, integer constants can be written in octal or hexadecimal. A leading 0 denotes octal; a leading 0x or 0X denotes hexadecimal. In octal and hexadecimal constants, the letters a through f and A through F represent values 10 through 15.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#floating-constants","title":"Floating Constants","text":"<p>Floating constants contain a decimal point (123.4) or an exponent (1e-2), or both. A floating constant without a suffix is double. A suffix f or F indicates float, and a suffix l or L indicates long double.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#character-constants","title":"Character Constants","text":"<p>A character constant is a single character enclosed in single quotes. A string constant is a sequence of characters surrounded by double quotes. A character constant is just an integer, written as one character within single quotes, such as 'x'. The value of a character constant is the numeric value of the character in the machine's character set. For example, in the ASCII character set, the character constant '0' has the value 48, which is the internal representation of the character '0'.</p> <p>Info</p> <p>The complete set of escape sequences is:</p> <ul> <li> <p>\\a: alert (bell) character</p> </li> <li> <p>\\b: backspace</p> </li> <li> <p>\\f: formfeed</p> </li> <li> <p>\\n: newline</p> </li> <li> <p>\\r: carriage return</p> </li> <li> <p>\\t: horizontal tab</p> </li> <li> <p>\\v: vertical tab</p> </li> <li> <p>\\\\: backslash</p> </li> <li> <p>\\': single quote</p> </li> <li> <p>\\\": double quote</p> </li> <li> <p>\\?: question mark</p> </li> <li> <p>\\ooo: octal number</p> </li> <li> <p>\\xhh: hexadecimal number</p> </li> <li> <p>\\0: null character</p> </li> <li> <p>\\0ddd: octal number</p> </li> <li> <p>\\xhh: hexadecimal number</p> </li> </ul> <p>Character constant '\\0' represents the value 0 of the character, also known as null character. We usually use '\\0' instead of 0 to emphasize the character attribute of some expressions, but its numeric value is 0.</p> <p>Constant expressions are expressions that contain only constants. Such expressions are evaluated at compile time, rather than at run time. They may be used wherever constants are required.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#string-constants","title":"String Constants","text":"<p>String constants, or string literals, are written as a sequence of characters enclosed in double quotes. A string constant is an array of characters. The internal representation of a string has a null character '\\0' at the end, so the physical storage required is one more than the number of characters written between the quotes. This representation also explains why there is no limit on the length of a string; the program just has to scan memory until it finds a '\\0' to determine the length. The standard library function strlen(s) returns the length of its character string argument, not counting the '\\0'.</p> <p>We should distinguish between a character constant and a one-character string. 'x' is a character constant, while \"x\" is a one-character string that contains the character x and a '\\0'.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#enumeration-constants","title":"Enumeration Constants","text":"<p>Enumeration constants are a list of constant integer values. They are declared like this:</p> <p>enum  {enum constant list}; <p>The first enumeration constant has the value 0, and the value of each subsequent enumeration constant is increased by 1. The value of enumeration constants can be explicitly assigned when they are defined. If no explicit value is assigned, the value of an enumeration constant is one more than the value of the previous enumeration constant. The value of enumeration constants must be integer constants, and they cannot be repeated.</p> <p>The scope of enumeration constants is the same as that of other variables, from the definition to the end of the block in which the enumeration constant is located. The type of enumeration constants is int.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#24-declarations","title":"2.4 Declarations","text":"<p>All variables must be declared before they can be used, although some variables can be declared implicitly by context. A declaration specifies a type, and contains a list of variables of that type.</p> <p>A declaration can be split into multiple declarations in multiple declaration statements. Writing code in this way takes up more space, but it is easy to add comments to each declaration statement and to modify it later.</p> <p>Variables can also be initialized when they are declared. In a declaration, if the variable name is followed by an equal sign and an expression, the expression serves as an initialization expression for the variable.</p> <p>All variables must be declared before they are used, although some variables can be implicitly declared by context. A declaration specifies a variable type, followed by a variable list that can contain one or more variables of that type. Multiple variables in a declaration statement can be broken up and declared in multiple declaration statements. Writing code in this form takes up more space, but it makes it easier to add comments to each declaration statement and to make changes later. Variables can also be initialized at the same time as they are declared. In a declaration, if the variable name is followed by an equals sign and an expression, the expression serves as the initialization expression for initializing the variable. If the variable is not an automatic variable, it can only be initialized once, conceptually before the program starts executing, and the initialization expression must be a constant expression. Each time a function or program block is entered, an explicitly initialized automatic variable is initialized once, and its initialization expression can be any expression. External variables and static variables are initialized to 0 by default. The value of an automatic variable that is not explicitly initialized is an undefined value (i.e., an invalid value).</p> <p>The declaration of any variable can be qualified by the const qualifier. This qualifier specifies that the value of the variable cannot be changed. For arrays, the const qualifier specifies that the value of all elements of the array cannot be changed. The use of the const qualifier can improve the readability of the program and can also help the compiler check errors in the program.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#25-arithmetic-operators","title":"2.5 Arithmetic Operators","text":"<p>The binary arithmetic operators include: +, -, *, /, and % (modulus operator). Integer division truncates the fractional part of the result. The result of the expression x % y is the remainder of x divided by y, and its value is 0 when x can be divided by y.</p> <p>The modulus operator % cannot be applied to float or double types. In the case of negative operands, the direction of truncation of integer division and the sign of the modulus operator result depend on the implementation of the specific machine, just as they do in the case of overflow or underflow.</p> <p>The binary operators + and - have the same priority, which is lower than the priority of the operators *, /, and %, and the priority of the operators *, /, and % is lower than the priority of the unary operators + and -. Arithmetic operators are associated from left to right.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#26-relational-and-logical-operators","title":"2.6 Relational and Logical Operators","text":"<p>Relational operators include the following operators:  &gt; &gt;= &lt; &lt;= They have the same priority. The priority of the equality operators is only lower than that of the relational operators:  == != Relational operators have a lower priority than arithmetic operators.</p> <p>Logical operators include the following operators: &amp;&amp; ||</p> <p>The logical operators &amp;&amp; and || have some special properties. Expressions connected by &amp;&amp; and || are evaluated from left to right, and, knowing the result value is true or false, the calculation is stopped immediately. Most C programs use these properties.</p> <p>According to the definition, if the relationship is true in the relational expression or the logical expression, the result value of the expression is the numeric value 1; if it is false, the result value is the numeric value 0.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#27-type-conversions","title":"2.7 Type Conversions","text":"<p>When the operands of an operator have different types, they need to be converted to a common type using certain rules. Generally, automatic conversion refers to converting \"narrower\" operands to \"wider\" operands without losing information. Meaningless expressions are not allowed, for example, using a float expression as an index is not allowed. The compiler may give warning messages for expressions that may result in information loss, such as assigning a longer integer value to a shorter integer variable, assigning a floating-point value to an integer variable, and so on, but these expressions are not illegal.</p> <p>Since the char type is a smaller integer type, char variables can be freely used in arithmetic expressions, which provides great flexibility for certain character conversions. For example, the following function atoi converts a string of digits into the corresponding numeric value.</p> <p>When converting a character type to an integer type, we need to be careful. C language does not specify whether a char variable is unsigned or signed. When converting a char value to an int value, is it possible for the result to be a negative integer? The result varies for different machines, reflecting the differences between different machine architectures. In some machines, if the leftmost bit of the char value is 1, it is converted to a negative integer (performing \"sign extension\"). In other machines, when converting a char value to an int value, a 0 is added to the left of the char value, resulting in a positive value.</p> <p>The C language definition guarantees that characters in the standard printing character set of the machine will not be negative values, so these characters are always positive in expressions. However, the bit pattern stored in a character variable can be negative on some machines and positive on others. To ensure program portability, it is best to specify the signed or unsigned qualifier if non-character data is stored in a char variable.</p> <p>In C language, implicit arithmetic type conversion occurs in many cases. Generally, if the two operands of a binary operator (an operator with two operands, such as + or *) have different types, the \"lower\" type is promoted to the \"higher\" type before the operation, and the result of the operation is of the higher type.</p> <p>Type conversion also occurs during assignment. The value on the right side of the assignment operator needs to be converted to the type of the variable on the left side, which is the type of the result of the assignment expression.</p> <p>As mentioned earlier, whether or not sign extension is performed, character variables will be converted to integer variables. When converting a longer integer to a shorter integer or char type, the exceeding high-order bits will be discarded.</p> <p>In any expression, you can use a unary operator called a cast operator to perform explicit type conversion. In the following statement, the expression is converted to the type specified by the type name according to the aforementioned conversion rules: ( type_name ) expression</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#28-increment-and-decrement-operators","title":"2.8 Increment and Decrement Operators","text":"<p>C provides two special operators for incrementing and decrementing variables. The increment operator ++ increments its operand by 1, and the decrement operator decrements its operand by 1.</p> <p>The special thing about the two operators ++ and -- is that they can be used as prefix operators (used before the variable, such as ++n). They can also be used as postfix operators (used after the variable, such as n++). In both cases, the effect is to add 1 to the value of the variable n. However, there is a slight difference between them. The expression ++n first increments the value of n by 1, and then uses the value of the variable n, while the expression n++ first uses the value of the variable n, and then increments the value of n by 1.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#29-bitwise-operators","title":"2.9 Bitwise Operators","text":"<p>C language provides 6 bitwise operators. These operators can only be applied to integer operands, specifically signed or unsigned char, short, int, long types:</p> <ul> <li>&amp; (AND): Bitwise AND</li> <li>| (OR): Bitwise OR</li> <li>^ (XOR): Bitwise XOR</li> <li>&lt;&lt; (Left Shift): Left shift</li> <li> <p>(Right Shift): Right shift</p> </li> <li>~ (Complement): Bitwise complement (unary operator)</li> </ul> <p>The bitwise AND operator (&amp;) is often used to mask certain binary bits, for example: n = n &amp; 0177; This statement sets all bits in n except the 7 least significant bits to 0.</p> <p>The bitwise OR operator (|) is commonly used to set certain binary bits to 1, for example: x = x | SET_ON; This statement sets the bits in x that correspond to the 1 bits in SET_ON to 1.</p> <p>The bitwise XOR operator (^) sets the bit to 1 when the corresponding bits of the two operands are different, otherwise, it sets the bit to 0.</p> <p>We must differentiate the bitwise operators (&amp;, |) from the logical operators (&amp;&amp;, ||), which are used to evaluate the truth value of an expression from left to right. For example, if x is 1 and y is 2, the result of x &amp; y is 0, while the value of x &amp;&amp; y is 1.</p> <p>The shift operators (&lt;&lt; and &gt;&gt;) are used to shift the left operand left or right by the number of positions specified by the right operand (which must be a non-negative value). Therefore, the expression x &lt;&lt; 2 will shift the value of x 2 positions to the left, filling the 2 rightmost positions with 0. This expression is equivalent to multiplying the left operand by 4.</p> <p>The unary operator (~) is used to obtain the bitwise complement of an integer, which means flipping each bit of the operand, changing 1s to 0s and 0s to 1s.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#210-assignment-operators-and-expressions","title":"2.10 Assignment Operators and Expressions","text":"<p>For most binary operators (i.e., operators that have two operands, such as +), there is a corresponding assignment operator op=, where op can be one of the following operators:</p> <p><code>+ - * / % &lt;&lt; &gt;&gt; &amp; ^ |</code></p> <p>If expr1 and expr2 are expressions, then <code>expr1 op= expr2</code></p> <p>is equivalent to: <code>expr1 = (expr1) op (expr2)</code></p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#211-conditional-expressions","title":"2.11 Conditional Expressions","text":"<p>The conditional expression <code>if-else</code> has the form:</p> <pre><code>if (expression)\n    statement\nelse\n    statement\n</code></pre> <p>The trinary operator <code>?:</code> provides a convenient way to write a simple <code>if-else</code> statement. The expression</p> <pre><code>expression1 ? expression2 : expression3\n</code></pre> <p>has the value of expression2 if expression1 is true (nonzero), and expression3 otherwise. Only one of the expressions expression2 and expression3 is evaluated.</p>"},{"location":"CODING/C-C%2B%2B/C-NOTES/c-notes/#212-precedence-and-order-of-evaluation","title":"2.12 Precedence and Order of Evaluation","text":"<p>The precedence of operators determines the order in which parts of an expression are evaluated. C has 15 precedence levels for operators. Operators in the same box have the same precedence. Operators in the same box are evaluated from left to right.</p> Operator Meaning Associativity () [] -&gt; . Parentheses, brackets, dot, arrow Left to right ! ~ ++ -- + - * &amp; (type) sizeof Unary operators Right to left * / % Multiplication, division, remainder Left to right + - Addition, subtraction Left to right &lt;&lt; &gt;&gt; Left shift, right shift Left to right &lt; &lt;= &gt; &gt;= Relational operators Left to right == != Equality operators Left to right &amp; Bitwise AND Left to right ^ Bitwise XOR Left to right | Bitwise OR Left to right &amp;&amp; Logical AND Left to right || Logical OR Left to right ?: Conditional expression Right to left = += -= *= /= %= &lt;&lt;= &gt;&gt;= &amp;= ^= |= Assignment Right to left , Comma Left to right"},{"location":"CODING/HTML-CSS-JS/html-css-js/","title":"HTML/CSS/JAVASCRIPT","text":""},{"location":"CODING/HTML-CSS-JS/html-css-js/#html","title":"HTML","text":""},{"location":"CODING/HTML-CSS-JS/html-css-js/#css","title":"CSS","text":""},{"location":"CODING/HTML-CSS-JS/html-css-js/#javascript","title":"JAVASCRIPT","text":""},{"location":"CODING/HTML-CSS-JS/CSS/css/","title":"Cascading Style Sheets (CSS)","text":""},{"location":"CODING/HTML-CSS-JS/HTML/html/","title":"Hyper Text Markup Language (HTML)","text":""},{"location":"CODING/HTML-CSS-JS/JS/js/","title":"JAVASCRIPT","text":""},{"location":"CODING/PYTHON/python/","title":"Python","text":"<p>Tip</p> <p>So many choices there for Python learning, but it is better to stick with one. Bury yourself in it, and you will be rewarded.</p> <ul> <li> <p> Python For Beginners</p> <p>Author: Visualize-ML</p> <p>In Chinese, Visual ML Series 1</p> <p> Check PDF</p> <p>  Source Code </p> </li> </ul>"},{"location":"CODING/PYTHON/ROADMAP/roadmap/","title":"Python Roadmap","text":"<p>So far, only Chinese version is available.</p>"},{"location":"CONTROL/control/","title":"Control","text":""},{"location":"CONTROL/control/#theory","title":"Theory","text":"<ul> <li> <p> Engineering Media \ud83c\udfc6</p> <p>Owner: Brian Douglas</p> <p>  Portal </p> </li> <li> <p> Fundamentals of Control Theory \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>Author: Brian Douglas</p> <p>  Portal </p> </li> <li> <p> Control System Lectures \ud83c\udfaf\ud83c\udfc6</p> <p>Author: Brian Douglas</p> <p>  Portal </p> </li> </ul> <p></p>"},{"location":"CS/CS/","title":"CS","text":""},{"location":"CS/CS/#computer-science","title":"Computer Science","text":""},{"location":"CS/CS/#computer-basics","title":"Computer Basics","text":"<ul> <li> <p> CS Crash Course \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>Very very very good video series for CS beginners, highly recommended!</p> <p>  Portal </p> </li> </ul>"},{"location":"CS/CS/#computer-theories","title":"Computer Theories","text":""},{"location":"CS/CS/#self-learning-guides","title":"Self-Learning Guides","text":"<ul> <li> <p> Teach Yourself CS</p> <p>A very good self-learning guide for CS beginners.</p> <p>  Portal </p> </li> <li> <p> CS DIY</p> <p>Another very good self-learning guide for CS beginners.</p> <p>  Portal </p> </li> <li> <p> Hello Algo \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>Hello Algo is a very good algorithm self-learning guide. (In Chinese)</p> <p>  Portal </p> </li> </ul>"},{"location":"CS/CS/#classic-books","title":"Classic Books","text":"<ul> <li> <p> Foundations of CS \ud83c\udfaf\u2705</p> <p>As the name suggests, this book is the foundation of computer science. It is a very good book for beginners to learn computer science.</p> <p>  Portal </p> </li> <li> <p> Computer System: APP \ud83c\udfaf\ud83c\udfc6</p> <p>Computer System: A Programmer's Perspectiv - This is classic, but it is not easy to read. Anyway, it deserves your time.</p> <p>  Book Download </p> <p>  Official Website </p> <p>  Course Videos (Youtube) </p> </li> </ul>"},{"location":"CS/CS/#online-study-platforms","title":"Online Study Platforms","text":"<ul> <li> <p> Coursera \ud83c\udfc6</p> <p>Coursera is a very good online study platform. It provides a lot of courses for free. You can also pay for the certificate.</p> <p>  Portal </p> </li> <li> <p> edX</p> <p>edX is another very good online study platform. It provides a lot of courses for free. You can also pay for the certificate.</p> <p>  Portal </p> </li> <li> <p> Udemy</p> <p>Udemy is another very good online study platform. It provides a lot of courses for free. You can also pay for the certificate.</p> <p>  Portal </p> </li> </ul>"},{"location":"CS/CS/#become-a-developer","title":"Become A Developer","text":"<ul> <li> <p> Roadmap \ud83c\udfc6</p> <p>One-stop roadmap to become a developer.</p> <p>  Portal </p> </li> <li> <p> \u9ed1\u9a6c\u7a0b\u5e8f\u5458\u6559\u7a0b \ud83c\udfc6</p> <p>[In Chinese] Practical guide to become a developer</p> <p>  Portal </p> </li> </ul>"},{"location":"CS/CSAPP/csapp/","title":"Computer System: A Programmer's Perspective","text":""},{"location":"DEV/dev/","title":"Development","text":""},{"location":"DEV/BACK-END/back-end/","title":"Back-End","text":""},{"location":"DEV/DEVENV/devenv/","title":"Development Environment Building","text":""},{"location":"DEV/DEVENV/CLOUD-SYNC/cloud-sync/","title":"Cloud Synchonization","text":""},{"location":"DEV/DEVENV/CLOUD-SYNC/cloud-sync/#my-setup","title":"My Setup","text":"<p>I have both Windows and MacOS computers at my office and home, synchronization is of great importance for me.</p>"},{"location":"DEV/DEVENV/CLOUD-SYNC/cloud-sync/#icloud","title":"iCloud","text":"<p>How to use iCloud?</p> <ul> <li>iCloud</li> </ul> <p>Steps to use iCloud:</p> <ul> <li> <p>Step 1: Create an Apple ID</p> </li> <li> <p>Step 2: Login</p> </li> <li> <p>Step 3: Turn on iCloud Drive</p> </li> <li> <p>Step 4: Turn on the items or folders you want to sync</p> </li> <li> <p>Step 5: Done</p> </li> </ul>"},{"location":"DEV/DEVENV/CLOUD-SYNC/cloud-sync/#onedrive","title":"OneDrive","text":"<p>How to use OneDriveS?</p> <ul> <li>OneDrive</li> </ul> <p>Steps to use OneDrive:</p> <ul> <li> <p>Step 1: Create a Microsoft account</p> </li> <li> <p>Step 2: Login</p> </li> <li> <p>Step 3: Turn on OneDrive</p> </li> <li> <p>Step 4: Turn on the items or folders you want to sync</p> </li> <li> <p>Step 5: Done</p> </li> </ul>"},{"location":"DEV/DEVENV/CLOUD-SYNC/cloud-sync/#cross-platform-sync","title":"Cross-Platform Sync","text":"<p>Actually, both iCloud or OneDrive can be used on both Windows and MacOS.</p>"},{"location":"DEV/DEVENV/CLOUD-SYNC/cloud-sync/#use-icloud-on-windows-to-sync-with-macos","title":"Use iCloud on Windows to sync with MacOS","text":"<p>How to use iCloud on Windows to sync with MacOS?</p> <ul> <li>iCloud for Windows</li> </ul> <p>Steps to use iCloud on Windows to sync with MacOS:</p> <ul> <li> <p>Step 1: Download and install iCloud for Windows</p> </li> <li> <p>Step 2: Login</p> </li> <li> <p>Step 3: Turn on iCloud Drive</p> </li> <li> <p>Step 4: Turn on the items or folders you want to sync</p> </li> <li> <p>Step 5: Done</p> </li> </ul> <p>One can actually access the files on iCloud Drive on Windows. However, the files are not downloaded to the local computer. One can opt to always keep the files locally.</p>"},{"location":"DEV/DEVENV/CLOUD-SYNC/cloud-sync/#use-onedrive-on-macos-to-sync-with-windows","title":"Use OneDrive on MacOS to sync with Windows","text":"<p>How to use OneDrive on MacOS to sync with Windows?</p> <ul> <li>OneDrive for Mac</li> </ul> <p>Steps to use OneDrive on MacOS to sync with Windows:</p> <ul> <li> <p>Step 1: Download and install OneDrive for Mac</p> </li> <li> <p>Step 2: Login</p> </li> <li> <p>Step 3: Turn on OneDrive</p> </li> <li> <p>Step 4: Turn on the items or folders you want to sync</p> </li> <li> <p>Step 5: Done</p> </li> </ul>"},{"location":"DEV/DEVENV/LATEX/latex/","title":"LATEX","text":""},{"location":"DEV/DEVENV/LATEX/latex/#template","title":"Template","text":""},{"location":"DEV/DEVENV/LATEX/latex/#elsevier","title":"Elsevier","text":"<ul> <li> <p> Latex Template</p> <p>Elsevier CAS template.</p> <p>  Portal </p> <p>  Documentation </p> </li> </ul>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/","title":"Remote Control","text":""},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#ssh","title":"SSH","text":"<p>SSH is a protocol that allows you to connect to a remote machine and control it via a terminal.</p>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#usage","title":"USAGE","text":"<ul> <li>STEP 1 - Open a terminal</li> <li>STEP 2 - Type <code>ssh username@hostname</code><ul> <li><code>username</code> is the username of the remote machine</li> <li><code>hostname</code> is the hostname of the remote machine, can be an IP address or a domain name</li> </ul> </li> </ul>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#notes","title":"NOTES","text":"<ul> <li>If you want to use SSH to connect to a remote machine, you need to make sure that the remote machine has an SSH server installed and running!!!</li> </ul>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#windows","title":"Windows","text":"<ul> <li>have OpenSSH Server installed, and running<ul> <li>\ud83d\udd17 Get Started With OpenSSH On Windows<ul> <li>OpenSSH Client - control other computers from the Windows computer</li> <li>OpenSSH Server - control the Windows computer from other computers</li> </ul> </li> <li>Ensure both of them are installed<ul> <li>How to do that? Follow the link above</li> </ul> </li> <li>Ensure the SSH server is running and can start to run automatically when windows starts up:<ul> <li>Step 1 - Open <code>Services</code></li> <li>Step 2 - Find <code>OpenSSH SSH Server</code> and <code>OpenSSH Authentication Agent</code></li> <li>Step 3 - Right Click on them and select <code>Start</code></li> <li>Step 4 - Right Click on them and select <code>Properties</code></li> <li>Step 5 - Select <code>Automatic</code> in <code>Startup type</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#linux-ubuntu","title":"Linux - Ubuntu","text":"<ul> <li>step 1 - install openssh-server</li> </ul> <pre><code>sudo apt-get install openssh-server\n</code></pre> <ul> <li>step 2 - start ssh server</li> </ul> <pre><code>sudo service ssh start\n</code></pre> <ul> <li>step 3 - check if ssh server is running</li> </ul> <pre><code>sudo service ssh status\n</code></pre> <ul> <li>step 4 - enable ssh server to start automatically when system starts up</li> </ul> <pre><code>sudo systemctl enable ssh\n</code></pre> <ul> <li>step 5 - check if ssh server is running</li> </ul> <pre><code>sudo systemctl is-enabled ssh\n</code></pre>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#softwares","title":"SOFTWARES","text":"<p>Some softwares can be used to connect to a remote machine via SSH, such as: - Windows     - MobaXterm         - My favorite SSH client on Windows     - PuTTY         - Most popular SSH client on Windows - MacOS     - Termius         - My favorite SSH client on MacOS - Linux     - OpenSSH         - Most popular SSH client on Linux</p>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#vnc","title":"VNC","text":"<p>VNC is a protocol that allows you to connect to a remote machine and control it via a GUI.</p>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#usage_1","title":"USAGE","text":"<ul> <li>STEP 1 - Open a VNC client</li> <li>STEP 2 - Type <code>hostname:port</code><ul> <li><code>hostname</code> is the hostname of the remote machine, can be an IP address or a domain name</li> <li><code>port</code> is the port of the VNC server on the remote machine</li> </ul> </li> <li>STEP 3 - Enter the password of the VNC server on the remote machine</li> <li>STEP 4 - Control the remote machine via the GUI</li> <li>STEP 5 - Close the VNC client</li> </ul>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#notes_1","title":"NOTES","text":"<ul> <li>If you want to use VNC to connect to a remote machine, you need to make sure that the remote machine has a VNC server installed and running!!!</li> <li>If you don't know how to do that, please google it.</li> </ul>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#ubuntu","title":"Ubuntu","text":"<p>how to enable VNC on Ubuntu LTS22</p>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#softwares_1","title":"SOFTWARES","text":"<p>Some softwares can be used to connect to a remote machine via VNC, such as: - RealVNC     - My favorite - TigerVNC</p>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#software-for-remote-desktop","title":"SOFTWARE FOR REMOTE DESKTOP","text":""},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#crossplatform","title":"CrossPlatform","text":"<ul> <li> <p>RustDesk</p> <ul> <li>Open Source</li> <li>Support self-hosted server</li> <li>User friendly</li> <li>The installation and configuration of self-hosted server is a little bit complicated, but   the quality is good</li> <li>Public server is not stable</li> <li>Windows to MacOS seems have some problems</li> </ul> </li> <li> <p>ToDesk</p> <ul> <li>My favorite one! All most can do everything!</li> <li>Highly Recommended!</li> <li>Pretty stable and features high resolution</li> <li>Free for personal use</li> <li>Paid for better user experience</li> <li>For cross country country, better to buy the plugin for that</li> <li>They do have a linux version. I have tried to use this on Linux, but not succeed yet. </li> </ul> </li> <li> <p>Sunlogin</p> <ul> <li>maybe the best one for China</li> <li>seems cannot be used outside China</li> </ul> </li> <li> <p>TeamViewer</p> <ul> <li>it always says that I am using it for commercial use, and then it will disconnect me after a few minutes</li> <li>I don't like it</li> </ul> </li> <li> <p>AnyDesk</p> <ul> <li>sometimes it just not works</li> <li>I don't like it</li> </ul> </li> <li> <p>Chrome Remote Desktop</p> <ul> <li>I tried this one, but not succeed yet.</li> </ul> </li> </ul>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#windows_1","title":"Windows","text":"<ul> <li>[RemoteDesktop]<ul> <li>built-in function</li> </ul> </li> </ul>"},{"location":"DEV/DEVENV/REMOTE-CONTROL/remote-control/#macos","title":"MacOS","text":"<ul> <li>Microsoft Remote Desktop<ul> <li>This can be used to control a windows</li> <li>Pretty stable and features high resolution</li> </ul> </li> </ul>"},{"location":"DEV/FRONT-END/front-end/","title":"Front-End","text":""},{"location":"DSP/dsp/","title":"Digital Signal Processing","text":""},{"location":"DSP/dsp/#theory","title":"Theory","text":"<ul> <li> <p> Understanding Digital Signal Processing \ud83c\udfaf</p> <p>Author: Richard G. Lyons</p> <p>Reading Progress: [2/13]</p> <p>  Portal </p> </li> <li> <p> Digital Signal Process \ud83c\udfaf</p> <p>Made by EPFL</p> <p>  Portal </p> </li> <li> <p> DSP Stuff \ud83c\udfaf</p> <p>In Chinese</p> <p>Author\uff1aMr.\u770b\u6d77</p> <p>  Portal </p> </li> </ul>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/","title":"Time Domain Analysis - Features with Units","text":"<p>Info</p> <p>Original article: \ud83d\udd17 DSP-STUFF</p> <p>This article serves as study notes.</p> <p>Time-domain feature values are important indicators for measuring signal characteristics, typically classified into dimensional parameters and dimensionless parameters.</p> <p>The term \"dimension\" is simply understood as \"unit.\" Dimensional parameters have units, such as the average value. For example, the average value of a temperature signal (in degrees Celsius) still has units in degrees Celsius. Dimensionless parameters, on the other hand, lack units and are often expressed as the product or ratio of dimensional quantities. Strain, for instance, measures deformation and is defined as the ratio of length difference to the original length.</p> <p>Dimensional feature values often have intuitive physical meanings and are the most commonly used feature indicators. Dimensional feature values mainly include: maximum value, minimum value, peak-to-peak value, mean, variance, standard deviation, mean square value, root mean square value (RMS), mean square error (MSE), root mean square error (RMSE), root amplitude, and more.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#1-mean","title":"1 Mean","text":"<p>The mean, variance, mean square value, and root mean square value are inherently connected.</p> <p>The mean is the average of a signal and is the first moment, expressed as:</p> \\[ \\mu_x(t) = \\lim_{N \\to \\infty} \\frac{1}{N} \\sum_{i=1}^{N} x_i(t) = E[X(t)] \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#2-mean-square-value","title":"2 Mean Square Value","text":"<p>The mean square value is the average of the square of a signal (signal \u2192 square \u2192 average), representing the energy of the signal, and is the second moment, expressed as:</p> \\[ \\Psi_X^2(t) = \\lim_{N \\to \\infty} \\frac{1}{N} \\sum_{i=1}^{N} X_i^2(t) = E[X^2(t)] \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#3-variance","title":"3 Variance","text":"<p>Variance is the average of the square of the difference between each sample value and the average value of all sample values. It represents the dynamic component of the signal's energy (the square of the mean is the static component), reflecting the degree of dispersion between data. Variance is the second central moment and can be expressed as:</p> \\[ \\sigma_X^2(t) = \\lim_{N \\to \\infty} \\frac{1}{N} \\sum_{i=1}^{N} (X_i(t) - \\mu_X(t))^2 = E[X^2(t)] - E[X(t)]^2 = \\Psi_X^2(t) - \\mu_X^2(t) \\] <p>Different expressions for variance reveal various understandings of it:</p> <p>(1)</p> \\[ \\lim_{N \\to \\infty}\\frac{1}{N} \\sum_{i=1}^{N}[X_i(t) - \\mu_X(t)]^2 \\] <p>In this expression, it can be observed that variance describes the signal's degree of dispersion, i.e., the distance of variables from their expected value.</p> <p>(2)</p> \\[ E[X^2(t)] - E[X(t)]^2 \\] <p>In this expression, it can be seen that variance is the expectation of the square (mean square value) minus the square of the expectation.</p> <p>(3)</p> <p>Physically, the mean square value represents the signal's energy, the square of the expectation represents the signal's DC component, and variance represents the signal's AC component.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#4-standard-deviation","title":"4 Standard Deviation","text":"<p>Standard deviation, also known as mean square deviation, is the square root of the variance. Standard deviation reflects the data's degree of dispersion.</p> <p>Now, the question arises: since variance and standard deviation both represent the data's degree of dispersion, why have standard deviation when we already have variance?</p> <p>To ensure consistent units with the original signal.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#5-root-mean-square-value","title":"5 Root Mean Square Value","text":"<p>Root mean square (RMS), also known as effective value, is obtained by squaring all values, taking their average, and then finding the square root. Alternatively, RMS is the square root of the mean square value. It can be expressed as:</p> \\[ RMS = \\sqrt{\\frac{1}{N} \\sum_{i=1}^{N} X_i^2(t)} \\] <p>Its physical meaning can be understood as follows: passing both AC and DC currents through the same resistor, if the electrical energy consumed (or the generated Joule heat) is equal in the same amount of time, then the numerical value of the DC current is called the effective value of the AC current. (Effective value of signal power)</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#6-mean-square-error","title":"6 Mean Square Error","text":"<p>Mean square error (MSE) is, in a sense, a variance. MSE is the mathematical expectation of the square of the difference between the estimated parameter value and the true parameter value. If we consider the mathematical expectation E of a random variable as the estimated parameter value (future), and the random variable itself as the true parameter value, then mean square error is the ordinary variance.</p> \\[ MSE = \\frac{1}{N} \\sum_{i=1}^{N} (observed - predicted)^2 \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#7-root-mean-square-error","title":"7 Root Mean Square Error","text":"<p>Mean square error (MSE) can assess the degree of variation (deviation) of data. A smaller MSE value (in comparison with others, not with the true parameter value) indicates that the predictive model has better accuracy in describing experimental data.</p> <p>Mean square error is often used as a measure of error in machine learning.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#8-root-mean-square-error","title":"8 Root Mean Square Error","text":"<p>Root mean square error (RMSE) is the square root of mean square error:</p> \\[ RMSE = \\sqrt{MSE} \\] <p></p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/","title":"Time Domain Analysis - Features without Units","text":"<p>Info</p> <p>Original article: \ud83d\udd17 DSP-STUFF</p> <p>This article serves as study notes.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#dimensionless-indicators-in-signal-characterization","title":"Dimensionless Indicators in Signal Characterization","text":"<p>When characterizing signals, dimensional indicators, although sensitive to signal features, can vary due to changes in working conditions (such as loads) and are highly susceptible to environmental interference. They exhibit the drawback of insufficient stability in performance. In comparison, dimensionless indicators can eliminate the influence of these disturbance factors, making them widely applied in the field of feature extraction.</p> <p>Dimensionless indicators mainly include peak factor, pulse factor, crest factor, kurtosis factor, waveform factor, kurtosis factor, and skewness factor.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#1-peak-factor","title":"1 Peak Factor","text":"<p>The peak factor is the ratio of the signal peak value to the root mean square (RMS) value, used to detect statistical indicators of impacts in the signal. The peak is a non-stationary parameter that varies significantly at different times. Due to the poor stability of the peak and its low sensitivity to impacts, this indicator has gradually been replaced by kurtosis in fault diagnosis.</p> \\[ \\text{Peak Factor} = \\frac{\\text{Peak Value}}{\\text{RMS Value}} \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#2-pulse-factor","title":"2 Pulse Factor","text":"<p>The pulse factor is the ratio of the signal peak value to the rectified mean (absolute average value). The difference between pulse factor and peak factor lies in the denominator; since the rectified mean is less than the RMS value for the same set of data, the pulse factor is greater than the peak factor. The pulse factor is also used to detect the presence of impacts in the signal.</p> \\[ \\text{Pulse Factor} = \\frac{\\text{Peak Value}}{\\text{Rectified Mean}} \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#3-crest-factor","title":"3 Crest Factor","text":"<p>The crest factor is the ratio of the signal peak value to the root amplitude. Similar to the peak factor, the root amplitude and root mean square (RMS) value are corresponding quantities. The formula for root mean square is the square root of the average of the signal squares, while the root amplitude is the square of the average of the square roots (a bit convoluted). The crest factor can be used to detect the wear condition of mechanical equipment.</p> \\[ \\text{Crest Factor} = \\frac{\\text{Peak Value}}{\\text{Root Amplitude}} \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#4-waveform-factor","title":"4 Waveform Factor","text":"<p>The waveform factor is the ratio of the RMS value to the rectified mean. In the field of electronics, its physical meaning can be understood as the ratio of direct current relative to alternating current with equal power, and its value is greater than or equal to 1. You might have noticed by now that the waveform factor is equal to the pulse factor divided by the peak factor.</p> \\[ \\text{Waveform Factor} = \\frac{\\text{RMS Value}}{\\text{Rectified Mean}} \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#5-kurtosis-factor","title":"5 Kurtosis Factor","text":"<p>Kurtosis factor indicates the smoothness of the waveform and is used to describe the distribution of variables. The kurtosis of a normal distribution is equal to 3, and when kurtosis is less than 3, the distribution curve is relatively \"flat,\" while when greater than 3, the curve is relatively \"steep.\"</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#6-skewness-factor","title":"6 Skewness Factor","text":"<p>Skewness factor: Skewness, also called skewness or asymmetry. Skewness and kurtosis are somewhat correlated; kurtosis is the ratio of the fourth central moment to the fourth power of the standard deviation, while skewness is the ratio of the third central moment to the cube of the standard deviation. Similar to kurtosis, skewness describes the distribution. In simple terms, for a unimodal distribution, negative skewness represents the \"head\" of the distribution curve on the right and the \"tail\" on the left; positive skewness is the opposite. See the figure below:</p> <p></p> <p>In summary, the physical meanings of peak factor, pulse factor, and crest factor are similar. Peak factor and pulse factor are indicators used to detect impacts in the signal, while crest factor is often used to detect the wear condition of mechanical equipment. Kurtosis factor also reflects the impact characteristics of vibration signals, but its formula differs significantly from the first three.</p> <p>When evaluating the performance of these indicators, sensitivity and stability are commonly used measures. Pulse indicators, peak indicators, and kurtosis are sensitive to impact-type faults, especially in the early stages, showing a noticeable increase. However, as faults gradually develop, they decrease, indicating high sensitivity to early faults but poor stability. The RMS value has good stability but is insensitive to early fault signals. To achieve better results, they are often applied simultaneously.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH03/tf-ana-ch03/","title":"Understanding of Signal Time Domain Analysis Methods","text":"<p>No need for notes.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH04/tf-ana-ch04/","title":"Matlab Code for Time-Frequency Domain Feature Extraction","text":"<p>No need for notes.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/","title":"Frequency Domain Feature Indices and Their Matlab Code","text":"<p>Info</p> <p>Original article: \ud83d\udd17 DSP-STUFF</p> <p>This article serves as study notes.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#frequency-domain-feature-indicators","title":"Frequency Domain Feature Indicators","text":"<p>Previously, we outlined commonly used dimensional time-domain feature indicators and dimensionless time-domain feature indicators. In feature extraction methods, some frequency domain feature indicators are also very useful.</p> <p>The following frequency domain feature indicators are obtained based on the signal's power spectrum. In fault diagnosis or other application scenarios, they can be used as part of the feature vector along with time-domain indicators and other metrics to enrich the variety of features and enhance diagnostic accuracy.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#power-spectrum","title":"Power Spectrum","text":"<p>The following frequency domain features are all calculated based on the power spectrum. But why not use the frequency spectrum? Personally, I believe it is because the power spectrum is more versatile in expressing the frequency characteristics of power signals and even random signals, as frequency spectrum is not suitable for power signals.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#1-center-frequency","title":"1 Center Frequency","text":"<p>The center frequency can describe the frequency of signal components with larger amplitudes in the spectrum, reflecting the distribution of the signal power spectrum. In other words, for a given frequency band, the energy contained in the frequency range below the center frequency is half of the total signal energy.</p> <p>Another way to understand it is that the center frequency is a weighted average with the amplitude of the power spectrum as weights. Therefore, the center frequency moves towards positions with greater amplitude (i.e., larger weights).</p> <p>To illustrate more vividly, if you consider the area enclosed by the power spectrum curve in the figure below as a wooden board, placing this board on the wire at the center frequency dashed line allows the board to remain balanced.</p> <p></p> <p>Center frequency formula:</p> \\[ FC = \\frac{\\int_0^\\infty fP(f)df}{\\int_0^\\infty P(f)df} \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#2-root-mean-square-frequency","title":"2 Root Mean Square Frequency","text":"<p>The root mean square frequency is the square root of the mean square frequency. It also has a physically intuitive meaning: if you consider the area enclosed by the power spectrum curve in the figure below as a wooden board, when this board rotates around the y-axis, the distance from the root mean square frequency to the origin is the inertia radius of the rotating body (referring to the distance from the assumed center of mass to the axis of rotation).</p> <p></p> <p>Mean square frequency formula:</p> \\[ MSF = \\frac{\\int_0^\\infty f^2P(f)df}{\\int_0^\\infty P(f)df} \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#3-mean-frequency","title":"3 Mean Frequency","text":"<p>The mean frequency is the square of the root mean square frequency.</p> <p>Unlike the center frequency, the mean frequency is the weighted average of the square of the signal frequency. It is also weighted by the amplitude of the power spectrum.</p> <p>Center frequency, mean frequency, and root mean square frequency all describe the distribution of the power spectrum's main frequency band.</p> \\[ RMSF = \\sqrt{MSF} \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#4-frequency-standard-deviation","title":"4 Frequency Standard Deviation","text":"<p>Similarly, considering the area enclosed by the power spectrum curve in the figure below as a wooden board, the frequency standard deviation is the inertia radius with the center frequency as the center.</p> <p>If the amplitude of the spectrum near the center is large, the frequency standard deviation is small. If the spectrum near the center is small, the frequency standard deviation is large. The frequency standard deviation is used to describe the dispersion degree of the power spectrum's energy distribution.</p> <p></p> <p>Frequency standard deviation formula:</p> \\[ RVF = \\sqrt{VF} \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#5-frequency-variance","title":"5 Frequency Variance","text":"<p>Frequency variance is the square of the frequency standard deviation, providing another dimension to measure the dispersion degree of the power spectrum's energy distribution. I won't describe it in detail.</p> <p>Frequency variance formula:</p> \\[ VF = \\frac{\\int_0^\\infty (f-FC)^2P(f)df}{\\int_0^\\infty P(f)df} \\]"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/","title":"Matlab Code for Time-Frequency Domain Feature Extraction","text":"<p>Info</p> <p>Original article: \ud83d\udd17 DSP-STUFF</p> <p>This article serves as study notes.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#1-spectrogram","title":"1. Spectrogram","text":"<p>Generally speaking, spectrogram analysis refers to the Fourier transform of the signal for analysis. Spectrogram analysis includes two graphs: amplitude spectrogram and phase spectrogram. However, the most commonly used is the amplitude spectrogram.</p> <p>FT (Fourier Transformation): Fourier transform. It is the concept we learned in theory, but it cannot be used on the computer for continuous signals. Both the time domain signal and the frequency domain signal are continuous.</p> <p>DTFT (Discrete-time Fourier Transform): Discrete-time Fourier transform. Here, \"discrete time\" refers to the time domain, that is, the computer has sampled. However, the result of the Fourier transform is still continuous.</p> <p>DFT (Discrete Fourier Transform): Discrete Fourier transform. After DTFT, the result of Fourier transform is also discretized, which is DFT.</p> <p>That is to say: FT time domain continuous, frequency domain continuous; DTFT time domain discrete, frequency domain continuous; DFT time domain discrete, frequency domain discrete.</p> <p>FFT (Fast Fourier Transformation): Fast Fourier transform. It is a fast algorithm for calculating DFT (Discrete Fourier Transform) and IDFT (Discrete Fourier Inverse Transform). Generally, the fast algorithm is used in engineering applications.</p> <p>FS (Fourier Series): Fourier series. It is proposed for the continuous periodic signal in the time domain, and the result is a discrete frequency domain result.</p> <p>DFS (Discrete Fourier Series): Discrete Fourier series. It is proposed for the discrete periodic signal in the time domain. The essence of DFS and DFT is the same.</p> <p>In addition, add some related knowledge:</p> <ul> <li> <p>In actual calculation, fast Fourier transform (FFT) is usually used. It is a fast algorithm for calculating DFT (Discrete Fourier Transform) and IDFT (Discrete Fourier Inverse Transform).</p> </li> <li> <p>Random signals cannot be Fourier transformed (*here to add again)</p> </li> </ul>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#2-energy-spectrum","title":"2. Energy Spectrum","text":"<p>To understand the energy spectrum and power spectrum, you must first understand the energy-limited signal and the power-limited signal (see the previous article for the difference between energy signal and power signal).</p> <p>The energy spectrum is also called the energy spectrum density. The energy spectrum density describes how the energy of a signal or time series is distributed with frequency. The energy spectrum is the square of the original signal Fourier transform.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#3-power-spectrum","title":"3. Power Spectrum","text":"<p>The power spectrum is the abbreviation of the power spectrum density function (PSD), which is defined as the signal power in the unit frequency band.</p> <p>The power spectrum is for power signals. The derivation formula of the power spectrum is relatively complicated, but fortunately, the Wiener-Khinchin theorem proves that: the power spectrum of a segment of the signal is equal to the Fourier transform of the autocorrelation function of this segment of the signal.</p> <p>So there are two ways to calculate the power spectrum:</p> <ul> <li> <ol> <li>(Square of Fourier transform) / (interval length);</li> </ol> </li> <li> <ol> <li>Fourier transform of autocorrelation function.</li> </ol> </li> </ul>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#issues-with-power-spectral-density-psd","title":"Issues with Power Spectral Density (PSD)","text":"<ol> <li> <p>Unit of Power Spectral Density (PSD):    The unit of PSD is W/Hz. When expressed in dB, it involves taking the logarithm (10logX). Logarithmic scaling is applied to highlight lower amplitude components relative to higher amplitude ones, making it easier to observe periodic signals hidden in low-amplitude noise.</p> </li> <li> <p>Differences in Methods for Calculating PSD:    In principle, there doesn't seem to be much difference. However, based on MATLAB simulation results, the method involving the autocorrelation function demonstrates better noise suppression, resulting in smoother curves. (Refer to the MATLAB code implementation for frequency domain feature extraction \u2013 spectrum, PSD, cepstrum.)</p> </li> <li> <p>FFT vs. PSD:    Both FFT and PSD represent frequency domain characteristics, aiding in identifying peak positions. However, PSD is specifically introduced for the analysis of random signals. Signals are categorized as deterministic (energy signals and power signals), and random signals are inherently power signals. According to Dirichlet conditions, energy signals can undergo direct Fourier transformation, but power signals cannot. For signals where direct Fourier transformation is not feasible, a detour is taken by first calculating the autocorrelation and then performing the Fourier transformation. Physically, this corresponds to the power spectrum.</p> </li> <li> <p>FFT on Random Signals:    Directly applying FFT to random signals is essentially truncating them into energy signals for processing. Although this deviates from the definition of random signals, it serves as an approximate approach for short-time frequency domain analysis.</p> </li> </ol> <p>To summarize, spectrum and energy spectrum (also known as energy spectral density) are results of the Fourier transform expressed as complex numbers and their modulus squared. In contrast, the concept of power spectrum (i.e., power spectral density) is introduced specifically for the analysis of random signals.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#4-cepstrum-inverse-spectrum","title":"4. Cepstrum (Inverse Spectrum)","text":"<p>Cepstrum, also known as inverse spectrum, liftering, quadratic spectrum, and log power spectrum, is defined in engineering as the result of taking the inverse Fourier transform of the logarithm of the signal's power spectrum (Signal \u2192 Power Spectrum \u2192 Logarithm \u2192 Inverse Fourier Transform).</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#why-inverse-spectrum","title":"Why \"Inverse Spectrum\"?","text":"<p>The term \"inverse spectrum\" is attributed to the fact that while the spectrum (power spectrum) reflects frequency characteristics with the horizontal axis being the frequency f (Hz), the corresponding feature points in cepstrum have the horizontal axis as time t (s), and f and t are reciprocal. It's noteworthy that despite being called \"spectrum,\" the horizontal axis in cepstrum is not frequency but time.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#advantages-of-cepstrum","title":"Advantages of Cepstrum","text":"<p>The analysis method of cepstrum is convenient for extracting and analyzing periodic signals that are difficult to identify visually in the original spectrum. It simplifies groups of sideband spectra into single spectra, and it is less affected by the sensor's measuring point location and transmission path.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#1-convenient-extraction-of-periodic-signals","title":"1. Convenient Extraction of Periodic Signals","text":"<p>Frequencies in the spectrum can exhibit modulation and sidebands. Modulation, whether amplitude or frequency modulation, results in a mixture of high and low-frequency signals. Taking gear vibration as an example, the modulation of high-frequency meshing vibrations and low-frequency gear shaft rotational vibrations creates sidebands in the frequency domain.</p> <p>Modulation mathematically involves multiplication in the time domain and convolution in the frequency domain. The modulated signal, both in the time and frequency domains, exhibits additional components, forming sidebands around the characteristic frequencies. Extracting these periodic signals from the original spectrum is a primary advantage of cepstrum.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#2-less-affected-by-sensor-position-and-transmission-path","title":"2. Less Affected by Sensor Position and Transmission Path","text":"<p>The second advantage lies in cepstrum being less influenced by the location of sensors and transmission paths. Due to the separation of the vibration effects and transmission path effects in cepstrum, the frequency components representing gear vibration characteristics are nearly identical. While slight variations may exist in the low cepstral frequency range due to differences in transfer functions, these differences have minimal impact.</p> <p>During cepstrum analysis, there's no need to consider the effects of attenuation and calibration coefficients during signal acquisition, making this feature highly valuable for fault detection.</p> <p>For a detailed example, refer to \ud83d\udd17.</p>"},{"location":"DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#5-wavelet-analysis","title":"5. Wavelet Analysis","text":"<p>Wavelet analysis is a time-frequency domain analysis method that combines information about a signal in both the time and frequency domains. There's an insightful article on Zhihu explaining the concept of wavelet analysis. It is highly recommended for students unfamiliar with the concept. Link</p> <p>The article concludes with the result of a continuous wavelet transform (CWT):</p> <p></p> <p>It looks impressive, but there are two issues: high computational complexity and only numerical solutions without analytical solutions. The wavelet analysis method shown above is called Continuous Wavelet Transform (CWT).</p> <p>To reduce computational complexity and eliminate unnecessary repeated coefficients, the commonly used method in practice is Discrete Wavelet Transform (DWT).</p> <p>What does \"discrete\" mean in this context?</p> <p>Let's first go back to the expression of the wavelet base wave (also called the mother wavelet):</p> \\[ \\Psi_{s\\tau}(t) = \\frac{1}{\\sqrt{s}}\\Psi\\left(\\frac{t-\\tau}{s}\\right) \\] <p>Here, \\( s \\) is the scale parameter, representing frequency, and \\( t \\) is the shift parameter, representing time. As mentioned in the referenced link, in the continuous wavelet transform, \\( s \\) and \\( t \\) are continuous.</p> <p>In discrete wavelet transform, \"discrete\" refers to the parameters \\( s \\) and \\( t \\). The wavelet expression becomes:</p> \\[ \\Psi_{j,k}(t) = \\frac{1}{\\sqrt{s_0^j}}\\Psi\\left(\\frac{t-k\\tau_0s_0^j}{s_0^j}\\right) \\] <p>Here, \\( j \\) and \\( k \\) are integers, usually taking \\( s_0=2 \\) and \\( \\tau_0=1 \\).</p> <p>As \\( j \\) increases, we obtain a series of different wavelets (daughter wavelets). The scale parameters of these daughter wavelets grow exponentially by powers of 2. When using this series of daughter wavelets to discretely analyze a continuous function, we obtain a set of wavelet analysis coefficients. This analysis process is called wavelet series decomposition.</p> <p>As mentioned earlier, the scale parameter characterizes the frequency. In the series of daughter wavelets, the scale parameter grows by powers of 2 (i.e., the \"length\" of the wavelet is \"stretched\" by a factor of 2). Consequently, the corresponding frequencies that daughter wavelets can detect decrease by half. The frequency spectrum of the mother wavelet is located at the high end of the frequency spectrum with the maximum frequency range. The frequency spectra of other daughter wavelets move towards the low-frequency end, and the frequency range they cover decreases accordingly. Ideally, all filters should overlap and cover each other.</p> <p></p> <p>Coverage of different scales of daughter wavelets on the wavelet frequency spectrum</p> <p>Yes, each daughter wavelet acts as a filter, and the process of discrete wavelet transform is a step-by-step filtering process.</p> <p>What is the specific procedure?</p> <p>In a nutshell: A set of discrete signals passes through a series of low-pass and high-pass filters, resulting in an approximate signal (denoted as A) and a detail signal (denoted as D).</p> <p>Describing it with an image:</p> <p></p> <p>LP stands for low-pass filter, HP stands for high-pass filter, B is the bandwidth, and 2B is twice the bandwidth.</p> <p>Illustrating it with an example:</p> <p>Filtering the original signal: The original signal consists of a continuous low-frequency sine wave (frequency 0.5) and two high-frequency (frequency 10) high-amplitude sine pulses randomly superimposed. Here, dB5 (Daubechies wavelet of the fifth order) is used as the mother wavelet for noise removal.</p> <p></p> <p>Original signal</p> <p>The result of the first-level wavelet decomposition is:</p> <p></p> <p>Approximate signal (low-pass result) of the first-level wavelet decomposition</p> <p></p> <p>Detail signal (high-pass result) of the first-level wavelet decomposition</p> <p>The result of the second-level wavelet decomposition (i.e., decomposing A1 signal):</p> <p></p> <p>Approximate signal (low-pass result) of the second-level wavelet decomposition</p> <p></p> <p>Detail signal (high-pass result) of the second-level wavelet decomposition</p> <p>The result of the third-level wavelet decomposition (i.e., decomposing A2 signal):</p> <p></p> <p>Approximate signal (low-pass result) of the third-level wavelet decomposition</p> <p></p> <p>Detail signal (high-pass result) of the third-level wavelet decomposition</p> <p>The result of the fourth-level wavelet decomposition (i.e., decomposing A3 signal):</p> <p></p> <p>Approximate signal (low-pass result) of the fourth-level wavelet decomposition</p> <p></p> <p>Detail signal (high-pass result) of the fourth-level wavelet decomposition</p> <p>At this point, we have obtained a good filtering result (i.e., A5). However, the pulse signal has also been filtered out. To preserve this signal, a threshold setting method can be used, but this is not elaborated here. It can be observed that the original signal has been filtered layer by layer, comprehensively and without omission, through high-pass and low-pass filtering. The closer to the low-frequency segme</p>"},{"location":"EMBEDDED-SYS/embedded-sys/","title":"Embedded Systems","text":""},{"location":"EMBEDDED-SYS/embedded-sys/#theory","title":"Theory","text":""},{"location":"EMBEDDED-SYS/embedded-sys/#electronics","title":"Electronics","text":"<ul> <li> <p> Electronics for Beginners: A Practical Introduction to Schematics, Circuits, and Microcontrollers \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>Arthor: Jonathan Bartlett</p> <p>  Portal </p> </li> </ul>"},{"location":"EMBEDDED-SYS/embedded-sys/#simulation","title":"Simulation","text":"<ul> <li> <p> Renode</p> <p>Hardware Simulation Framework</p> <p>  Portal </p> </li> <li> <p> Wokwi</p> <p>Hardware Simulation Framework. Web / VSCode Plugin</p> <p>  Portal </p> </li> </ul>"},{"location":"EMBEDDED-SYS/embedded-sys/#development-kit","title":"Development Kit","text":""},{"location":"EMBEDDED-SYS/embedded-sys/#arduino","title":"Arduino","text":"<ul> <li> <p> Arduino Cookbook, 3<sup>rd</sup> Edition</p> <p>Arthor: Michael Margolis, Brian Jepson, Nicholas Robert Weldin</p> <p>  Portal </p> </li> <li> <p> Raspberry Pi Cookbook, 4<sup>th</sup> Edition</p> <p>Arthor: Simon Monk</p> <p>  Portal </p> </li> </ul>"},{"location":"EMBEDDED-SYS/embedded-sys/#stm32","title":"STM32","text":""},{"location":"EMBEDDED-SYS/embedded-sys/#esp32","title":"ESP32","text":""},{"location":"EMBEDDED-SYS/embedded-sys/#raspberry-pi","title":"Raspberry Pi","text":""},{"location":"EMBEDDED-SYS/embedded-sys/#ide","title":"IDE","text":"<ul> <li> <p> Visual Studio Code \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>  Portal </p> </li> <li> <p> Ecilpse IDE</p> <p>  Portal </p> </li> <li> <p> Arduino IDE \u2705</p> <p>  Portal </p> </li> <li> <p> PlatformIO IDE \ud83c\udfaf\ud83c\udfc6</p> <p>  Portal </p> </li> <li> <p> Arm Keil MDK \ud83c\udfaf\ud83c\udfc6</p> <p>  Portal </p> </li> <li> <p> STM32CubeIDE \ud83c\udfaf\ud83c\udfc6</p> <p>  Portal </p> </li> </ul>"},{"location":"EMBEDDED-SYS/IDE/ide/","title":"IDE for Embedded Systems","text":""},{"location":"EMBEDDED-SYS/IDE/ide/#popular-ides","title":"Popular IDEs","text":"<ul> <li> <p> Visual Studio Code \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. </p> <p>  Portal </p> </li> <li> <p> Ecilpse IDE</p> <p>Eclipse IDE is an integrated development environment (IDE) used in computer programming. Its primary use is for developing Java applications, but it may also be used to develop applications in other programming languages via plug-ins. </p> <p>  Portal </p> </li> <li> <p> Arduino IDE \u2705</p> <p>Arduino IDE is a cross-platform application that is written in functions from C and C++. It is used to write and upload programs to Arduino compatible boards, but also, with the help of 3<sup>rd</sup> party cores, other vendor development boards. </p> <p>  Portal </p> </li> <li> <p> PlatformIO IDE \ud83c\udfaf\ud83c\udfc6</p> <p>PlatformIO IDE is the next-generation integrated development environment for IoT. Cross-platform build system and library manager. Continuous and IDE integration. Arduino, ESP8266 and ARM mbed compatible. Ready for Cloud compiling. In fact, it is a VSCode extension.</p> <p>  Portal </p> </li> <li> <p> Arm Keil MDK \ud83c\udfaf\ud83c\udfc6</p> <p>Arm Keil MDK is the most comprehensive software development solution for Arm-based microcontrollers and includes all components that you need to create, build, and debug embedded applications. For now, not only for ARM-based microcontrollers, but also for RISC-V, and other architectures.</p> <p>  Portal </p> </li> <li> <p> STM32CubeIDE</p> <p>STM32CubeIDE is an advanced C/C++ development platform with peripheral configuration, code generation, code compilation, and debug features for STM32 microcontrollers and microprocessors. </p> <p>  Portal </p> </li> </ul>"},{"location":"EMBEDDED-SYS/IDE/KEIL/keil/","title":"Keil IDE","text":""},{"location":"EMBEDDED-SYS/IDE/KEIL/keil/#resources","title":"Resources","text":""},{"location":"EMBEDDED-SYS/IDE/KEIL/keil/#arm-keil-official-website","title":"ARM-KEIL Official Website","text":"<p>Info</p> <p>One can download the Keil IDE from the official website as shown below.</p> <ul> <li> <p> Arm Keil MDK</p> <p>Arm Keil MDK is the most comprehensive software development solution for Arm-based microcontrollers and includes all components that you need to create, build, and debug embedded applications. For now, not only for ARM-based microcontrollers, but also for RISC-V, and other architectures.</p> <p>  Portal </p> </li> </ul> <p>Keil MDK is not free</p> <p>Keil MDK is not free, but you can apply for a free license for 1 year. Some may want to use crack version of Keil MDK, but it is not recommended. If you insist to do so, I believe you can find crackers on the Internet.</p> <p>  Apply for a free license </p> <p> Keil MDK vs Keil C51</p> <p>Keil C51 is specifically designed for 8051 microcontroller development, while Keil MDK is a more versatile development kit that supports a variety of microcontroller architectures, with a focus on ARM Cortex-M processors.</p>"},{"location":"EMBEDDED-SYS/IDE/KEIL/keil/#flash-programmer","title":"Flash Programmer","text":"<ul> <li> <p> Jlink Driver</p> <p>J-Link is a USB-powered JTAG emulator supporting a large number of CPU cores. It is used for developing and debugging ARM-based microcontrollers. It connects via USB to a PC running Microsoft Windows 2000 or later. J-Link is used around the world in tens of thousand places for development and production (flash programming) purposes.</p> <p>  Portal </p> </li> <li> <p> STM32 ST-LINK Utility</p> <p>ST-LINK/V2 is an in-circuit debugger and programmer for the STM8 and STM32 microcontroller families. The single wire interface module (SWIM) and JTAG/serial wire debugging (SWD) interfaces are used to communicate with any STM8 or STM32 microcontroller located on an application board.</p> <p>  Portal </p> </li> </ul> <p>Tip</p> <p>Try the programmer first, if not working, download and install the driver. Either Jlink or ST-LINK will do the work of flashing the program into the microcontroller.</p>"},{"location":"EMBEDDED-SYS/IDE/KEIL/keil/#installation-and-getting-started","title":"Installation and Getting Started","text":"<ul> <li> Getting Started with Keil MDK-ARM Version 5</li> </ul> <p>\ud83c\udfac\ufe0f Video Link</p> <ul> <li> Keil MDK-ARM Version 5 Getting Started Guide</li> </ul> <p>\ud83d\udcc4 Download Link</p>"},{"location":"HOME/about/","title":"ABOUT","text":""},{"location":"HOME/about/#about","title":"\ud83d\udd2d About","text":""},{"location":"HOME/about/#about-me","title":"About Me","text":"<p>Tip</p> <p>Just go to my personal website : \ud83c\udfd8\ufe0f www.cuishuaiwen.com.</p> <p></p>"},{"location":"HOME/about/#about-this-website","title":"About This Website","text":"<p>This website serves as a roadmap for my personal study, research and development. </p> <p></p>"},{"location":"HOME/sponsorship/","title":"SPONSORSHIP","text":""},{"location":"HOME/sponsorship/#sponsorship","title":"\ud83d\udc08\ufe0f Sponsorship","text":"<p>If you find this site useful and would like to support my projects, you can buy me a coffee through the QR codes below using Wechat Pay or Ali Pay.</p> <p></p>"},{"location":"IOT/iot/","title":"Internet of Things","text":""},{"location":"IOT/iot/#overview","title":"Overview","text":"<ul> <li> <p> IoT and Edge Computing for Architects - Second Edition\ud83c\udfaf\u2705\ud83c\udfc6</p> <p>Arthor: Perry Lea</p> <p>  Portal </p> </li> </ul>"},{"location":"IOT/iot/#hardware","title":"Hardware","text":"<p>Refer to the Embedded System Tab. </p>"},{"location":"IOT/iot/#software","title":"Software","text":"<p>To be updated.</p>"},{"location":"IOT/iot/#protocol","title":"Protocol","text":""},{"location":"IOT/iot/#open-systems-interconnection-osi-model","title":"Open Systems Interconnection (OSI) Model","text":"<p>original@sheldon</p> <p>Info</p> <p>OSI model is a conceptual model that characterizes and standardizes how different software and hardware components involved in a network communication should divide labor and interact with one another. It has seven layers.</p>"},{"location":"IOT/iot/#layer-7-application-layer","title":"Layer 7: Application Layer","text":"<p>The application layer of OSI model interacts directly with software applications to provide communication functions as required, and it is the closest to end users. Functions of application layer typically include verifying the availability of communication partners and resources to support any data transfer. This layer also defines protocols for end applications, such as domain name system (DNS), file transfer protocol (FTP), hypertext transfer protocol (HTTP), Internet massage access protocol (IMAP), post office protocol (POP), simple mail transfer protocol (SMTP), Simple Network Management Protocol (SNMP), and Telnet (a terminal emulation).</p>"},{"location":"IOT/iot/#layer-6-presentation-layer","title":"Layer 6: Presentation Layer","text":"<p>The presentation layer checks the data to ensure it is compatible with the communications resources. It translates the data into the form that the application level and lower levels accept. Any needed data formatting or code conversion is also handled by the sixth layer, such as converting an Extended Binary Coded Decimal Interchange Code (EBCDIC) coded text file to an American Standard Code for Information Interchange (ASCII) coded text file. It functions for data compression and encryption as well. For example, video calls will be compressed during the transmission so that it can be transmitted faster, and the data will be recovered at the receiving side. For the data that has high security requirements, such as a text message containing your password, it will be encrypted at this layer.</p>"},{"location":"IOT/iot/#layer-5-session-layer","title":"Layer 5: Session Layer","text":"<p>The session layer controls the dialogues (connections) between computers. It establishes, manages, maintains and ultimately terminates the connections between the local and remote application. Layer 5 software also handles authentication and authorization functions. It verifies the data is delivered as well. The session layer is commonly implemented explicitly in application environments that use remote procedure calls.</p>"},{"location":"IOT/iot/#layer-4-transport-layer","title":"Layer 4: Transport Layer","text":"<p>The transport layer provides the functions and means of transferring data sequences from a source to a destination host via one or more networks, while maintaining the quality of service (QoS) functions and ensure the complete delivery of the data. The integrity of the data can be guaranteed via error correction and similar functions. It can also provide explicit flow control function. Though not strictly conforming to the OSI model, the TCP and User Datagram Protocols (UDP) are essential protocols in layer 4.</p>"},{"location":"IOT/iot/#layer-3-network-layer","title":"Layer 3: Network Layer","text":"<p>The network layer handles packet routing via logical addressing and switching functions. A network is a medium to which many nodes can be connected. Every node has an address. When a node needs to transfer message to other nodes, it can merely provide the content of the massage and the address of the destination node, then the network will find the way to deliver the message to the destination node, possibly routing through other nodes. If the message is too long, the network may split it into several segments at one node, sending them separately and reassembling the fragments at another node.</p>"},{"location":"IOT/iot/#layer-2-data-link-layer","title":"Layer 2: Data Link Layer","text":"<p>The data link layer provides node-to-node transfer\u2014a link between two directly connected nodes. It handles packaging and unpacking the data in frames. It defines the protocol to establish and terminate a connection between two physically connected devices, such as Point-to-Point Protocol (PPP). The data link layer is generally divided into two sublayers\u2014media access control (MAC) layer and logical link control (LLC) layer. MAC layer is responsible for controlling how devices in a network gain access to a media and permission to transmit data. LLC layer is responsible for identifying and encapsulating network layer protocols, and controls error checking and frame synchronization.</p>"},{"location":"IOT/iot/#layer-1-physical-layer","title":"Layer 1: Physical Layer","text":"<p>The physical layer defines the electrical and physical specifications of the data connection. For example, the layout of pins of the connector, the operation voltages of an electrical cable, optical fiber cable specifications, and the frequency for wireless devices. It is responsible for transmission and reception of unstructured raw data in a physical medium. Bit rate control is done at the physical layer. It is the layer of low-level networking equipment and is never concerned with protocols or other higher-layer items.</p>"},{"location":"IOT/iot/#tcpip-model","title":"TCP/IP Model","text":"<p>Info</p> <p>TCP/IP model is also a layered reference model, but it is a four-layer model. Another name for it is Internet protocol suite. It is commonly known as TCP/IP because the foundational protocols are TCP and IP, but not only these two protocols are used in this model.</p>"},{"location":"IOT/iot/#application-layer","title":"Application Layer","text":"<p>The application layer of TCP/IP model provides applications the ability to access to services of the other layers, and defines the protocols that applications use to exchange data. Most widely-known application layer protocols include HTTP, FTP, SMTP, Telnet, DNS, SNMP and Routing Information Protocol (RIP).</p>"},{"location":"IOT/iot/#transport-layer","title":"Transport Layer","text":"<p>The transport layer, also known as the host-to-host transport layer, is responsible for providing the application layer with session and datagram communication services. The core protocols of this layer are TCP and UDP. TCP provides a one-to-one, connection-oriented, reliable communications service. It is responsible for sequencing and acknowledgment of packets sent, and recovery of packets lost in transmission. UDP provides one-to-one or one-to-many, connectionless, unreliable communications service. UDP is used typically when the amount of data to be transferred is small (such as that data would fit into a single packet).</p>"},{"location":"IOT/iot/#internet-layer","title":"Internet Layer","text":"<p>The Internet layer is responsible for host addressing, packaging, and routing functions. The core protocols of the Internet protocol layer are IP, Address Resolution Protocol (ARP), Internet Control Message Protocol (ICMP) and Internet Group Management Protocol (IGMP). The IP is a routable protocol responsible for IP addressing, routing, and the fragmentation and reassembly of packets. The ARP is responsible for the discovering the network access layer address such as a hardware address associated with a given Internet layer access. The ICMP is responsible for providing diagnostic functions and reporting errors due to the unsuccessful delivery of IP packets. The IGMP is responsible for the management of IP multicast groups. In this layer, the IP adds header to the packets, which is known as IP address. Now there\u2019s both IPv4 (32-bit) address and IP Ipv6 (128-bit) address.</p>"},{"location":"IOT/iot/#network-access-layer","title":"Network Access Layer","text":"<p>Network access layer (or link layer) is responsible for placing the TCP/IP packets on the network medium and receiving TCP/IP packets off the network medium. TCP/IP is designed to be independent of the network access method, frame format, and medium. In other word, it is independent from any specific network technology. In this way, TCP/IP can be used to connect different network types, such as Ethernet, Token Ring, X.25, Frame Relay, and Asynchronous Transfer Mode (ATM).</p> <p></p> <p></p>"},{"location":"IOT/iot/#protocol-stack","title":"Protocol Stack","text":"<p> \ud83d\udd17 image source</p> <p>I will use the OSI model layer to classify the protocols. </p>"},{"location":"IOT/iot/#layer-5-session-layer-layer-6-presentation-layer-layer-7-application-layer","title":"Layer 5: Session Layer &amp; Layer 6: Presentation Layer &amp; Layer 7: Application Layer","text":""},{"location":"IOT/iot/#resthttp","title":"REST/HTTP","text":""},{"location":"IOT/iot/#mqtt","title":"MQTT","text":""},{"location":"IOT/iot/#coap","title":"CoAP","text":""},{"location":"IOT/iot/#amqp","title":"AMQP","text":""},{"location":"IOT/iot/#dds","title":"DDS","text":""},{"location":"IOT/iot/#xmpp","title":"XMPP","text":""},{"location":"IOT/iot/#modbus","title":"Modbus","text":""},{"location":"IOT/iot/#layer-3-network-layer-layer-4-transport-layer","title":"Layer 3: Network Layer &amp; Layer 4: Transport Layer","text":""},{"location":"IOT/iot/#tcp","title":"TCP","text":""},{"location":"IOT/iot/#udp","title":"UDP","text":""},{"location":"IOT/iot/#ipv4","title":"IPv4","text":""},{"location":"IOT/iot/#ipv6","title":"IPv6","text":""},{"location":"IOT/iot/#6lowpan","title":"6LoWPAN","text":""},{"location":"IOT/iot/#layer-1-physical-layer-layer-2-data-link-layer","title":"Layer 1: Physical Layer &amp; Layer 2: Data Link Layer","text":""},{"location":"IOT/iot/#bluetooth","title":"Bluetooth \ud83d\udcf6","text":""},{"location":"IOT/iot/#thread","title":"Thread \ud83d\udcf6","text":""},{"location":"IOT/iot/#wifiieee-80211","title":"WiFi(IEEE 802.11) \ud83d\udcf6","text":""},{"location":"IOT/iot/#zigbee","title":"Zigbee \ud83d\udcf6","text":""},{"location":"IOT/iot/#z-wave","title":"Z-Wave \ud83d\udcf6","text":""},{"location":"IOT/iot/#lora","title":"LoRa \ud83d\udcf6","text":""},{"location":"IOT/iot/#nb-iot","title":"NB-IoT \ud83d\udcf6","text":""},{"location":"IOT/iot/#lte-m","title":"LTE-M \ud83d\udcf6","text":""},{"location":"IOT/iot/#sigfox","title":"Sigfox \ud83d\udcf6","text":""},{"location":"IOT/iot/#nfc","title":"NFC \ud83d\udcf6","text":""},{"location":"IOT/iot/#rfid","title":"RFID \ud83d\udcf6","text":""},{"location":"IOT/iot/#ethernet","title":"Ethernet\ud83d\udd0c","text":""},{"location":"IOT/iot/#usb","title":"USB\ud83d\udd0c","text":""},{"location":"IOT/iot/#iot-protocol-comparison","title":"IoT Protocol Comparison","text":""},{"location":"IOT/iot/#framework","title":"Framework","text":"<p>Home Assistant</p> <p>ThingsBoard</p>"},{"location":"IOT/MQTT/mqtt/","title":"Message Queuing Telemetry Transport (MQTT)","text":""},{"location":"IOT/MQTT/mqtt/#what-is-mqtt","title":"What is MQTT?","text":"<p>MQTT is a lightweight publish/subscribe messaging protocol designed for M2M (machine to machine) telemetry in low bandwidth environments. It was invented by Dr. Andy Stanford-Clark (IBM) and Arlen Nipper in 1999 and became an OASIS standard in 2014.</p>"},{"location":"IOT/MQTT/mqtt/#mqtt-features","title":"MQTT Features","text":"<ul> <li> <p>Lightweight: MQTT is designed to be used in low-bandwidth, high-latency networks. It is a publish/subscribe, extremely simple and lightweight messaging protocol, designed for constrained devices and low-bandwidth, high-latency or unreliable networks. The design principles are to minimise network bandwidth and device resource requirements whilst also attempting to ensure reliability and some degree of assurance of delivery. These principles also turn out to make the protocol ideal of the emerging \"machine-to-machine\" (M2M) or \"Internet of Things\" world of connected devices, and for mobile applications where bandwidth and battery power are at a premium.</p> </li> <li> <p>Publish/Subscribe: MQTT is based on a publish/subscribe model. This makes it suitable for Internet of Things messaging such as with low power sensors or mobile devices such as phones, embedded computers or microcontrollers.</p> </li> <li> <p>Asynchronous: MQTT is an asynchronous protocol. An MQTT client can send a message and carry on with other processing, a message will be delivered to the client when it is available.</p> </li> <li> <p>QoS: MQTT supports three qualities of service for delivering messages between clients and servers: \"at most once\", \"at least once\" and \"exactly once\". It is possible to achieve reliability with the \"at least once\" or \"exactly once\" modes, but this is not the default. For example, a sensor might only need to send a reading when a value has changed but an actuator may need to receive every message to ensure it has the latest control information.</p> </li> <li> <p>Retained Messages: MQTT supports retained messages. This is a useful feature of the MQTT protocol. It allows a client to publish a message that is stored by the server and sent to any future subscribers that subscribe to the matching topic. This is useful for messages such as status updates where a client can publish an update to a status topic and any new clients that connect will receive the most recent update.</p> </li> <li> <p>Small code footprint: The whole MQTT protocol specification is documented in about 30 pages of text. This makes it ideal for mobile devices such as cell phones, which need to keep their power usage down, or for embedded devices where memory is at a premium.</p> </li> <li> <p>Open protocol: MQTT is an open protocol, and as such is royalty free. It is also an OASIS standard.</p> </li> </ul>"},{"location":"IOT/MQTT/mqtt/#working-paradigm","title":"Working Paradigm","text":"<p>MQTT is a publish/subscribe messaging protocol. It is designed for connections with remote locations where a \"small code footprint\" is required or the network bandwidth is limited. The publish/subscribe messaging pattern requires a message broker. The broker is responsible for distributing messages to interested clients based on the topic of a message.</p>"},{"location":"IOT/MQTT/mqtt/#key-roles","title":"Key Roles","text":"<ul> <li> <p>Publisher: A publisher is an application that connects to a broker. It creates and sends messages. The content of the messages is completely up to the publisher. The broker will distribute the messages to interested subscribers.</p> </li> <li> <p>Subscriber: A subscriber is an application that connects to the broker. The subscriber can specify the topics it is interested in. The broker will distribute only the messages that are of interest to the subscriber.</p> </li> <li> <p>Broker: A broker is an intermediary that handles the passing of messages between publishers and subscribers. The Eclipse Mosquitto broker is open source and can be downloaded from the Mosquitto project page on GitHub.</p> </li> </ul>"},{"location":"IOT/MQTT/mqtt/#mqtt-servers","title":"MQTT Servers","text":""},{"location":"IOT/MQTT/mqtt/#emq-x","title":"EMQ X","text":"<p>EMQ X is an open source MQTT broker that implements MQTT versions 5.0, 3.1.1 and 3.1. It is a highly scalable broker that can be run in the cloud. It is an open source project and can be found on the EMQ X project page.</p>"},{"location":"IOT/MQTT/mqtt/#mosquitto","title":"Mosquitto","text":"<p>Mosquitto is an open source message broker that implements MQTT versions 5.0, 3.1.1 and 3.1. It is a lightweight broker that can be run on low power devices such as the Raspberry Pi. It is an open source project and can be found on the Eclipse Mosquitto project page.</p>"},{"location":"IOT/MQTT/mqtt/#hivemq","title":"HiveMQ","text":"<p>HiveMQ is a commercial MQTT broker that implements MQTT versions 5.0, 3.1.1 and 3.1. It is a highly scalable broker that can be run in the cloud. It is a commercial product and can be found on the HiveMQ website.</p>"},{"location":"IOT/MQTT/mqtt/#mqtt-clients-publishers-and-subscribers","title":"MQTT Clients - (Publishers and Subscribers)","text":""},{"location":"IOT/MQTT/mqtt/#paho","title":"Paho","text":"<p>Paho is an open source MQTT client library. It is available for a wide range of programming languages including Java, JavaScript, C, C++, Python, Go, Ruby and C#. It is an open source project and can be found on the Paho project page.</p>"},{"location":"IOT/MQTT/mqtt/#emq-x_1","title":"EMQ X","text":"<p>EMQ X is an open source MQTT client library. It is available for a wide range of programming languages including Java, JavaScript, C, C++, Python, Go, Ruby and C#. It is an open source project and can be found on the EMQ X project page.</p>"},{"location":"IOT/MQTT/mqtt/#mqttjs","title":"MQTT.js","text":"<p>MQTT.js is an open source MQTT client library. It is available for JavaScript. It is an open source project and can be found on the MQTT.js project page.</p>"},{"location":"IOT/MQTT/BROKER/broker/","title":"MQTT Broker","text":""},{"location":"IOT/MQTT/BROKER/broker/#emq-x-broker","title":"EMQ X Broker","text":"<p>To be updated</p>"},{"location":"IOT/MQTT/CLIENT/client/","title":"MQTT Client","text":""},{"location":"IOT/MQTT/CLIENT/client/#paho-python","title":"Paho-Python","text":"<p>Here is an example of using the Paho-Python library to create an MQTT client. To run you need to install the dependencies first. After that you can create two scripts for the subscriber and publisher. Run the subscriber first and then the publisher. You should see the message received by the subscriber.</p>"},{"location":"IOT/MQTT/CLIENT/client/#subscriber","title":"Subscriber","text":"<pre><code>import paho.mqtt.client as mqtt\n\n# Define the MQTT broker, topic, username, and password\nbroker_address = \"8.222.194.160\"  # Replace with your MQTT broker address\nport = 1883 # Replace with your MQTT broker port\nheartbeat_interval = 60  # The number of seconds until a heartbeat message is sent\ntopic = \"csw-iot\"\nusername = \"cshwstem\"  # Replace with your MQTT broker username\npassword = \"88888888\"  # Replace with your MQTT broker password\n\n# Callback when the client connects to the broker\ndef on_connect(client, userdata, flags, rc):\n    print(\"Connected with result code \" + str(rc))\n    # Subscribe to the topic when connected\n    client.subscribe(topic)\n\n# Callback when a message is received from the broker\ndef on_message(client, userdata, msg):\n    print(f\"Received message on topic {msg.topic}: {msg.payload.decode()}\")\n\n# Create an MQTT client instance\nclient = mqtt.Client()\n\n# Set username and password\nclient.username_pw_set(username, password)\n\n# Set callback functions\nclient.on_connect = on_connect\nclient.on_message = on_message\n\n# Connect to the broker\nclient.connect(broker_address, port, heartbeat_interval)\n\n# Start the loop to handle network communication, callbacks, and reconnecting\nclient.loop_start()\n\n# Wait for the connection to be established\nwhile not client.is_connected():\n    pass\n\n# Continue the program execution\ntry:\n    # The client will subscribe to the topic in the on_connect callback\n    while True:\n        pass\n\nexcept KeyboardInterrupt:\n    # Disconnect from the broker when the program is interrupted\n    client.disconnect()\n    print(\"Disconnected from the broker\")\n</code></pre>"},{"location":"IOT/MQTT/CLIENT/client/#publisher","title":"Publisher","text":"<pre><code>import paho.mqtt.client as mqtt\n\n# Define the MQTT broker, topic, username, and password\nbroker_address = \"8.222.194.160\"  # Replace with your MQTT broker address\nport = 1883 # Replace with your MQTT broker port\nheartbeat_interval = 60  # The number of seconds until a heartbeat message is sent\ntopic = \"csw-iot\"\nusername = \"cshwstem\"  # Replace with your MQTT broker username\npassword = \"88888888\"  # Replace with your MQTT broker password\n\n# Define the message to be sent\nmessage = \"Hello from Shuaiwen, MQTT!\"\n\n# Callback when the client connects to the broker\ndef on_connect(client, userdata, flags, rc):\n    print(\"Connected with result code \" + str(rc))\n    # Publish the message when connected\n    client.publish(topic, message)\n\n# Callback when the message is published\ndef on_publish(client, userdata, mid):\n    print(\"Message Published\")\n\n# Create an MQTT client instance\nclient = mqtt.Client()\n\n# Set username and password\nclient.username_pw_set(username, password)\n\n# Set callback functions\nclient.on_connect = on_connect\nclient.on_publish = on_publish\n\n# Connect to the broker\nclient.connect(broker_address, port, heartbeat_interval)\n\n# Start the loop to handle network communication, callbacks, and reconnecting\nclient.loop_start()\n\n# Wait for the connection to be established\nwhile not client.is_connected():\n    pass\n\n# Continue the program execution\ntry:\n    # The client will publish the message in the on_connect callback\n    while True:\n        pass\n\nexcept KeyboardInterrupt:\n    # Disconnect from the broker when the program is interrupted\n    client.disconnect()\n    print(\"Disconnected from the broker\")\n</code></pre>"},{"location":"IOT/WSN/wsn/","title":"Wireless Sensor Network (WSN)","text":"<p>Wireless senor network is a network of spatially distributed autonomous sensors to monitor physical or environmental conditions, such as temperature, sound, pressure, etc. and to cooperatively pass their data through the network to a main location. The more modern networks are bi-directional, also enabling control of sensor activity. The development of wireless sensor networks was motivated by military applications such as battlefield surveillance; today such networks are used in many industrial and consumer applications, such as industrial process monitoring and control, machine health monitoring, and so on.</p> <ul> <li> <p> Handbook of Sensor Networks: Algorithms and Architectures\ud83c\udfaf</p> <p>Arthor: Ivan Stojmenovi\u0107</p> <p>  Portal </p> </li> </ul>"},{"location":"MATH/math/","title":"Math","text":""},{"location":"MATH/math/#math","title":"Math","text":""},{"location":"MATH/math/#generic","title":"Generic","text":"<ul> <li> <p> 3Blue1Brown</p> <p>A YouTube channel about math and programming\u3002</p> <p>  Portal  </p> </li> <li> <p> Python For Beginners \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>in Chinese, Visual ML Series 1</p> <p>Reading Progress: [36/36]</p> <p>Code Practice: [12/36]</p> <p>  Portal </p> </li> <li> <p> Beauty of Data Visualization \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>in Chinese, Visual ML Series 2</p> <p>Reading Progress: [36/36]</p> <p>Code Practice: [0/36]</p> <p>  Portal </p> </li> <li> <p> Elements of Mathematics</p> <p>in Chinese, Visual ML Series 3</p> <p>  Portal </p> </li> </ul>"},{"location":"MATH/math/#analysis","title":"Analysis","text":"<ul> <li> <p> Calculus, 8<sup>th</sup> Edition</p> <p>in English, by James Stewart</p> <p>  Portal </p> </li> </ul>"},{"location":"MATH/math/#algebra","title":"Algebra","text":"<ul> <li> <p> Interactive Linear Algebra</p> <p>in English, by Dan Margalit and Joseph Rabinoff</p> <p>  Portal </p> </li> <li> <p> Power of Matrix</p> <p>in Chinese, Visual ML Series 4</p> <p>  Portal </p> </li> </ul>"},{"location":"MATH/math/#geometry","title":"Geometry","text":""},{"location":"MATH/math/#probability-and-statistics","title":"Probability and Statistics","text":"<ul> <li> <p> Essentials of Posibility and Statistics</p> <p>in Chinese, Visual ML Series 5</p> <p>  Portal </p> </li> </ul>"},{"location":"PERCEPTION/perception/","title":"Perception","text":""},{"location":"PROJECT/project/","title":"Projects","text":""},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/","title":"Tech Blog Using MkDocs and Material Theme","text":""},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#introduction","title":"Introduction","text":"<p>For tech blog, one may don't want to use the traditional blog platform, such as WordPress, Blogger, etc. Instead, one may want to use a static site generator, which is much lightweight and easy to use. Popular static site generators include:</p> <ul> <li> <p>MkDocs (My Pick)</p> </li> <li> <p>docsify</p> </li> <li> <p>VuePress</p> </li> <li> <p>Docusaurus</p> </li> <li> <p>GitBook</p> </li> <li> <p>Hexo</p> </li> <li> <p>Jekyll</p> </li> <li> <p>Hugo</p> </li> <li> <p>Gatsby</p> </li> <li> <p>DocFX</p> </li> <li> <p>Sphinx</p> </li> </ul>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#what-is-mkdocs","title":"What Is MkDocs?","text":"<p>MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. It features a built-in development server that reloads your changes as you edit the source files, so you can see your changes instantly. MkDocs is available on PyPI and can be installed through pip.</p>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#what-is-material-theme","title":"What Is Material Theme?","text":"<p>Material is a theme for MkDocs, an excellent static site generator geared towards project documentation. It is built using Google's Material Design guidelines. Material has been designed to be beautiful and easy to use. It comes with built-in support for Material Design icons, Material Design colours, and Roboto fonts. Material is also fully responsive, meaning it looks great on desktop as well as mobile devices.</p>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#how-to-use-mkdocs","title":"How To Use MkDocs?","text":""},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#installation","title":"Installation","text":"<p>MkDocs is available from PyPI and can be installed through pip:</p> <pre><code>pip install mkdocs\n</code></pre>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#getting-started","title":"Getting Started","text":"<p>Getting started is super easy. </p>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#step-1-start-a-new-project","title":"Step 1: Start a new project","text":"<pre><code>mkdocs new my-project\n</code></pre> <p>This step will create a new project directory named <code>my-project</code> containing a single configuration file named <code>mkdocs.yml</code> and a folder named <code>docs</code> that will contain your documentation source files. Inside the <code>docs</code> directory, a new file named <code>index.md</code> will already exist. Open this file in your text editor. The folder structure should look like this:</p> <pre><code>my-project/\n  mkdocs.yml\n  docs/\n    index.md\n</code></pre>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#step-2-preview-your-site","title":"Step 2: Preview your site","text":"<p><pre><code>cd my-project\nmkdocs serve\n</code></pre> This step will start the built-in dev-server, which will reload your documentation whenever anything changes. Open up http://127.0.0.1:8000/ in your browser, and you'll see the default home page being displayed. The dev-server also supports auto-reloading, and will rebuild your documentation whenever anything in the configuration file, documentation directory, or theme directory changes.</p>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#step-3-deploy","title":"Step 3: Deploy","text":"<pre><code>mkdocs build\n</code></pre> <p>This step is to build the documentation site. The documentation site will be located in the <code>site</code> directory, which can be copied to any standard web server for hosting.</p> <p>Tip</p> <p>Note that, better build the website in the server rather than locally. That means, when uploading the website to the server, don't upload the <code>site</code> directory. For example, you can use gitignore to ignore the <code>site</code> directory. Then, in the server, in corresponding directory, run <code>mkdocs build</code> to build the website. </p>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#configuration","title":"Configuration","text":"<p>The configuration file is named <code>mkdocs.yml</code>, and is located in the root of your project. The configuration file is a YAML file, with a simple structure. The configuration file contains a list of pages (in the <code>pages</code> key), a list of options (in the <code>site_name</code> key), and a list of pages to be excluded from the build (in the <code>exclude</code> key).</p> <pre><code>site_name: My Project\nsite_description: A short description of my project.\nsite_author: Your Name\nsite_url: https://example.com\nsite_dir: site\nsite_favicon: images/favicon.ico\n# ...\n</code></pre> <p>Tip</p> <p>For this part, if you use the material them later, you can directly use the template <code>mkdocs.yml</code> file in the <code>material</code> directory. Follow the instructions from Material for MkDocs to modify the configuration.</p>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#writing-documentation","title":"Writing Documentation","text":"<p>The documentation files are written in Markdown, and configured with a single YAML configuration file. The documentation files are stored in the <code>docs</code> directory by default, but you can customize this using the <code>docs_dir</code> configuration parameter.</p>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#how-to-use-material-theme","title":"How To Use Material Theme?","text":"<p>refer to Material for MkDocs, there is a very detailed documentation. </p>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#installation_1","title":"Installation","text":"<p>Material for MkDocs is available from PyPI and can be installed through pip:</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>To view your projects in real time, run the following command:</p> <pre><code>mkdocs serve\n</code></pre> <p>if you get some errors reporting some modules not found, you can try to install them manually. Mainly due to the plugins, in my case, rss, minify, and i18n.</p> <pre><code>pip install mkdocs-rss-plugin\n</code></pre> <pre><code>pip install mkdocs-minify-plugin\n</code></pre> <pre><code>pip install mkdocs-static-i18n\n</code></pre>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#configuration_1","title":"Configuration","text":"<p>This part should be paid attention to. I use my own configuration file as an example. Refer to the comments in the configuration file for details.</p> <p><pre><code># Project information\nsite_name: Eureka! # site name\nsite_url: https://localhost:8000/ # build and run on server, to visit it, type in the server's IP address and port number like this: xxx.xxx.xxx.xxx:8000\nsite_author: Shuaiwen Cui # author name\nsite_description: &gt;- # site description\n  Welcome to Shaun's rabbit hole. This site serves as a personal knowledge base for me to record my thoughts and ideas. It is also a place for me to share my knowledge and experience with the world. I hope you find something useful here. \n\n# Repository - if you want to share your website repo, you can add this part\nrepo_name: Shuaiwen-Cui/Infinity # repo name\nrepo_url: https://github.com/Shuaiwen-Cui/Infinity.git/ # repo url\n\n# Copyright - there will be a section in the left bottom showing the info below\ncopyright: Copyright &amp;copy; 2023 ~ now | \ud83d\ude80 Shuaiwen Cui (Shaun)\n\n# Configuration\ntheme:\n  custom_dir: material/overrides # custom directory for overriding theme templates, for certain pages, you may don't want to use the default template, you can create a new template in this directory and use it. \n  name: material # theme name, material is the most popular one\n  logo: static/images/logo.png # logo\n  language: en # default language\n  features: # features to be used    \n    - announce.dismiss # announcement bar dismiss button\n    - content.action.edit # edit button\n    - content.action.view # view button\n    - content.code.annotate # code annotation\n    - content.code.copy # copy code button\n    # - content.code.select # select code button\n    # - content.tabs.link # link tabs to sections\n    - content.tooltips # tooltips\n    # - header.autohide # auto hide header\n    - navigation.expand # expand the side navigation bar by default\n    - navigation.footer # footer navigation\n    - navigation.indexes # documents can be directly attached to sections, which is particularly useful for providing overview pages\n    # - navigation.instant # instant navigation - better comment out this item, otherwise, once you switch the language, it will jump back to the home page\n    - navigation.instant.prefetch # for large file\n    - navigation.instant.progress # loading progress bar\n    - navigation.path # breadcrumb path on top of page\n    # - navigation.prune # only build the visible part of the navigation tree\n    - navigation.sections # navigation - top level will render as sections\n    - navigation.tabs # navigation - top level will render as tabs\n    - navigation.tabs.sticky # tabs stick to the top of the page\n    - navigation.top # top navigation\n    - navigation.tracking # navigation tracking\n    - search.highlight # search result highlight\n    - search.share # share search results\n    - search.suggest # search suggestions\n    - toc.follow # table of content follow scroll\n    # - toc.integrate # toc is merged into the left navigation bar\n  palette:\n    - media: \"(prefers-color-scheme)\" # color scheme\n      scheme: slate\n      primary: black\n      accent: indigo\n      toggle:\n        icon: material/link\n        name: Switch to light mode\n    - media: \"(prefers-color-scheme: light)\" # color scheme: light\n      scheme: default\n      primary: indigo\n      accent: indigo\n      toggle:\n        icon: material/toggle-switch\n        name: Switch to dark mode\n    - media: \"(prefers-color-scheme: dark)\" # color scheme: dark\n      scheme: slate\n      primary: black\n      accent: indigo\n      toggle:\n        icon: material/toggle-switch-off\n        name: Switch to system preference\n  font: # font\n    text: Roboto\n    code: Roboto Mono\n  favicon: assets/favicon.png # favicon\n  icon: # icons used\n    logo: logo\n    previous: fontawesome/solid/angle-left\n    next: fontawesome/solid/angle-right\n    tag:\n      default-tag: fontawesome/solid/tag\n      hardware-tag: fontawesome/solid/microchip\n      software-tag: fontawesome/solid/laptop-code\n\n# Plugins\nplugins:\n  - tags # tags\n  - blog # blog\n  - rss: # rss\n      match_path: blog/posts/.* \n      date_from_meta:\n        as_creation: date\n      categories:\n        - categories\n        - tags \n  # - social\n  - search: # search\n      separator: '[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&amp;[lg]t;|(?!\\b)(?=[A-Z][a-z])'\n  - minify: # minify\n      minify_html: true\n  # - privacy\n  - i18n: # internationalization for language switch\n      docs_structure: suffix\n      fallback_to_default: true\n      reconfigure_material: true\n      reconfigure_search: true\n      languages: # This part should be really careful. For now, I cannot do stay on the same page after switching language. There should be more elegant way to do this.\n        - locale: en\n          default: true\n          name: English\n          build: true\n          # site_name: Infinity\n        - locale: zh\n          name: \u7b80\u4f53\u4e2d\u6587\n          build: true\n          nav_translations: # note that all titles and subtitles in the navigation bar must be translated need to be translated can be put here, but with no indentation\n            HOME: \u9996\u9875\n            ABOUT: \u5173\u4e8e\n            SPONSORSHIP: \u8d5e\u52a9\n            CS: \u8ba1\u7b97\u673a\n            CODING: \u7f16\u7a0b\n            EMBEDDED-SYS: \u5d4c\u5165\u5f0f\u7cfb\u7edf\n            DSP: \u6570\u5b57\u4fe1\u53f7\u5904\u7406\n            PERCEPTION: \u611f\u77e5\n            ACTUATION: \u6267\u884c\n            IOT: \u7269\u8054\u7f51\n            CLOUD: \u4e91\n            CLOUD-TECH: \u4e91\u6280\u672f\n            HANDS-ON: \u4e0a\u624b\u5b9e\u8df5\n            Have A Server: \u62e5\u6709\u4e00\u53f0\u670d\u52a1\u5668\n            Server Configuration: \u670d\u52a1\u5668\u914d\u7f6e\n            AI: \u4eba\u5de5\u667a\u80fd\n            RESEARCH: \u7814\u7a76\n            PROJECT: \u9879\u76ee\n# # Hooks\n# hooks:\n#   - material/overrides/hooks/shortcodes.py\n#   - material/overrides/hooks/translations.py\n\n# Additional configuration\nextra:\n  generator: false # show the generator in the footer\n  status:\n    new: Recently added\n    deprecated: Deprecated\n  analytics:\n    provider: google\n    property: !ENV GOOGLE_ANALYTICS_KEY\n    feedback: # feedback form\n      title: Was this page helpful?\n      ratings:\n        - icon: material/thumb-up-outline\n          name: This page was helpful\n          data: 1\n          note: &gt;-\n            Thanks for your feedback!\n        - icon: material/thumb-down-outline\n          name: This page could be improved\n          data: 0\n          note: &gt;- \n            Thanks for your feedback! Help us improve this page by\n            using our &lt;a href=\"...\" target=\"_blank\" rel=\"noopener\"&gt;feedback form&lt;/a&gt;.\n  # alternate:\n  #   - name: English\n  #     link: /en/ \n  #     lang: en\n  #   - name: Chinese\n  #     link: /zh/\n  #     lang: zh\n  social: # social media links at the right bottom\n    - icon: fontawesome/solid/house\n      link: http://www.cuishuaiwen.com/\n    - icon: fontawesome/brands/github\n      link: https://github.com/Shuaiwen-Cui\n    - icon: fontawesome/brands/linkedin\n      link: https://www.linkedin.com/in/shaun-shuaiwen-cui/\n    - icon: fontawesome/brands/researchgate\n      link: https://www.researchgate.net/profile/Shuaiwen-Cui\n    - icon: fontawesome/brands/orcid\n      link: https://orcid.org/0000-0003-4447-6687\n    - icon: fontawesome/brands/twitter\n      link: https://twitter.com/ShuaiwenC\n  tags: # tags - corresponding to the tags plugin\n    Default: default-tag\n    Hardware: hardware-tag\n    Software: software-tag\n  # consent:\n  #   title: Cookie consent\n  #   description: &gt;- \n  #     We use cookies to recognize your repeated visits and preferences, as well\n  #     as to measure the effectiveness of our documentation and whether users\n  #     find what they're searching for. With your consent, you're helping us to\n  #     make our documentation better.\n\n# Extensions\nmarkdown_extensions: # markdown extensions\n  - abbr\n  - admonition\n  - attr_list\n  - def_list\n  - footnotes\n  - md_in_html\n  - toc:\n      permalink: true\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.details\n  - pymdownx.emoji:\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.keys\n  - pymdownx.magiclink:\n      normalize_issue_symbols: true\n      repo_url_shorthand: true\n      user: squidfunk\n      repo: mkdocs-material\n  - pymdownx.mark\n  - pymdownx.smartsymbols\n  - pymdownx.snippets:\n      auto_append:\n        - includes/mkdocs.md\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n  - pymdownx.tabbed:\n      alternate_style: true\n      combine_header_slug: true\n      slugify: !!python/object/apply:pymdownx.slugs.slugify\n        kwds:\n          case: lower\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.tilde\n\n# Page Navigation Tree\nnav: # navigation tree - please follow my way to do this, otherwise, it may not work. the quotes can be omitted. The dot and slash in the beginning can also be omitted. (\"./HOME/about.md\" or Home/about.md) \n# note that here, the file name is like filename.md, but in the folders, it is actually named as filename.en.md and filename.zh.md. This is because, in the configuration file, I set the default language as English. So, if you want to add a new page, you need to add two files, one is filename.en.md, the other is filename.zh.md.\n  - HOME: \n      - \"index.md\"\n      - ABOUT: \"./HOME/about.md\"\n      - SPONSORSHIP: \"./HOME/sponsorship.md\"\n  - CS: \n      - \"./CS/CS.md\"\n  - CODING: \n      - \"./CODING/coding.md\"\n  - EMBEDDED-SYS: \n      - \"./EMBEDDED-SYS/embedded-sys.md\"\n  - DSP: \n      - \"./DSP/dsp.md\"\n  - PERCEPTION: \n      - \"./PERCEPTION/perception.md\"\n  - ACTUATION: \n      - \"./ACTUATION/actuation.md\"\n      - ROS: \"./ACTUATION/ROS/ros.md\"\n  - IOT: \n      - \"./IOT/iot.md\"\n  - CLOUD: \n      - \"./CLOUD/cloud.md\"\n      - CLOUD-TECH: \"./CLOUD/CLOUD-TECH/cloud-tech.md\"\n      - HANDS-ON:\n          - Have A Server: \"./CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server.md\"\n          - Server Configuration: \"./CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config.md\"\n          - Get A Domain Name: \"./CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name.md\"\n  - AI: \n      - \"./AI/ai.md\"\n  - RESEARCH: \n      - \"./RESEARCH/research.md\"\n  - PROJECT: \n      - \"./PROJECT/project.md\"\n      - TECH-BLOG: \"./PROJECT/TECH-BLOG/mkdocs_and_material.md\"\n</code></pre> This configuration file should help you build a gorgeous website like you see now. Actually, almost all the configuration is done in this file.</p>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#writing-documentation_1","title":"Writing Documentation","text":"<p>For a tech blog, the contents matter the most, but I cannot help you with that. However, I can give a useful tip for you to make your article more beautiful.</p> <p>Tip</p> <p>you can check the material theme documentation to study their markdown syntax.  </p> <p>Here are some useful syntax:</p> <ul> <li> <p>Note <pre><code>!!! note\n    This is a note.\n</code></pre></p> </li> <li> <p>Tip <pre><code>!!! tip\n    This is a tip.\n</code></pre></p> </li> <li> <p>Warning <pre><code>!!! warning\n    This is a warning.\n</code></pre></p> </li> <li> <p>Danger <pre><code>!!! danger\n    This is a danger.\n</code></pre></p> </li> <li> <p>Success <pre><code>!!! success\n    This is a success.\n</code></pre></p> </li> <li>Info <pre><code>!!! info\n    This is an info.\n</code></pre></li> <li>Quote <pre><code>!!! quote\n    This is a quote.\n</code></pre></li> <li>Question <pre><code>??? question \"What is the meaning of life, the universe, and everything?\"\n    42.\n</code></pre></li> </ul> <ul> <li>Note</li> </ul> <p>Note</p> <p>This is a note.</p> <ul> <li>Tip</li> </ul> <p>Tip</p> <p>This is a tip.</p> <ul> <li>Warning</li> </ul> <p>Warning</p> <p>This is a warning.</p> <ul> <li>Danger</li> </ul> <p>Danger</p> <p>This is a danger.</p> <ul> <li>Success</li> </ul> <p>Success</p> <p>This is a success.</p> <ul> <li>Info</li> </ul> <p>Info</p> <p>This is an info.</p> <ul> <li>Quote</li> </ul> <p>Quote</p> <p>This is a quote.</p> <ul> <li>Question</li> </ul> What is the meaning of life, the universe, and everything? <p>Nothing.</p>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#upload-and-deploy-method-1-direct-upload-to-server","title":"Upload And Deploy - Method 1 - Direct Upload To Server","text":""},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#upload","title":"Upload","text":"<pre><code>scp -r &lt;local directory&gt; &lt;username&gt;@&lt;server address&gt;:&lt;remote directory&gt;\n</code></pre>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#deploy","title":"Deploy","text":"<pre><code>cd &lt;remote directory&gt;\nmkdocs build\n</code></pre>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#mount-to-nginx","title":"Mount To Nginx","text":"<p>Before mounting to Nginx, you need to install Nginx first.</p> <p><pre><code>sudo apt-get install nginx\n</code></pre> Then, you need to modify the configuration file of Nginx.</p> <pre><code>sudo vim /etc/nginx/sites-available/default\n</code></pre> <p>Enter the following file, press <code>i</code> to enter insert mode, and modify the file as follows:</p> <p><pre><code>server {\n    listen 80; # by default, the port is 80 # if you use other port (e.g., 8000), you need to specify it here. Accordingly, when you visit the website, you need to type in the port number like this: xxx.xxx.xxx.xxx:8000\n    server_name &lt;server address&gt;; # name as you like\n    root &lt;remote directory&gt;/site; # the site folder is where the built website is located\n    index index.html index.htm;\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n</code></pre> Then, press <code>esc</code> to exit insert mode, and type in <code>:wq</code> to save and exit.</p> <p>Finally, restart Nginx.</p> <pre><code>sudo nginx -t # test\nsudo systemctl restart nginx # restart nginx\n</code></pre>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#upload-and-deploy-method-2-upload-to-github-and-deploy-to-server-recommended","title":"Upload And Deploy - Method 2 - Upload To GitHub And Deploy To Server (Recommended)","text":"<p>If you are familiar with git &amp; github, this method is recommended.</p> <p>I assume you have already link your local repo to the remote repo on GitHub. If not, please refer to GitHub Docs to create a repo and link it to your local repo.</p> <p>Tip</p> <p>Note that, better build the website in the server rather than locally. That means, when uploading the website to the server, don't upload the <code>site</code> directory. For example, you can use gitignore to ignore the <code>site</code> directory. Then, in the server, in corresponding directory, run <code>mkdocs build</code> to build the website.</p> <p>To use a gitignore file, you can create a file named <code>.gitignore</code> in the root directory of your repo. Then, you can add the following content to the file:</p> <pre><code># Ignore site directory\nsite/\n</code></pre>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#upload_1","title":"Upload","text":"<p><pre><code>git add .\ngit commit -m \"update\"\ngit push origin master # or it can be 'git push origin main'\n</code></pre> If you use github pages to host your website, you can use optionally use the following command to push the website to the gh-pages branch.</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>Tip</p> <p>For me, I have a .sh file to do this. You can refer to the <code>upload.sh</code> file in this repo. You can modify it as you like. Then, you can use the following command to upload the website to the server.</p> <pre><code>./upload.sh # for Windows\n</code></pre> <p>or</p> <pre><code>sh upload.sh # for Linux\n</code></pre> <p>or</p> <pre><code>bash upload.sh # for Linux\n</code></pre>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#deploy_1","title":"Deploy","text":"<p>On the server, you need to pull the repo and build the website.</p> <p>If this is the first time you pull the repo, you need to clone the repo first.</p> <pre><code>git clone &lt;repo url&gt;\n</code></pre> <p>Otherwise, you can pull the repo.</p> <pre><code>git pull\n</code></pre> <p>Then, enter the repo directory, and build the website.</p> <pre><code>cd &lt;repo directory&gt;\n</code></pre> <p>Then, build the website.</p> <pre><code>mkdocs build\n</code></pre> <p>Finally, mount to Nginx. Please refer to the previous section in Method 1.</p>"},{"location":"PROJECT/TECH-BLOG/mkdocs_and_material/#the-end","title":"The End","text":"<p>Enjoy your website!</p>"},{"location":"RESEARCH/research/","title":"Researches","text":""},{"location":"ReferenceCode/browser-support/","title":"Browser support","text":"<p>Material for MkDocs goes at great lengths to support the largest possible range of browsers while retaining the simplest possibilities for customization via modern CSS features like custom properties and mask images.</p>"},{"location":"ReferenceCode/browser-support/#supported-browsers","title":"Supported browsers","text":"<p>The following table lists all browsers for which Material for MkDocs offers full support, so it can be assumed that all features work without degradation. If you find that something doesn't look right in a browser which is in the supported version range, please open an issue:</p> Browser Version Release date Usage desktop mobile overall  Chrome 49+ 03/2016 25.65% 38.33% 63.98%  Safari 10+ 09/2016 4.63% 14.96% 19.59%  Edge 79+ 01/2020 3.95% n/a 3.95%  Firefox 53+ 04/2017 3.40% .30% 3.70%  Opera 36+ 03/2016 1.44% .01% 1.45% 92.67% <p>Browser support matrix sourced from caniuse.com.<sup>1</sup></p> <p>Note that the usage data is based on global browser market share, so it could in fact be entirely different for your target demographic. It's a good idea to check the distribution of browser types and versions among your users.</p>"},{"location":"ReferenceCode/browser-support/#other-browsers","title":"Other browsers","text":"<p>Albeit your site might not look as perfect as when viewed with a modern browser, the following older browser versions might work with some additional effort:</p> <ul> <li> Firefox 31-52 \u2013 icons will render as little   boxes due to missing support for mask images. While this cannot be   polyfilled, it might be mitigated by hiding the icons altogether.</li> <li> Edge 16-18 \u2013 the spacing of some elements might   be a little off due to missing support for the :is pseudo selector, which   can be mitigated with some additional effort.</li> <li> Internet Explorer - no support,   mainly due to missing support for custom properties. The last version of   Material for MkDocs to support Internet Explorer is   </li> </ul> <p>.</p> <ol> <li> <p>The data was collected from caniuse.com in January 2022, and is primarily based on browser support for custom properties, mask images and the :is pseudo selector which are not entirely polyfillable. Browsers with a cumulated market share of less than 1% were not considered, but might still be fully or partially supported.\u00a0\u21a9</p> </li> </ol>"},{"location":"ReferenceCode/reference/","title":"Reference","text":"<p>This file is for reference uses.</p>"},{"location":"ReferenceCode/reference/#common-emojis","title":"Common Emojis","text":"<p>\ud83c\udfc6 \ud83c\udfd7\ufe0f \ud83d\udccc \ud83d\udd2c \ud83e\uddf0 \u2699 \ud83d\ude80 \ud83d\udcc9 \ud83c\udf99\ufe0f \ud83d\udcf8 \ud83c\udfac\ufe0f \ud83e\udde0 \ud83e\udd16 \ud83e\udd77\ud83c\udffb \ud83c\udf10 \ud83d\udce7 \u2712\ufe0f \ud83c\udfd8\ufe0f \ud83e\uddbe \ud83d\udd17 \ud83d\udd8b\ufe0f \ud83d\udcda\ufe0f \u2601\ufe0f  \ud83d\udd79\ufe0f \ud83d\udcbb \ud83c\udfae\ufe0f \ud83d\udcdc \ud83e\uddcb \ud83d\udcda\ufe0f \ud83d\udcc4</p> <p>\ud83c\udfaf \u2705 \ud83c\udfc6</p>"},{"location":"ReferenceCode/reference/#links","title":"Links","text":"<ul> <li> <p> NSEL Report Series\ud83c\udfaf</p> <p>Newmark Structural Engineering Laboratory (NSEL) Report Series</p> <p>  Portal </p> </li> </ul> <ul> <li> <p> NSEL \u62a5\u544a\u7cfb\u5217\ud83c\udfaf</p> <p>Newmark Structural Engineering Laboratory (NSEL) \u62a5\u544a\u7cfb\u5217</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul> <ul> <li> <p> 3Blue1Brown</p> <p>A YouTube channel about math and programming\u3002</p> <p>  Portal  </p> </li> <li> <p> Python For Beginners \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>in Chinese, Visual ML Series 1</p> <p>Reading Progress: [36/36]</p> <p>Code Practice: [12/36]</p> <p>  Portal </p> </li> <li> <p> Beauty of Data Visualization \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>in Chinese, Visual ML Series 2</p> <p>Reading Progress: [36/36]</p> <p>Code Practice: [0/36]</p> <p>  Portal </p> </li> <li> <p> Elements of Mathematics</p> <p>in Chinese, Visual ML Series 3</p> <p>  Portal </p> </li> </ul>"},{"location":"SHM/shm/","title":"Structural Health Monitoring","text":"<ul> <li> <p> NSEL Report Series\ud83c\udfaf</p> <p>Newmark Structural Engineering Laboratory (NSEL) Report Series</p> <p>  Portal </p> </li> </ul>"},{"location":"blog/","title":"Blog","text":""},{"location":"zh/#_1","title":"\ud83d\udd2d \u6f5c\u5fc3\u4fee\u5b66\uff0c\u52a1\u7cbe\u6c42\u8fdb\u3002","text":"<p>Quote</p> <p>\u6d77\u7eb3\u767e\u5ddd\uff0c\u6709\u5bb9\u4e43\u5927\uff1b\u58c1\u7acb\u5343\u4ede\uff0c\u65e0\u6b32\u5219\u521a\u3002</p>"},{"location":"zh/#_2","title":"\ud83c\udf99\ufe0f \u6249\u8bed","text":"<p>\u6b22\u8fce\u6765\u5230\u6211\u7684\u4e2a\u4eba\u6280\u672f\u535a\u5ba2\uff01 \u672c\u7f51\u7ad9\u4f5c\u4e3a\u6211\u4e2a\u4eba\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u7684\u89c4\u5212\u56fe\u3002 \u8bf7\u70b9\u51fb\u9876\u90e8\u6216\u5de6\u4fa7\u7684\u5bfc\u822a\u680f\u5f00\u59cb\u63a2\u7d22\u672c\u7ad9\u3002</p>"},{"location":"zh/#_3","title":"\ud83d\udd17 \u94fe\u63a5","text":"<ul> <li> <p> \u4e2a\u4eba\u7f51\u7ad9</p> <p>\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u9886\u82f1\u4e3b\u9875</p> <p>\u9886\u82f1\u8d44\u6599\u9875</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Github</p> <p>Github\u4e3b\u9875</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Researchgate</p> <p>Researchgate\u4e3b\u9875</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Youtube</p> <p>Youtube\u9891\u9053</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> BiliBili</p> <p>Bilibili\u9891\u9053</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Roadmap</p> <p>\u5f00\u53d1\u8005\u8def\u7ebf\u56fe</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/#_4","title":"\ud83c\udf10 \u5728\u7ebf\u5b66\u4e60\u5e73\u53f0","text":"<ul> <li> <p> Coursera \ud83c\udfc6</p> <p>Coursera \u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5728\u7ebf\u5b66\u4e60\u5e73\u53f0\u3002\u5b83\u63d0\u4f9b\u4e86\u5f88\u591a\u514d\u8d39\u7684\u8bfe\u7a0b\u3002\u4f60\u4e5f\u53ef\u4ee5\u4ed8\u8d39\u83b7\u5f97\u8bc1\u4e66\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> edX</p> <p>edX \u662f\u53e6\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5728\u7ebf\u5b66\u4e60\u5e73\u53f0\u3002\u5b83\u63d0\u4f9b\u4e86\u5f88\u591a\u514d\u8d39\u7684\u8bfe\u7a0b\u3002\u4f60\u4e5f\u53ef\u4ee5\u4ed8\u8d39\u83b7\u5f97\u8bc1\u4e66\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Udemy</p> <p>Udemy \u662f\u53e6\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5728\u7ebf\u5b66\u4e60\u5e73\u53f0\u3002\u5b83\u63d0\u4f9b\u4e86\u5f88\u591a\u514d\u8d39\u7684\u8bfe\u7a0b\u3002\u4f60\u4e5f\u53ef\u4ee5\u4ed8\u8d39\u83b7\u5f97\u8bc1\u4e66\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> O'Reilly</p> <p>O'Reilly \u5728\u7ebf\u56fe\u4e66\u9986\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/#_5","title":"\ud83c\udfc6 \u70ed\u5e16","text":"<ul> <li> <p> \u62e5\u6709\u4e00\u53f0\u4e91\u670d\u52a1\u5668</p> <p>\u5982\u4f55\u62e5\u6709\u4e00\u53f0\u4e91\u670d\u52a1\u5668\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u6280\u672f\u535a\u5ba2</p> <p>\u5982\u4f55\u4f7f\u7528mkdocs\u548cmaterial\u4e3b\u9898\u642d\u5efa\u6280\u672f\u535a\u5ba2\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul> <p> @Dominic Walliman</p>"},{"location":"zh/ACTUATION/actuation/","title":"\u6267\u884c","text":""},{"location":"zh/ACTUATION/actuation/#_2","title":"\u94fe\u63a5","text":"<ul> <li> <p> ROS Wiki</p> <p>ROS \u5b98\u65b9 Wiki</p> <p>  Portal </p> </li> <li> <p> \u53e4\u6708\u5c45</p> <p>\u5728\u7ebf\u673a\u5668\u4eba\u5b66\u5b66\u4e60</p> <p>  Portal </p> </li> <li> <p> \u9c7c\u9999ROS</p> <p>\u5728\u7ebf\u673a\u5668\u4eba\u5b66\u5b66\u4e60</p> <p>  Portal </p> </li> </ul>"},{"location":"zh/ACTUATION/HANDSON-ROS/handson-ros/","title":"\u52a8\u624b\u5b66ROS","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/","title":"\u52a8\u624b\u5b66ROS2","text":"<p>1.\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60ROS2\uff1f 2.\u5b66\u4e86\u672c\u8bfe\u7a0b\u80fd\u591f\u505a\u4ec0\u4e48\uff1f ROS2\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5176\u751f\u6001\u7cfb\u7edf\uff0c\u57fa\u4e8eROS2\u7684\u8f6f\u4ef6\u5e93\u548c\u5de5\u5177\u96c6\uff0c\u9488\u5bf9\u4e0d\u540c\u79cd\u7c7b\u7684\u673a\u5668\u4eba\u548c\u5e94\u7528\u573a\u666f\uff0c\u884d\u751f\u51fa\u4e86\u4e00\u7cfb\u5217\u673a\u5668\u4eba\u6846\u67b6\uff0c\u7528\u4e8e\u5982\u5bfc\u822a\uff0c\u89c4\u5212\uff0c\u534f\u540c\u3002 3.\u672c\u6559\u7a0b\u9002\u5408\u5b66\u4e60\u5bf9\u8c61\u6709\u54ea\u4e9b\uff1f 4.\u8bfe\u7a0b\u89c4\u5212 5.\u5b66\u4e60\u8d44\u6e90</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#ch1-ros2","title":"CH1 ROS2\u4ecb\u7ecd\u4e0e\u5b89\u88c5","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#_1","title":"\u7ae0\u8282\u5bfc\u8bfb","text":"<p>\u57fa\u7840\u7bc7-Linux \u5165\u95e8\u7bc7-ROS2\u4ecb\u7ecd\u5b89\u88c5 \u8fdb\u9636\u7bc7-\u67b6\u6784\u4e0e\u4e2d\u95f4\u4ef6</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#-linux","title":"\u57fa\u7840\u7bc7-Linux","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#1linuxubuntu","title":"1.Linux\u4e0eUbuntu\u7cfb\u7edf\u4ecb\u7ecd","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#1linux","title":"1.Linux\u662f\u4ec0\u4e48","text":"<p>\u8fd9\u91cc\u9700\u8981\u4e86\u89e3\u4e0b\u4ec0\u4e48\u662f\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4ee5\u53caLinux\u5185\u6838\u662f\u4ec0\u4e48\uff1f</p> <p>\u64cd\u4f5c\u7cfb\u7edf\uff1a\u7ba1\u7406\u8ba1\u7b97\u673a\u786c\u4ef6\u4e0e\u8f6f\u4ef6\u8d44\u6e90\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\u3002</p> <p>\u5185\u6838\uff1a\u5185\u6838\u662f\u9a71\u52a8\u786c\u4ef6\u7684\u7a0b\u5e8f\u3002</p> <p>\u57fa\u4e8e\u786c\u4ef6\u7684\u7b2c\u4e00\u5c42\u8f6f\u4ef6\u6269\u5145\uff0c\u63d0\u4f9b\u64cd\u4f5c\u7cfb\u7edf\u7684\u6700\u57fa\u672c\u7684\u529f\u80fd\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u5de5\u4f5c\u7684\u57fa\u7840\uff0c\u5b83\u8d1f\u8d23\u7ba1\u7406\u7cfb\u7edf\u7684\u8fdb\u7a0b\u3001\u5185\u5b58\u3001\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u3001\u6587\u4ef6\u548c\u7f51\u7edc\u7cfb\u7edf\uff0c\u51b3\u5b9a\u7740\u7cfb\u7edf\u7684\u6027\u80fd\u548c\u7a33\u5b9a\u6027\u3002</p> <p>\u57fa\u4e8eLinux\u5185\u6838\u884d\u751f\u51fa\u4e86\u5f88\u591aLinux\u7cfb\u64cd\u4f5c\u7cfb\u7edf\uff0cUbuntu\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#2ubuntu","title":"2.Ubuntu\u662f\u4ec0\u4e48","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#3ubuntu","title":"3.Ubuntu\u7cfb\u7edf\u7248\u672c","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#4-cpu","title":"4. CPU\u67b6\u6784","text":"<p>\u4f60\u9700\u8981\u77e5\u9053\u7684\u5e38\u89c1\u67b6\u6784\u6709\uff1a</p> <ul> <li>amd64</li> <li>arm</li> <li>aarch64</li> <li>x86/i386(\u4e0d\u5e38\u7528) \u6839\u636e\u7535\u8111\u4f7f\u7528\u7684CPU\u67b6\u6784\u4e0d\u540c\uff0c\u4f60\u5b89\u88c5Ubuntu\u7cfb\u7edf\u65f6\u5e94\u8be5\u9009\u62e9\u5bf9\u5e94\u7684Ubuntu\u5b89\u88c5\u955c\u50cf\u5305\u3002</li> </ul> <p>\u540c\u65f6\u6ce8\u610f\uff1a\u4e0d\u540c\u67b6\u6784\u7684\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u8f6f\u4ef6\u5b89\u88c5\u5305\u4e5f\u662f\u4e0d\u517c\u5bb9\u7684\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#5-ubuntu","title":"5. Ubuntu\u6743\u9650\u7ba1\u7406","text":"<ul> <li>Linux \u7cfb\u7edf\u4e2d\u7684 \u8d85\u7ea7\u7528\u6237 root \u8d26\u53f7\u901a\u5e38 \u7528\u4e8e\u7cfb\u7edf\u7684\u7ef4\u62a4\u548c\u7ba1\u7406\uff0c\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u6240\u6709\u8d44\u6e90 \u5177\u6709\u6240\u6709\u8bbf\u95ee\u6743\u9650</li> <li>sudo \u547d\u4ee4\u7528\u6765\u4ee5\u5176\u4ed6\u8eab\u4efd\u6765\u6267\u884c\u547d\u4ee4\uff0c\u9884\u8bbe\u7684\u8eab\u4efd\u4e3a root\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528sudo + \u547d\u4ee4\u6765\u63d0\u5347\u64cd\u4f5c\u6743\u9650</li> <li>chmod \u547d\u4ee4\u53ef\u4ee5\u7528\u4e8e\u4fee\u6539\u6587\u4ef6\u6743\u9650</li> </ul>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#6-ubuntu","title":"6. Ubuntu\u5982\u4f55\u5b89\u88c5\u8f6f\u4ef6","text":"<p>\u4f60\u9700\u8981\u77e5\u9053\u7684\u662f\uff1a</p> <ul> <li>\u4f7f\u7528apt\u4ece\u670d\u52a1\u5668\u4e0b\u8f7d\u5b89\u88c5\uff0c\u4f60\u9700\u8981\u63d0\u524d\u6dfb\u52a0\u670d\u52a1\u5668\u5730\u5740\u548c\u670d\u52a1\u5668\u7684\u79d8\u94a5\uff0c\u8fd9\u4e00\u6b65\u5c31\u53eb\u6dfb\u52a0\u6e90\u6216\u8005\u6362\u6e90</li> <li>\u4f7f\u7528\u6e90\u7801\u8fdb\u884c\u7f16\u8bd1\u5b89\u88c5\uff0c\u4f60\u9700\u8981\u4e0b\u8f7d\u6e90\u7801\u548c\u6e90\u7801\u7684\u5404\u79cd\u4f9d\u8d56\uff0c\u4e4b\u540e\u7f16\u8bd1\u51fa\u7a0b\u5e8f\u62f7\u8d1d\u5230\u7cfb\u7edf\u4e2d</li> <li>\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4f7f\u7528apt\u5b89\u88c5\uff1f\u5176\u5b9e\u5c31\u662f\u8f6f\u4ef6\u5f00\u53d1\u8005\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u7f16\u8bd1\u597d\u7a0b\u5e8f\uff0c\u628a\u7a0b\u5e8f\u6253\u5305\u4e0a\u4f20\u5230\u670d\u52a1\u5668\uff0c\u4f60\u5c31\u53ef\u4ee5\u4ece\u670d\u52a1\u5668\u4e0b\u8f7d\u5b89\u88c5\u4e86</li> </ul>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#2ubuntu_1","title":"2.\u5728\u865a\u62df\u673a\u4e2d\u5b89\u88c5Ubuntu\u7cfb\u7edf","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#1ubuntu","title":"1.\u4e0b\u8f7dUbuntu\u7cfb\u7edf\u955c\u50cf","text":"<p>Tip</p> <p>\u6700\u597d\u662fLTS\u7248\u672c\uff0c\u56e0\u4e3aLTS\u7248\u672c\u7684\u8f6f\u4ef6\u5e93\u6bd4\u8f83\u7a33\u5b9a\uff0c\u4e0d\u4f1a\u51fa\u73b0\u8f6f\u4ef6\u5e93\u4e2d\u7684\u8f6f\u4ef6\u7248\u672c\u4e0d\u517c\u5bb9\u7684\u95ee\u9898\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#2","title":"2.\u5b89\u88c5\u865a\u62df\u673a\u8f6f\u4ef6","text":"<p>Tip</p> <p>VMware</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#3ubuntu_1","title":"3.\u5b89\u88c5Ubuntu\u7cfb\u7edf","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#3ubuntu_2","title":"3.\u73a9\u8f6cUbuntu\u4e4b\u5e38\u7528\u547d\u4ee4","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#1","title":"1.\u5b66\u4f1a\u6253\u5f00\u7ec8\u7aef","text":"<p>Tip</p> <p>Ctrl+Alt+T</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#2_1","title":"2.\u5b66\u4f1a\u5e38\u7528\u547d\u4ee4","text":"<p>ls cd pwd mkdir rmdir touch rm cp mv cat more less head tail</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#4ubuntu","title":"4.\u73a9\u8f6cUbuntu\u4e4b\u7f16\u7a0b\u5de5\u5177","text":"<p>Info</p> <p>\u505a\u673a\u5668\u4eba\u6700\u5e38\u7528\u7684\u4e24\u95e8\u8bed\u8a00\u5c31\u662fC++\u548cPython\uff0c\u540c\u65f6\u8fd9\u4e24\u95e8\u8bed\u8a00\u4e5f\u662f\u7f16\u7a0b\u8bed\u8a00\u6d41\u884c\u5ea6\u6392\u884c\u699c\u6570\u4e00\u6570\u4e8c\u7684\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#5ubuntu","title":"5.\u73a9\u8f6cUbuntu\u4e4b\u5e38\u7528\u8f6f\u4ef6","text":"<p>Info</p> <p>VSCode</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#-ros2","title":"\u5165\u95e8\u7bc7-ROS2\u4ecb\u7ecd\u5b89\u88c5","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#1ros2","title":"1.ROS2\u524d\u4e16\u4eca\u751f","text":"<p>\u8981\u8bf4ROS2\uff0c\u90a3\u5c31\u4e0d\u5f97\u4e0d\u63d0\u8d77ROS\uff0cROS\u5c31\u662f\u4f20\u8bf4\u4e2d\u7684\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\uff0c\u82f1\u6587\u5168\u79f0\uff08Robot Operating System\uff09\uff0c\u4f46ROS\u672c\u8eab\u5e76\u4e0d\u662f\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u800c\u662f\u53ef\u4ee5\u5b89\u88c5\u5728\u73b0\u5728\u5df2\u6709\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff08Linux\u3001Windows\u3001Mac\uff09\u4e0a\u7684\u8f6f\u4ef6\u5e93\u548c\u5de5\u5177\u96c6\u3002</p> <p>ROS\u51fa\u751f\u4e8e2007\u5e74\uff0cROS\u7684\u51fa\u73b0\u89e3\u51b3\u4e86\u673a\u5668\u4eba\u5404\u4e2a\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1\u95ee\u9898\uff0c\u540c\u65f6\u57fa\u4e8eROS\u7684\u5b8c\u5584\u7684\u901a\u4fe1\u673a\u5236\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u4f18\u79c0\u7684\u673a\u5668\u4eba\u7b97\u6cd5\u96c6\u6210\u5230\u4e86ROS\u4e2d\u6765\u3002</p> <p>\u73b0\u5728\u7684ROS\u529f\u80fd\u5df2\u7ecf\u53d8\u5f97\u975e\u5e38\u7684\u4e30\u5bcc\u548c\u5f3a\u5927\u3002\u4f46\u968f\u7740\u5bf9ROS\u529f\u80fd\u4e0a\u8981\u6c42\u8d8a\u6765\u8d8a\u591a\uff0c\u4e00\u4e9b\u539f\u59cb\u7684\u67b6\u6784\u548c\u8bbe\u8ba1\u4e0d\u80fd\u591f\u6ee1\u8db3\u76ee\u524d\u7684\u4f7f\u7528\u9700\u6c42\uff0c\u8fd9\u4e5f\u662fROS2\u51fa\u73b0\u7684\u539f\u56e0\u3002</p> <p>ROS2\u7ee7\u627f\u4e86ROS\u539f\u6709\u7684\u4f18\u79c0\u4e4b\u5904\uff0c\u540c\u65f6\u53c8\u5e26\u6765\u4e86\u5f88\u591a\u65b0\u7684\u529f\u80fd,ROS2\u76f8\u5bf9\u4e8eROS\u66f4\u52a0\u7684\u5f3a\u5927\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#11-ros","title":"1.1 ROS\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0","text":"<p>ROS\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\uff1a\u7b80\u5316\u5728\u5404\u79cd\u673a\u5668\u4eba\u5e73\u53f0\u4e0a\u521b\u5efa\u590d\u6742\u800c\u5f3a\u5927\u7684\u673a\u5668\u4eba\u884c\u4e3a\u7684\u4efb\u52a1\u5373\u4e0d\u91cd\u590d\u9020\u8f6e\u5b50</p> <p>\u5728ROS\u6ca1\u6709\u51fa\u73b0\u4e4b\u524d\uff0c\u505a\u4e00\u4e2a\u673a\u5668\u4eba\u662f\u975e\u5e38\u590d\u6742\u7684\u4e00\u4ef6\u4e8b\u60c5\uff0c\u56e0\u4e3a\u4e00\u4e2a\u673a\u5668\u4eba\u9700\u8981\u6d89\u53ca\u5230\u591a\u4e2a\u90e8\u5206\uff0c\u800c\u4e14\u8fd9\u4e9b\u90e8\u5206\u4e4b\u95f4\u8fd8\u8981\u8fdb\u884c\u901a\u4fe1\u3002</p> <p>\u4f8b\u5982\u8bbe\u8ba1\u4e00\u4e2a\u8f6e\u5f0f\u79fb\u52a8\u673a\u5668\u4eba\uff0c\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u62c6\u89e3\u3002\u53ef\u4ee5\u5206\u4e3a\u611f\u77e5\u3001\u51b3\u7b56\u3001\u63a7\u5236\u4e09\u4e2a\u90e8\u5206\u3002</p> <p>\u611f\u77e5\u90e8\u5206\u6709\uff1a\u6fc0\u5149\u96f7\u8fbe\u3001\u6df1\u5ea6\u76f8\u673a\u3001IMU\u3001\u91cc\u7a0b\u8ba1\u3001\u78b0\u649e\u611f\u77e5\u3001\u5efa\u56fe \u51b3\u7b56\u90e8\u5206\u6709\uff1a\u8def\u5f84\u89c4\u5212\uff08navigation\uff09\u7b97\u6cd5\u3001\u5b9a\u4f4d\u7b97\u6cd5 \u63a7\u5236\u90e8\u5206\u6709\uff1a\u8f6e\u5b50\u9a71\u52a8 \u673a\u5668\u4eba\u590d\u6742\u4e4b\u5904\u5c31\u5728\u4e8e\u6b64\uff0c\u5982\u679c\u60f3\u8981\u6574\u4e2a\u673a\u5668\u4eba\u53ef\u4ee5\u8dd1\u8d77\u6765\uff0c\u90a3\u4e48\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u4e1c\u897f\u5c06\u4e0a\u9762\u7684\u51e0\u4e2a\u90e8\u5206\u5408\u7406\u7684\u8fde\u63a5\u5230\u4e00\u8d77\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662fROS\u3002</p> <p>ROS\u7684\u4f5c\u7528\u5c31\u50cf\u6211\u4eec\u7684\u8eab\u4f53\u7684\u795e\u7ecf\u7cfb\u7edf\u4e00\u6837\uff0c\u901a\u8fc7\u795e\u7ecf\u7cfb\u7edf\u5c06\u6211\u4eec\u8eab\u4f53\u7684\u5404\u4e2a\u90e8\u5206\u63a5\u5165\u5927\u8111\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#12-ros2","title":"1.2 \u4e3a\u4ec0\u4e48\u8fd8\u8981\u6709ROS2","text":"<p>2007\u5e74ROS\u5f00\u53d1\u4eba\u5458\u8bbe\u8ba1\u548c\u5236\u4f5cROS\u65f6\uff0c\u5f53\u65f6\u53ea\u60f3\u7740\u7b80\u5316\u673a\u5668\u4eba\u7684\u5f00\u53d1\uff0c\u5e76\u6ca1\u6709\u60f3\u5230\u8fc7\u4eca\u5929\u90a3\u4e48\u591a\u7684\u529f\u80fd\u9700\u6c42\uff0c\u6bd4\u5982\u5546\u4e1a\u5316\u8981\u6c42\u7684\u7a33\u5b9a\u6027\u3001\u751f\u547d\u5468\u671f\u7ba1\u7406\u3001\u591a\u673a\u534f\u540c\u3001\u6570\u636e\u52a0\u5bc6\u7b49\u3002\u5c31\u50cf\u5c0f\u9c7c\u5efa\u623f\u5b50\u65f6\u6ca1\u60f3\u8981\u672a\u6765\u4f1a\u7528\u5168\u81ea\u52a8\u6d17\u8863\u673a\u4e00\u6837~</p> <p>ROS\u53d1\u5c55\u7684\u540e\u9762\u7684\u51e0\u5e74\u91cc\uff0c\u673a\u5668\u4eba\u5bf9ROS\u7684\u529f\u80fd\u8981\u6c42\u8d8a\u6765\u8d8a\u591a\uff0cROS\u5f00\u53d1\u4eba\u5458\u53ea\u80fd\u5728\u539f\u6709\u7684ROS\u4e0a\u4fee\u4fee\u8865\u8865\u3002</p> <p>\u968f\u7740ROS\u4e0d\u65ad\u7684\u6dfb\u52a0\u65b0\u529f\u80fd\uff0cROS\u53d8\u5f97\u8d8a\u6765\u8d8a\u81c3\u80bf\uff0c\u7956\u4f20\u4ee3\u7801\u4e5f\u8d8a\u6765\u8d8a\u591a\u3002ROS\u5f00\u53d1\u4eba\u5458\u53d1\u73b0\u5728\u539f\u6709\u7684ROS\u67b6\u6784\u4e0a\u4fee\u4fee\u8865\u8865\u5341\u5206\u6d88\u8017\u5934\u53d1\uff0c\u4e8e\u662f\u50cf\u5c0f\u9c7c\u51b3\u5b9a\u628a\u623f\u5b50\u63a8\u5012\u91cd\u5efa\u4e00\u6837\uff0cROS\u5b98\u65b9\u4e5f\u91cd\u65b0\u8bbe\u8ba1\u5236\u4f5c\u4e86ROS2\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#13-ros2","title":"1.3 ROS2\u4ecb\u7ecd","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#2rosros2","title":"2.ROS\u4e0eROS2\u7684\u5bf9\u6bd4","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#21-ros","title":"2.1 ROS\u95ee\u9898\u4e3e\u4f8b","text":"<p>\u4e0a\u8282\u8bfe\u8bf4\u5230ROS\u7684\u8bbe\u8ba1\u76ee\u6807\u662f\u7b80\u5316\u673a\u5668\u4eba\u7684\u5f00\u53d1\uff0c\u5982\u4f55\u7b80\u5316\u5462\uff1fROS\u4e3a\u6b64\u8bbe\u8ba1\u4e86\u4e00\u6574\u5957\u901a\u4fe1\u673a\u5236\uff08\u8bdd\u9898\u3001\u670d\u52a1\u3001\u53c2\u6570\u3001\u52a8\u4f5c\uff09\u3002</p> <p>\u901a\u8fc7\u8fd9\u4e9b\u901a\u4fe1\u673a\u5236\uff0cROS\u5b9e\u73b0\u4e86\u5c06\u673a\u5668\u4eba\u7684\u5404\u4e2a\u7ec4\u4ef6\u7ed9\u7684\u8fde\u63a5\u8d77\u6765\uff0c\u5728\u8bbe\u8ba1\u8fd9\u5957\u901a\u4fe1\u673a\u5236\u7684\u65f6\u5019\u5c31\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u53eb\u505aRos Master\u7684\u4e1c\u897f\uff0c\u6240\u6709\u8282\u70b9\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u67d0\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u6bd4\u5982\uff1a\u6fc0\u5149\u96f7\u8fbe\uff09\u7684\u901a\u4fe1\u5efa\u7acb\u5fc5\u987b\u7ecf\u8fc7\u8fd9\u4e2a\u4e3b\u8282\u70b9\u3002</p> <p>\u4e00\u65e6Ros Master\u4e3b\u8282\u70b9\u6302\u6389\u540e\uff0c\u5c31\u4f1a\u9020\u6210\u6574\u4e2a\u7cfb\u7edf\u901a\u4fe1\u7684\u5f02\u5e38,\u6b64\u65f6\u907f\u969c\u7b56\u7565\u5c06\u4f1a\u5931\u6548\uff0c\u5982\u679c\u673a\u5668\u4eba\u6b63\u5728\u8fd0\u884c\uff0c\u78b0\u5230\u969c\u788d\u7269\u4f1a\u5f84\u76f4\u88c5\u4e0a\u53bb\uff0c\u673a\u6bc1\u4eba\u4ea1\uff01</p> <p>ROS\u7684\u4e0d\u7a33\u5b9a\u8fd9\u4e2a\u95ee\u9898\u5728\u867d\u7136\u5bf9\u5927\u5bb6\u505a\u673a\u5668\u4eba\u7814\u7a76\u95ee\u9898\u4e0d\u5927\uff0c\u4f46\u5982\u679c\u662f\u60f3\u57fa\u4e8eROS\u505a\u5546\u4e1a\u5316\u673a\u5668\u4eba\uff08\u6bd4\u5982\u65e0\u4eba\u9a7e\u9a76\u6c7d\u8f66\uff09\uff0c\u5c31\u4f1a\u9020\u6210\u975e\u5e38\u4e25\u91cd\u7684\u540e\u679c\uff0c\u5c0f\u9c7c\u5728\u5de5\u4f5c\u4e2d\u53ef\u6ca1\u4e3a\u8fd9\u4e2a\u95ee\u9898\u53d1\u6101</p> <p>\u9664\u4e86\u4e0d\u7a33\u5b9a\u8fd9\u4e2a\u95ee\u9898\uff0cROS\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u5730\u65b9\u5b58\u5728\u7740\u95ee\u9898\uff1a</p> <p>\u901a\u4fe1\u57fa\u4e8eTCP\u5b9e\u73b0\uff0c\u5b9e\u65f6\u6027\u5dee\u3001\u7cfb\u7edf\u5f00\u9500\u5927 \u5bf9Python3\u652f\u6301\u4e0d\u53cb\u597d\uff0c\u9700\u8981\u91cd\u65b0\u7f16\u8bd1 \u6d88\u606f\u673a\u5236\u4e0d\u517c\u5bb9 \u6ca1\u6709\u52a0\u5bc6\u673a\u5236\u3001\u5b89\u5168\u6027\u4e0d\u9ad8</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#22-ros2ros","title":"2.2 ROS2\u4e0eROS\u67b6\u6784\u5bf9\u6bd4","text":"<p>\u6240\u4ee5\u5728ROS2\u4e2d\uff0c\u9996\u5f53\u5176\u51b2\u7684\u5c06ROS\u7684\u4e3b\u8282\u70b9\u5e72\u6389\u4e86\uff0c\u8fd9\u91cc\u653e\u4e00\u5f20\u7f51\u4e0a\u6d41\u4f20\u6700\u5e7f\u7684ROS/ROS2\u67b6\u6784\u56fe\uff0c\u63a5\u4e0b\u6765\u5c31\u4f1a\u6309\u7167\u8fd9\u7bc7\u67b6\u6784\u56fe\u7ed9\u5927\u5bb6\u8bb2\u89e3\u3002</p> <p>\u8be5\u56fe\u51fa\u81ea\u8bba\u6587\uff1aExploring the Performance of ROS2\uff0c\u8bba\u6587\u5728\u7ebf\u9605\u8bfb\u5730\u5740\uff1ahttps://www.researchgate.net/profile/Takuya-Azumi/publication/309128426_Exploring_the_performance_of_ROS2/links/5c908801299bf14e7e84ce61/Exploring-the-performance-of-ROS2.pdf</p> <p></p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#23-ros2","title":"2.3 ROS2\u65b0\u6982\u5ff5\u4f8b\u4e3e","text":"<p>\u53ef\u7528Python\u7f16\u5199\u7684Launch\u6587\u4ef6 \u591a\u673a\u5668\u4eba\u534f\u540c\u901a\u4fe1\u652f\u6301 \u652f\u6301\u5b89\u5168\u52a0\u5bc6\u901a\u4fe1 \u540c\u4e00\u4e2a\u8fdb\u7a0b\u652f\u6301\u591a\u4e2a\u8282\u70b9\u3001 \u652f\u6301Qos\u670d\u52a1\u8d28\u91cf \u652f\u6301\u8282\u70b9\u751f\u547d\u5468\u671f\u7ba1\u7406 \u9ad8\u6548\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#24","title":"2.4 \u66f4\u8be6\u7ec6\u7684\u5bf9\u6bd4","text":"<p>https://zhuanlan.zhihu.com/p/423581728</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#3ros2","title":"3.\u52a8\u624b\u5b89\u88c5ROS2","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#31","title":"3.1 \u4e00\u952e\u5b89\u88c5","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#32","title":"3.2 \u624b\u52a8\u5b89\u88c5","text":"<ul> <li> <p>\u7b2c\u4e00\u6b65\uff1a ctrl + alt + T \u6253\u5f00\u7ec8\u7aef</p> </li> <li> <p>\u7b2c\u4e8c\u6b65\uff1a\u6dfb\u52a0\u6e90</p> </li> </ul> <pre><code>echo \"deb [arch=$(dpkg --print-architecture)] https://repo.huaweicloud.com/ros2/ubuntu/ $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre> <ul> <li>\u7b2c\u4e09\u6b65\uff1a\u6dfb\u52a0\u79d8\u94a5</li> </ul> <pre><code>sudo apt install curl gnupg2 -y\ncurl -s https://gitee.com/ohhuo/rosdistro/raw/master/ros.asc | sudo apt-key add -\n</code></pre> <ul> <li>\u7b2c\u56db\u6b65\uff1a\u66f4\u65b0</li> </ul> <pre><code>sudo apt update\n</code></pre> <ul> <li>\u7b2c\u4e94\u6b65\uff1a\u5b89\u88c5</li> </ul> <pre><code>sudo apt install ros-humble-desktop\n</code></pre> <ul> <li>\u7b2c\u516d\u6b65\uff1a\u5b89\u88c5\u989d\u5916\u4f9d\u8d56</li> </ul> <pre><code>sudo apt install python3-argcomplete -y\n</code></pre> <ul> <li>\u7b2c\u4e03\u6b65\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf</li> </ul> <pre><code>source /opt/ros/humble/setup.bash\n</code></pre> <p>\u907f\u514d\u6bcf\u6b21\u90fd\u8981\u624b\u52a8source\uff0c\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u547d\u4ee4\u5199\u5165\u5230~/.bashrc\u6587\u4ef6\u4e2d</p> <pre><code>echo \"source /opt/ros/humble/setup.bash\" &gt;&gt; ~/.bashrc\n</code></pre>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#33","title":"3.3 \u51fa\u73b0\u95ee\u9898\u53ef\u4ee5\u8fd9\u6837\u5378\u8f7d","text":"<pre><code>sudo apt remove ros-humble-*\nsudo apt autoremove\n</code></pre>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#34-ros2","title":"3.4 ROS2\u5230\u5e95\u88c5\u5728\u54ea\u91cc\u4e86","text":"<pre><code>cd /opt/ros/humble/\nls\n</code></pre>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#4ros2","title":"4.ROS2\u521d\u4f53\u9a8c","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#41","title":"4.1 \u4f60\u8bf4\u6211\u542c","text":"<ul> <li> <p>\u7b2c\u4e00\u6b65\uff1a\u6253\u5f00\u7ec8\u7aef ctrl + alt + T</p> </li> <li> <p>\u7b2c\u4e8c\u6b65\uff1a\u542f\u52a8\u503e\u542c\u8005 <pre><code>ros2 run demo_nodes_py listener\n</code></pre></p> </li> <li> <p>\u7b2c\u4e09\u6b65\uff1a\u542f\u52a8\u65b0\u7684\u7ec8\u7aef ctrl + alt + T</p> </li> <li> <p>\u7b2c\u56db\u6b65\uff1a\u542f\u52a8\u8bf4\u8bdd\u8005 <pre><code>ros2 run demo_nodes_cpp talker\n</code></pre></p> </li> </ul>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#42","title":"4.2 \u6d82\u9e26\u5c0f\u4e4c\u9f9f","text":"<ul> <li> <p>\u7b2c\u4e00\u6b65\uff1a\u542f\u52a8\u5c0f\u4e4c\u9f9f <pre><code>ros2 run turtlesim turtlesim_node\n</code></pre></p> </li> <li> <p>\u7b2c\u4e8c\u6b65\uff1a\u542f\u52a8\u952e\u76d8\u63a7\u5236 <pre><code>ros2 run turtlesim turtle_teleop_key\n</code></pre></p> </li> </ul>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#43-rqt","title":"4.3 RQT\u53ef\u89c6\u5316","text":"<p>\u4fdd\u6301\u524d\u4e24\u4e2a\u6e38\u620f\u8fd0\u884c\uff0c\u6253\u5f00\u65b0\u7684\u7ec8\u7aef\uff0c\u8f93\u5165\u547d\u4ee4\uff1a</p> <pre><code>rqt\n</code></pre> <p>\u9009\u62e9\u63d2\u4ef6</p> <p>\u6bd4\u5982Introspection/Node Graph</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#-","title":"\u8fdb\u9636\u7bc7-\u67b6\u6784\u4e0e\u4e2d\u95f4\u4ef6","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#1ros2_1","title":"1.ROS2\u67b6\u6784","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#11","title":"1.1 \u67b6\u6784\u56fe","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#12","title":"1.2 \u64cd\u4f5c\u7cfb\u7edf\u5c42","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u5c42\u6bd4\u8f83\u597d\u7406\u89e3\uff0cROS2\u672c\u8eab\u5c31\u662f\u57fa\u4e8eLinux\u3001Windows\u6216\u8005macOS\u7cfb\u7edf\u5efa\u7acb\u7684\uff0c\u9a71\u52a8\u8ba1\u7b97\u673a\u786c\u4ef6\u3001\u5e95\u5c42\u7f51\u7edc\u901a\u4fe1\u7b49\u5b9e\u73b0\u90fd\u662f\u4ea4\u7531\u64cd\u4f5c\u7cfb\u7edf\u6765\u5b9e\u73b0\u7684\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#13-dds","title":"1.3 DDS\u5b9e\u73b0\u5c42","text":"<p>\u8981\u60f3\u7406\u89e3\u8fd9\u4e00\u5c42\u5c31\u9700\u8981\u4f60\u4e86\u89e3DDS\u662f\u4ec0\u4e48? \u4ee5\u53ca\u4e3a\u4ec0\u4e48ROS2\u6846\u67b6\u4e2d\u4f1a\u6709\u591a\u4e2aDDS\u7684\u5b9e\u73b0\u3002</p> <ul> <li>DDS\u662f\u4ec0\u4e48\uff1f DDS\uff0c\u5168\u79f0 Data Distribution Service (\u6570\u636e\u5206\u53d1\u670d\u52a1)\u3002\u662f\u7531\u5bf9\u8c61\u7ba1\u7406\u7ec4 (OMG) \u4e8e 2003 \u5e74\u53d1\u5e03\u5e76\u4e8e 2007 \u5e74\u4fee\u8ba2\u7684\u5f00\u5206\u5e03\u5f0f\u7cfb\u7edf\u6807\u51c6\u3002</li> </ul> <p>\u901a\u8fc7\u7c7b\u4f3c\u4e8eROS\u4e2d\u7684\u8bdd\u9898\u53d1\u5e03\u548c\u8ba2\u9605\u5f62\u5f0f\u6765\u8fdb\u884c\u901a\u4fe1\uff0c\u540c\u65f6\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u670d\u52a1\u8d28\u91cf\u7ba1\u7406\u6765\u4fdd\u8bc1\u53ef\u9760\u6027\u3001\u6301\u4e45\u6027\u3001\u4f20\u8f93\u8bbe\u7f6e\u7b49\u3002</p> <ul> <li>DDS\u5b9e\u73b0\u5c42\u7528\u6765\u505a\u4ec0\u4e48\uff1f</li> </ul> <p>DDS\u5b9e\u73b0\u5c42\u5176\u5b9e\u5c31\u662f\u5bf9\u4e0d\u540c\u5e38\u89c1\u7684DDS\u63a5\u53e3\u8fdb\u884c\u518d\u6b21\u7684\u5c01\u88c5\uff0c\u8ba9\u5176\u4fdd\u6301\u7edf\u4e00\u6027\uff0c\u4e3aDDS\u62bd\u8c61\u5c42\u63d0\u4f9b\u7edf\u4e00\u7684API\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#14-dds-rmw","title":"1.4 \u62bd\u8c61DDS\u5c42-RMW","text":"<p>\u8fd9\u4e00\u5c42\u5c06DDS\u5b9e\u73b0\u5c42\u8fdb\u4e00\u6b65\u7684\u5c01\u88c5\uff0c\u4f7f\u5f97DDS\u66f4\u5bb9\u6613\u4f7f\u7528\u3002\u539f\u56e0\u5728\u4e8eDDS\u9700\u8981\u5927\u91cf\u7684\u8bbe\u7f6e\u548c\u914d\u7f6e\uff08\u5206\u533a\uff0c\u4e3b\u9898\u540d\u79f0\uff0c\u53d1\u73b0\u6a21\u5f0f\uff0c\u6d88\u606f\u521b\u5efa,...\uff09\uff0c\u8fd9\u4e9b\u8bbe\u7f6e\u90fd\u662f\u5728ROS2\u7684\u62bd\u8c61\u5c42\u4e2d\u5b8c\u6210\u7684\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#15-rosrcl","title":"1.5 ROS\u5ba2\u6237\u7aef\u5e93RCL","text":"<p>RCL\uff08ROS Client Library\uff09ROS\u5ba2\u6237\u7aef\u5e93\uff0c\u5176\u5b9e\u5c31\u662fROS\u7684\u4e00\u79cdAPI\uff0c\u63d0\u4f9b\u4e86\u5bf9ROS\u8bdd\u9898\u3001\u670d\u52a1\u3001\u53c2\u6570\u3001Action\u7b49\u63a5\u53e3\u3002</p> <p>Info</p> <p>GUI\uff1a\u56fe\u5f62\u7528\u6237\u754c\u9762 CLI\uff1a\u547d\u4ee4\u884c\u754c\u9762 API: \u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3</p> <p>ROS2\u5ba2\u6237\u7aef\u5e93</p> <p>ROS\u7684\u5ba2\u6237\u7aef\u5e93\u5c31\u662f\u4e0a\u9762\u6240\u8bf4\u7684RCL\uff0c\u4e0d\u540c\u7684\u8bed\u8a00\u5bf9\u5e94\u7740\u4e0d\u540c\u7684rcl\uff0c\u4f46\u57fa\u672c\u529f\u80fd\u90fd\u662f\u76f8\u540c\u7684\u3002</p> <p>\u6bd4\u5982Python\u8bed\u8a00\u63d0\u4f9b\u4e86rclpy\u6765\u64cd\u4f5cROS2\u7684\u8282\u70b9\u8bdd\u9898\u670d\u52a1\u7b49\uff0c\u800cC++\u5219\u4f7f\u7528rclcpp\u63d0\u4f9bAPI\u64cd\u4f5cROS2\u7684\u8282\u70b9\u8bdd\u9898\u548c\u670d\u52a1\u7b49\u3002</p> <p>\u6240\u4ee5\u540e\u9762\u6211\u4eec\u4f7f\u7528Python\u548cC++\u6765\u7f16\u5199ROS2\u8282\u70b9\u5b9e\u73b0\u901a\u8baf\u7b49\u529f\u80fd\u65f6\uff0c\u6211\u4eec\u5c31\u4f1a\u5f15\u5165rclpy\u548crclcpp\u7684\u5e93\u3002</p> <p></p> <p>\u4e0a\u9762\u8fd9\u5f20\u56fe\u662fROS2\uff0cAPI\u7684\u5b9e\u73b0\u5c42\u7ea7\uff0c\u6700\u65b0\u4e0b\u9762\u7684\u662f\u7b2c\u4e09\u65b9\u7684DDS\uff0crmw\uff08\u4e2d\u95f4\u4ef6\u63a5\u53e3\uff09\u5c42\u662f\u5bf9\u5404\u5bb6DDS\u7684\u62bd\u8c61\u5c42\uff0c\u57fa\u4e8ermw\u5b9e\u73b0\u4e86rclc\uff0c\u6709\u4e86rclc\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5404\u4e2a\u8bed\u8a00\u7684\u5e93\uff0c\u5927\u5bb6\u90fd\u77e5\u9053C\u8bed\u8a00\u662f\u5404\u4e2a\u8bed\u8a00\u7684\u9f3b\u7956\uff08\u6c47\u7f16\u9664\u5916\uff09\u6240\u4ee5\u57fa\u4e8erclc\uff0cROS2\u5b98\u65b9\u5b9e\u73b0\u4e86rclpy\u548crclcpp.</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#16","title":"1.6 \u5e94\u7528\u5c42","text":"<p>\u5e94\u7528\u5c42\u5c31\u662f\u6211\u4eec\u5199\u4ee3\u7801\u4ee5\u53caROS2\u5f00\u53d1\u7684\u5404\u79cd\u5e38\u7528\u7684\u673a\u5668\u4eba\u76f8\u5173\u5f00\u53d1\u5de5\u5177\u6240\u5728\u7684\u5c42\u4e86\u3002\u540e\u9762\u6211\u4eec\u5199\u7684\u6240\u6709\u4ee3\u7801\u5176\u5b9e\u90fd\u662f\u5c5e\u4e8e\u8fd9\u4e00\u5c42\u7684\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#2dds","title":"2.\u4e2d\u95f4\u4ef6DDS\u67b6\u6784","text":"<p>\u672c\u6587\u4e3b\u8981\u5e26\u4f60\u4e86\u89e3DDS\u662f\u4ec0\u4e48\u3001ROS2\u4f7f\u7528DDS\u6240\u5e26\u6765\u7684\u4f18\u7f3a\u70b9\uff0c\u4ee5\u53caROS2\u4e3a\u4e86\u8ba9DDS\u5728\u673a\u5668\u4eba\u5f00\u53d1\u4e0a\u53d8\u5f97\u7b80\u5355\u505a\u4e86\u54ea\u4e9b\u52aa\u529b\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#21","title":"2.1 \u4e2d\u95f4\u4ef6","text":"<p>\u4e2d\u95f4\u4ef6\u662f\u4ec0\u4e48\uff1f</p> <p>\u987e\u540d\u601d\u4e49</p> <p>\u4e2d\u95f4\u4ef6\u5c31\u662f\u4ecb\u4e8e\u67d0\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u8282\u70b9\u4e2d\u95f4\u7684\u7ec4\u4ef6\u3002\u5e72\u561b\u7528\u7684\u5462\uff1f</p> <p>\u5c31\u662f\u63d0\u4f9b\u591a\u4e2a\u8282\u70b9\u4e2d\u95f4\u901a\u4fe1\u7528\u7684\u3002</p> <p>\u5b98\u65b9\u89e3\u91ca\uff1a</p> <p>\u4e2d\u95f4\u4ef6\u662f\u4e00\u79cd\u72ec\u7acb\u7684\u7cfb\u7edf\u8f6f\u4ef6\u6216\u670d\u52a1\u7a0b\u5e8f\uff0c\u5206\u5e03\u5f0f\u5e94\u7528\u8f6f\u4ef6\u501f\u52a9\u8fd9\u79cd\u8f6f\u4ef6\u5728\u4e0d\u540c\u7684\u6280\u672f\u4e4b\u95f4\u5171\u4eab\u8d44\u6e90\u3002\u4e2d\u95f4\u4ef6\u4f4d\u4e8e\u5ba2\u6237\u673a/ \u670d\u52a1\u5668\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u4e0a\uff0c\u7ba1\u7406\u8ba1\u7b97\u673a\u8d44\u6e90\u548c\u7f51\u7edc\u901a\u8baf\u3002\u662f\u8fde\u63a5\u4e24\u4e2a\u72ec\u7acb\u5e94\u7528\u7a0b\u5e8f\u6216\u72ec\u7acb\u7cfb\u7edf\u7684\u8f6f\u4ef6\u3002\u76f8\u8fde\u63a5\u7684\u7cfb\u7edf\uff0c\u5373\u4f7f\u5b83\u4eec\u5177\u6709\u4e0d\u540c\u7684\u63a5\u53e3\uff0c\u4f46\u901a\u8fc7\u4e2d\u95f4\u4ef6\u76f8\u4e92\u4e4b\u95f4\u4ecd\u80fd\u4ea4\u6362\u4fe1\u606f\u3002\u6267\u884c\u4e2d\u95f4\u4ef6\u7684\u4e00\u4e2a\u5173\u952e\u9014\u5f84\u662f\u4fe1\u606f\u4f20\u9012\u3002\u901a\u8fc7\u4e2d\u95f4\u4ef6\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5de5\u4f5c\u4e8e\u591a\u5e73\u53f0\u6216OS\u73af\u5883\u3002</p> <p>ROS\u4e2d\u95f4\u4ef6VS ROS2\u4e2d\u95f4\u4ef6</p> <p></p> <p>ROS1-MW:ROS1\u7684\u4e2d\u95f4\u4ef6\u662fROS\u7ec4\u7ec7\u81ea\u5df1\u57fa\u4e8eTCP/UDP\u673a\u5236\u5efa\u7acb\u7684\uff0c\u4e3a\u4e86\u7ef4\u62a4\u8be5\u90e8\u5206ROS1\u7ec4\u7ec7\u82b1\u8d39\u4e86\u5927\u91cf\u7684\u7cbe\u529b\uff0c\u4f46\u662f\u4f9d\u7136\u5b58\u5728\u5f88\u591a\u95ee\u9898\u3002</p> <p>ROS2-MW:ROS2\u91c7\u7528\u4e86\u7b2c\u4e09\u65b9\u7684DDS\u4f5c\u4e3a\u4e2d\u95f4\u4ef6\uff0c\u5c06DDS\u670d\u52a1\u63a5\u53e3\u8fdb\u884c\u4e86\u4e00\u5c42\u62bd\u8c61\uff0c\u4fdd\u8bc1\u4e86\u4e0a\u5c42\u5e94\u7528\u5c42\u8c03\u7528\u63a5\u53e3\u7684\u7edf\u4e00\u6027\u3002</p> <p>\u57fa\u4e8eDDS\u7684\u4e92\u76f8\u53d1\u73b0\u534f\u8bae\uff0cROS2\u7ec8\u4e8e\u5e72\u6389\u4e86ROS1\u4e2d\u7684Master\u8282\u70b9\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#22-ddsros2","title":"2.2 DDS\u548cROS2\u67b6\u6784","text":"<p>ROS2\u4e3a\u6bcf\u5bb6DDS\u4f9b\u5e94\u5546\u90fd\u5f00\u53d1\u4e86\u5bf9\u5e94\u7684DDS_Interface\u5373DDS\u63a5\u53e3\u5c42\uff0c\u7136\u540e\u901a\u8fc7DDS Abstract\u62bd\u8c61\u5c42\u6765\u7edf\u4e00DDS\u7684API\u3002</p> <p></p> <p>ROS2\u67b6\u6784\u4e2d\u7684DDS\u90e8\u5206</p> <p></p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#23-dds","title":"2.3 DDS\u901a\u8baf\u6a21\u578b","text":"<p>DDS\u7684\u6a21\u578b\u662f\u975e\u5e38\u5bb9\u6613\u7406\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u8bdd\u9898\u7684\u6570\u636e\u7ed3\u6784\uff08\u7c7b\u4f3c\u4e8eROS2\u4e2d\u7684\u63a5\u53e3\u7c7b\u578b\uff09\u3002\u4e0b\u56fe\u4e2d\u7684\u4f8b\u5b50:</p> <p>Pos\uff1a\u4e00\u4e2a\u7f16\u53f7id\u7684\u8f66\u5b50\u7684\u4f4d\u7f6ex,y DDS\u7684\u53c2\u4e0e\u8005(Participant)\u901a\u8fc7\u53d1\u5e03\u548c\u8ba2\u9605\u4e3b\u9898\u6570\u636e\u8fdb\u884c\u901a\u4fe1\u3002</p> <p></p> <p>DDS\u7684\u5e94\u7528\u5c42\u901a\u8fc7DDS\u8fdb\u884c\u6570\u636e\u8ba2\u9605\u53d1\u5e03\uff0cDDS\u901a\u8fc7\u4f20\u8f93\u5c42\u8fdb\u884c\u6570\u636e\u7684\u6536\u53d1\u3002</p> <p></p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#24-dds","title":"2.4 DDS\u7684\u4f18\u52bf\u4e0e\u52a3\u52bf","text":"<p>\u4f18\u52bf - \u53d1\u5e03/\u8ba2\u9605\u6a21\u578b\uff1a\u7b80\u5355\u89e3\u8026\uff0c\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u7cfb\u7edf\u89e3\u8026 - \u6027\u80fd\uff1a\u5728\u53d1\u5e03/\u8ba2\u9605\u6a21\u5f0f\u4e2d\uff0c\u4e0e\u8bf7\u6c42/\u56de\u590d\u6a21\u5f0f\u76f8\u6bd4\uff0c\u5ef6\u8fdf\u66f4\u4f4e\uff0c\u541e\u5410\u91cf\u66f4\u9ad8\u3002 - \u8fdc\u7a0b\u53c2\u4e0e\u8005\u7684\u81ea\u52a8\u53d1\u73b0\uff1a\u6b64\u673a\u5236\u662f DDS \u7684\u4e3b\u8981\u529f\u80fd\u4e4b\u4e00\u3002\u901a\u4fe1\u662f\u533f\u540d\u7684\u3001\u89e3\u8026\u7684\uff0c\u5f00\u53d1\u8005\u4e0d\u5fc5\u62c5\u5fc3\u8fdc\u7a0b\u53c2\u4e0e\u8005\u7684\u672c\u5730\u5316\u3002 - \u4e30\u5bcc\u7684 Qos \u53c2\u6570\u96c6\uff0c\u5141\u8bb8\u8c03\u6574\u901a\u4fe1\u7684\u5404\u4e2a\u65b9\u9762\uff1a\u53ef\u9760\u6027\u3001\u6301\u4e45\u6027\u3001\u5197\u4f59\u3001\u5bff\u547d\u3001\u4f20\u8f93\u8bbe\u7f6e\u3001\u8d44\u6e90...... - \u5b9e\u65f6\u53d1\u5e03\u8ba2\u9605\u534f\u8bae ( RTPS )\uff1a\u8be5\u534f\u8bae\u51e0\u4e4e\u53ef\u4ee5\u901a\u8fc7\u4efb\u4f55\u4f20\u8f93\u5b9e\u73b0\uff0c\u5141\u8bb8\u5728 UDP\u3001TCP\u3001\u5171\u4eab\u5185\u5b58\u548c\u7528\u6237\u4f20\u8f93\u4e2d\u4f7f\u7528 DDS\uff0c\u5e76\u5b9e\u73b0\u4e0d\u540c DDS \u5b9e\u73b0\u4e4b\u95f4\u7684\u771f\u6b63\u4e92\u64cd\u4f5c\u6027\u3002</p> <p>\u52a3\u52bf</p> <ul> <li>API\u590d\u6742\uff0cDDS \u7684\u7075\u6d3b\u6027\u662f\u4ee5\u590d\u6742\u6027\u4e3a\u4ee3\u4ef7\u7684\u3002</li> <li>\u7cfb\u7edf\u5f00\u9500\u76f8\u5bf9\u8f83\u5927.</li> <li>\u793e\u533a\u652f\u6301\u95ee\u9898\uff0c\u4f46ROS2\u8fd1\u4e24\u5e74\u6765\u4f7f\u7528DDS\u540e\u793e\u533a\u8868\u73b0\u8fd8\u662f\u4e0d\u9519\u7684\u3002</li> </ul>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#25-ros2dds","title":"2.5 ROS2\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528DDS","text":"<ul> <li>DDS\u5df2\u7ecf\u5e94\u7528\u5728\u519b\u4e8b\u3001\u6f5c\u8247\u5404\u4e2a\u9886\u57df\uff0c\u7a33\u5b9a\u6027\u5b9e\u65f6\u6027\u7ecf\u8fc7\u5b9e\u9645\u68c0\u9a8c\u3002</li> <li>\u4f7f\u7528DDS\u9700\u8981\u7ef4\u62a4\u7684\u4ee3\u7801\u8981\u5c11\u5f97\u591a\uff0c\u53ef\u4ee5\u8ba9ROS2\u5f00\u53d1\u4eba\u5458\u817e\u51fa\u624b\u4e13\u6ce8\u673a\u5668\u4eba\u5f00\u53d1\u3002</li> <li>DDS\u6709\u5b9a\u4e49\u597d\u7684\u884c\u4e3a\u548c\u89c4\u8303\u5e76\u4e14\u6709\u5b8c\u5584\u7684\u6587\u6863\u3002</li> <li>DDS\u63d0\u4f9b\u4e86\u63a8\u8350\u7684\u7528\u4f8b\u548c\u8f6f\u4ef6API\uff0c\u6709\u8f83\u597d\u7684\u8bed\u8a00\u652f\u6301\u3002</li> </ul>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#ch2-ros2","title":"CH2 ROS2\u7b2c\u4e00\u4e2a\u8282\u70b9","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#_2","title":"\u7ae0\u8282\u5bfc\u8bfb","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#1_1","title":"1.\u7ae0\u8282\u4ecb\u7ecd","text":"<p>\u672c\u8282\u6211\u4eec\u5c06\u6b63\u5f0f\u8e0f\u4e0aROS2\u7684\u5b66\u4e60\u4e4b\u65c5\uff0c\u672c\u7ae0\u8282\u540c\u6837\u7684\u4e5f\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\u3002</p> <ul> <li>\u5165\u95e8\u7bc7\uff0c\u4e3b\u8981\u4ecb\u7ecdPython\u548cC++\u7684\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5982\u4f55\u67e5\u627e\u4f9d\u8d56\u3002</li> <li>\u57fa\u7840\u7bc7\uff0c\u4e3b\u8981\u4ecb\u7ecdROS2\u7684\u57fa\u7840\u6982\u5ff5\uff0c\u540c\u65f6\u91cd\u70b9\u7684\u4ecb\u7ecdROS2\u7684\u5ba2\u6237\u7aef\u5e93\uff0c\u5e76\u5e26\u4f60\u52a8\u624b\u7f16\u5199ROS2\u7684\u8282\u70b9\u3002</li> <li>\u8fdb\u9636\u7bc7\uff0c\u4e3b\u8981\u5bf9ROS2\u7684\u8282\u70b9\u8fdb\u4e00\u6b65\u7684\u4ecb\u7ecd\uff0c\u540c\u65f6\u6269\u5c55\u4e86\u751f\u547d\u5468\u671f\u8282\u70b9\uff0c\u8282\u70b9\u53d1\u73b0\u673a\u5236\u548c\u529f\u80fd\u5305\u7684\u8fd0\u884c\u539f\u7406\u8fdb\u884c\u4ecb\u7ecd\u3002</li> </ul>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#2_2","title":"2.\u98df\u7528\u65b9\u6cd5","text":"<p>\u5982\u679c\u4f60\u4e0d\u4f1aC++\u6216\u8005Python\u8bed\u8a00\uff0c\u53ef\u4ee5\u5148\u7b80\u5355\u5b66\u4e60\u4e0b\u57fa\u672c\u8bed\u6cd5\u3002</p> <p>\u5982\u679c\u4f60\u5bf9Python\u5305\u52a0\u8f7d\u8fc7\u7a0b\u548cCMake\u6bd4\u8f83\u719f\u6089\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u57fa\u7840\u7bc7\u3002</p> <p>\u5982\u679c\u4f60\u5bf9ROS2\u7684\u57fa\u7840\u6982\u5ff5\u548c\u8282\u70b9\u7f16\u5199\u65b9\u6cd5\u6bd4\u8f83\u719f\u6089\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u5165\u95e8\u7bc7\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#3","title":"3.\u7ae0\u8282\u76ee\u5f55","text":"<ul> <li> <p>\u57fa\u7840\u7bc7-\u7f16\u7a0b\u57fa\u7840</p> <ul> <li>1.C++\u7f16\u8bd1\u5de5\u5177\u4e4bCMake</li> <li>2.Python\u6253\u5305\u5de5\u5177\u4e4bSetup</li> <li>3.CMake\u4f9d\u8d56\u67e5\u627e\u6d41\u7a0b</li> <li>4.Python\u4f9d\u8d56\u67e5\u627e\u6d41\u7a0b</li> </ul> </li> <li> <p>\u5165\u95e8\u7bc7-\u52a8\u624b\u4f7f\u7528ROS2</p> <ul> <li>1.ROS2\u8282\u70b9\u4e0e\u5de5\u4f5c\u7a7a\u95f4</li> <li>2.ROS2\u7f16\u8bd1\u5668\u4e4bColcon</li> <li>3.ROS2\u5ba2\u6237\u7aef\u5e93\u77e5\u591a\u5c11</li> <li>4.\u4f7f\u7528RCLCPP\u7f16\u5199\u8282\u70b9</li> <li>5.\u4f7f\u7528RCLPY\u7f16\u5199\u8282\u70b9</li> </ul> </li> <li> <p>\u8fdb\u9636\u7bc7-ROS2\u7cfb\u7edf</p> <ul> <li>1.\u4e94\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u7f16\u5199\u8282\u70b9</li> <li>2.\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\u7ec7\u591a\u4e2a\u8282\u70b9</li> <li>3.\u751f\u547d\u5468\u671f\u8282\u70b9\u4ecb\u7ecd</li> <li>4.ROS2\u8282\u70b9\u53d1\u73b0\u673a\u5236\u539f\u7406</li> <li>5.Colcon\u7f16\u8bd1\u539f\u7406\u4e0e\u8fdb\u9636\u4f7f\u7528</li> <li>6.ROS2\u5305\u8fd0\u884c\u539f\u7406</li> <li>7.ROS2\u5ba2\u6237\u7aef\u5e93\u6e90\u7801\u5bfc\u8bfb</li> </ul> </li> </ul>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#-_1","title":"\u57fa\u7840\u7bc7-\u7f16\u7a0b\u57fa\u7840","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#1gros2","title":"1.\u4f7f\u7528g++\u7f16\u8bd1ROS2\u8282\u70b9","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#11_1","title":"1.1 \u52a8\u6001\u94fe\u63a5\u5e93\u4ecb\u7ecd","text":"<p>\u7a0b\u5e8f\u7f16\u8bd1\u4e00\u822c\u9700\u8981\u7ecf\u9884\u5904\u7406\u3001\u7f16\u8bd1\u3001\u6c47\u7f16\u548c\u94fe\u63a5\u51e0\u4e2a\u6b65\u9aa4\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6709\u4e9b\u516c\u5171\u4ee3\u7801\u9700\u8981\u53cd\u590d\u4f7f\u7528\uff0c\u5c31\u628a\u8fd9\u4e9b\u4ee3\u7801\u7f16\u8bd1\u6210\u4e3a\u201c\u5e93\u201d\u6587\u4ef6\u3002\u5728\u94fe\u63a5\u6b65\u9aa4\u4e2d\uff0c\u94fe\u63a5\u5668\u5c06\u4ece\u5e93\u6587\u4ef6\u53d6\u5f97\u6240\u9700\u7684\u4ee3\u7801\uff0c\u590d\u5236\u5230\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u8fd9\u79cd\u5e93\u79f0\u4e3a\u9759\u6001\uff08\u94fe\u63a5\uff09\u5e93\uff0c\u5176\u7279\u70b9\u662f\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u5305\u542b\u4e86\u5e93\u4ee3\u7801\u7684\u4e00\u4efd\u5b8c\u6574\u62f7\u8d1d\uff0c\u7f3a\u70b9\u662f\u88ab\u591a\u6b21\u4f7f\u7528\u5c31\u4f1a\u591a\u4efd\u5197\u4f59\u62f7\u8d1d\u3002\u8fd8\u6709\u4e00\u79cd\u5e93\uff0c\u5c31\u662f\u7a0b\u5e8f\u5728\u5f00\u59cb\u8fd0\u884c\u540e\u8c03\u7528\u5e93\u51fd\u6570\u65f6\u624d\u88ab\u8f7d\u5165\uff0c\u8fd9\u79cd\u5e93\u72ec\u7acb\u4e8e\u73b0\u6709\u7684\u7a0b\u5e8f\uff0c\u5176\u672c\u8eab\u4e0d\u53ef\u6267\u884c\uff0c\u4f46\u5305\u542b\u7740\u7a0b\u5e8f\u9700\u8981\u8c03\u7528\u7684\u4e00\u4e9b\u51fd\u6570\uff0c\u8fd9\u79cd\u5e93\u79f0\u4e3a\u52a8\u6001\uff08\u94fe\u63a5\uff09\u5e93\uff08Dynamic Link Library\uff09\u3002</p> <p>\u5728widows\u5e73\u53f0\u4e0b\uff0c\u9759\u6001\u94fe\u63a5\u5e93\u662f.lib\u6587\u4ef6\uff0c\u52a8\u6001\u5e93\u6587\u4ef6\u662f.dll\u6587\u4ef6\u3002\u5728linux\u5e73\u53f0\u4e0b\uff0c\u9759\u6001\u94fe\u63a5\u5e93\u662f.a\u6587\u4ef6\uff0c\u52a8\u6001\u94fe\u63a5\u5e93\u662f.so\u6587\u4ef6\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#12-gros2c","title":"1.2 \u7528g++\u7f16\u8bd1ROS2\u7684C++\u8282\u70b9","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#121-ros2c","title":"1.2.1 \u7f16\u5199ROS2\u7684C++\u8282\u70b9","text":"<p>\u7f16\u5199\u4e00\u4e2aROS2\u7684C++\u8282\u70b9\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u4e09\u884c\u4ee3\u7801\u5373\u53ef\u5b8c\u6210\u3002</p> <p>\u6253\u5f00\u7ec8\u7aef\uff0c\u521b\u5efachapt2/basic\u76ee\u5f55\uff0c\u7528VSCODE\u6253\u5f00d2lros2\u76ee\u5f55\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#122","title":"1.2.2 \u7f16\u8bd1","text":"<p>\u4e00\u5b9a\u8981\u8bb0\u4f4f\u8fd9\u4e2a\u9519\u8bef No such file or directory\uff0c\u8fd9\u5c06\u662f\u4f60\u63a5\u4e0b\u6765\u673a\u5668\u4eba\u5b66\u4e60\u5de5\u4f5c\u751f\u6daf\u4e2d\u6700\u5e38\u89c1\u7684\u9519\u8bef\u4e4b\u4e00\u3002\u539f\u56e0\u6211\u4eec\u5728\u4ee3\u7801\u91cc\u5305\u542b\u4e86\"rclcpp/rclcpp.hpp\"\u5934\u6587\u4ef6\uff0c\u4f46\u662fg++\u627e\u4e0d\u5230\u8fd9\u4e2a\u5934\u6587\u4ef6\uff0c\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u544a\u8bc9g++\u8fd9\u4e2a\u5934\u6587\u4ef6\u7684\u76ee\u5f55\u3002</p> <p>\u8bf7\u8bb0\u4f4f\u4e0a\u9762\u9519\u8bef\u4e2d\u7684undefined reference to xxxxx\uff0c\u8fd9\u5c06\u662f\u4f60\u63a5\u4e0b\u6765\u673a\u5668\u4eba\u5b66\u4e60\u5de5\u4f5c\u751f\u6daf\u4e2d\u53e6\u4e00\u4e2a\u6700\u5e38\u89c1\u7684\u9519\u8bef\u3002\u539f\u56e0\u5728\u4e8eg++\u627e\u4e0d\u5230\u5e93\u6587\u4ef6\uff0c\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u6211\u4eec\u5e2e\u52a9\u5b83\u5b9a\u4f4d\u5230\u5e93\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u5e76\u901a\u8fc7-L\u53c2\u6570\u6307\u5b9a\u5e93\u76ee\u5f55\uff0c-l\uff08\u5c0f\u5199L\uff09\u6307\u5b9a\u5e93\u7684\u540d\u5b57\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#13","title":"1.3 \u8fd0\u884c","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#2makeros2","title":"2.\u4f7f\u7528make\u7f16\u8bd1ROS2\u8282\u70b9","text":"<ol> <li> <p>\u5b89\u88c5make <pre><code>sudo apt install make\n</code></pre></p> </li> <li> <p>\u7f16\u5199Makefile\u6587\u4ef6 <pre><code># Makefile\u6587\u4ef6\n...\n</code></pre></p> </li> <li> <p>\u7f16\u8bd1 \u5728make\u540c\u7ea7\u76ee\u5f55\u4e0b\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165\u547d\u4ee4\uff1a <pre><code>make build\n</code></pre></p> </li> <li> <p>\u8fd0\u884c <pre><code>./first_node\n</code></pre></p> </li> </ol> <p>\u6253\u5f00\u65b0\u7ec8\u7aef\uff0c\u8f93\u5165\u547d\u4ee4\uff1a <pre><code>ros2 node list\n</code></pre></p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#3cmakeliststxtros2","title":"3.\u4f7f\u7528CMakeLists.txt\u7f16\u8bd1ROS2\u8282\u70b9","text":"<p>\u867d\u7136\u901a\u8fc7make\u8c03\u7528Makefile\u7f16\u8bd1\u4ee3\u7801\u975e\u5e38\u7684\u65b9\u4fbf\uff0c\u4f46\u662f\u8fd8\u662f\u9700\u8981\u6211\u4eec\u624b\u5199gcc\u6307\u4ee4\u6765\u7f16\u8bd1\uff0c\u90a3\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u81ea\u52a8\u751f\u6210Makefile\u5462\uff1f</p> <p>\u7b54\u6848\u662f\u6709\u7684\uff0c\u90a3\u5c31\u662fcmake\u5de5\u5177\u3002</p> <p>cmake\u901a\u8fc7\u8c03\u7528CMakeLists.txt\u76f4\u63a5\u751f\u6210Makefile\u3002</p> <ol> <li> <p>\u5b89\u88c5cmake <pre><code>sudo apt install cmake\n</code></pre></p> </li> <li> <p>\u7f16\u5199CMakeLists.txt\u6587\u4ef6 <pre><code>...\n</code></pre></p> </li> <li> <p>\u7f16\u8bd1 \u6211\u4eec\u4e00\u822c\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55\uff0c\u8fd0\u884ccmake\u5e76\u8fdb\u884c\u7f16\u8bd1\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\u4e0d\u4f1a\u663e\u5f97\u90a3\u4e48\u4e71\u3002 <pre><code>mkdir build\ncd build\n</code></pre> \u521b\u5efa\u597d\u6587\u4ef6\u5939\uff0c\u63a5\u7740\u8fd0\u884ccmake\u6307\u4ee4\uff0c..\u4ee3\u8868\u5230\u4e0a\u7ea7\u76ee\u5f55\u627eCMakeLists.txt\u3002</p> </li> </ol> <p><pre><code>cmake ..\n</code></pre> \u8fd0\u884c\u5b8ccmake\u4f60\u5e94\u8be5\u53ef\u4ee5\u5728build\u76ee\u5f55\u4e0b\u770b\u5230cmake\u81ea\u52a8\u751f\u6210\u7684Makefile\u4e86\uff0c\u63a5\u7740\u5c31\u53ef\u4ee5\u8fd0\u884cmake\u6307\u4ee4\u8fdb\u884c\u7f16\u8bd1</p> <pre><code>make\n</code></pre> <ol> <li>\u8fd0\u884c <pre><code>./first_node\n</code></pre></li> </ol>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#4cmake","title":"4.\u4f7f\u7528CMake\u4f9d\u8d56\u67e5\u627e\u6d41\u7a0b","text":"<p>\u4e0a\u9762\u6211\u4eec\u7528g++\u3001make\u3001cmake\u4e09\u79cd\u65b9\u5f0f\u6765\u7f16\u8bd1ros2\u7684C++\u8282\u70b9\u3002\u7528cmake\u867d\u7136\u6210\u529f\u4e86\uff0c\u4f46\u662fCMakeLists.txt\u7684\u5185\u5bb9\u4f9d\u7136\u975e\u5e38\u7684\u81c3\u80bf\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8fdb\u4e00\u6b65\u7684\u7b80\u5316\u3002</p> <ol> <li>\u4f18\u5316CMakeLists.txt <pre><code>cmake_minimum_required(VERSION 3.22)\nproject(first_node)\n\nfind_package(rclcpp REQUIRED)\nadd_executable(first_node first_ros2_node.cpp)\ntarget_link_libraries(first_node rclcpp::rclcpp)\n</code></pre> \u63a5\u7740\u7ee7\u7eed\u751f\u6210\u548c\u7f16\u8bd1 <pre><code>cmake ..\nmake\n</code></pre> \u662f\u4e0d\u662f\u975e\u5e38\u7684\u795e\u5947\uff0c\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u6d53\u7f29\u6210\u90a3\u4e48\u77ed\u7684\u51e0\u53e5\u6307\u4ee4\u5462\uff1f</li> </ol> <p>2.find_package\u67e5\u627e\u8def\u5f84 find_package\u67e5\u627e\u8def\u5f84\u5bf9\u5e94\u7684\u73af\u5883\u53d8\u91cf\u5982\u4e0b\u3002</p> <p><pre><code>&lt;package&gt;_DIR\nCMAKE_PREFIX_PATH\nCMAKE_FRAMEWORK_PATH\nCMAKE_APPBUNDLE_PATH\nPATH\n</code></pre> \u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165\u6307\u4ee4\uff1a <pre><code>echo $PATH\n</code></pre></p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#5python","title":"5.Python\u4f9d\u8d56\u67e5\u627e\u6d41\u7a0b","text":"<p>python\u7684\u6253\u5305\u548c\u5f15\u5165\u4f9d\u8d56\u7684\u65b9\u5f0f\u76f8\u6bd4C++\u8981\u5bb9\u6613\u592a\u591a\u3002\u672c\u8282\u5c0f\u9c7c\u5e26\u4f60\u6765\u901a\u8fc7\u51e0\u4e2a\u5b9e\u4f8b\u5b66\u4e60\u4e0bPython\u7684\u8def\u5f84\u67e5\u627e\u673a\u5236\u3002 1.\u7f16\u5199ROS2\u7684Python\u8282\u70b9 \u5728d2lros2/d2lros2/chapt2/basic\u65b0\u5efasecond_ros2_node.py\uff0c\u8f93\u5165\u4e0b\u9762\u7684\u5185\u5bb9 <pre><code># \u5bfc\u5165rclpy\u5e93\uff0c\u5982\u679cVscode\u663e\u793a\u7ea2\u8272\u7684\u6ce2\u6d6a\u7ebf\u4e5f\u6ca1\u5173\u7cfb\n# \u6211\u4eec\u53ea\u662f\u628aVsCode\u5f53\u8bb0\u4e8b\u672c\u800c\u5df2\uff0c\u8c01\u4f1a\u5728\u610f\u8bb0\u4e8b\u672c\u5bf9\u4ee3\u7801\u7684\u770b\u6cd5\u5462\uff0c\u4e0d\u662f\u5417\uff1f\nimport rclpy\nfrom rclpy.node import Node\n# \u8c03\u7528rclcpp\u7684\u521d\u59cb\u5316\u51fd\u6570\nrclpy.init() \n# \u8c03\u7528rclcpp\u7684\u5faa\u73af\u8fd0\u884c\u6211\u4eec\u521b\u5efa\u7684second_node\u8282\u70b9\nrclpy.spin(Node(\"second_node\"))\n</code></pre> 2.\u8fd0\u884cPython\u8282\u70b9 \u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165\u6307\u4ee4</p> <pre><code>ls\npython3 second_ros2_node.py\n</code></pre> <p>\u6253\u5f00\u65b0\u7684\u7ec8\u7aef\uff0c\u8f93\u5165\u6307\u4ee4</p> <pre><code>ros2 node list\n</code></pre> <ol> <li>Python\u5305\u67e5\u627e\u6d41\u7a0b Python3\u8fd0\u884cimport rclpy\u65f6\u5019\u5982\u4f55\u627e\u5230\u5b83\u7684\u5462\uff1f\u7b54\u6848\u662f\u901a\u8fc7\u73af\u5883\u53d8\u91cfPYTHONPATH</li> </ol> <p>Ctrl+C\u6253\u65ad\u8282\u70b9\u8fd0\u884c\uff0c\u63a5\u7740\u8f93\u5165\u4e0b\u9762\u6307\u4ee4</p> <p><pre><code>echo $PYTHONPATH\n</code></pre> 4.\u5220\u9664\u8def\u5f84\u5b9e\u9a8c</p> <p>\u8bf7\u4f60\u8bb0\u4f4f\u8fd9\u4e2a\u62a5\u9519\u4fe1\u606fModuleNotFoundError: No module named 'xxx'\uff0c\u8fd9\u4e5f\u662f\u4f60\u672a\u6765\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u7ecf\u5e38\u4f1a\u9047\u5230\u7684\u3002</p>"},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#6pythonsetup","title":"6.Python\u5de5\u5177\u4e4bSetup","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#-ros2_1","title":"\u5165\u95e8\u7bc7-\u52a8\u624b\u4f7f\u7528ROS2","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#-ros2_2","title":"\u8fdb\u9636\u7bc7-ROS2\u7cfb\u7edf","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#ch3-ros2","title":"CH3 ROS2\u8282\u70b9\u901a\u8baf\u4e4b\u8bdd\u9898\u4e0e\u670d\u52a1","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#ch4-ros2","title":"CH4 ROS2\u8282\u70b9\u901a\u8baf\u4e4b\u53c2\u6570\u4e0e\u52a8\u4f5c","text":""},{"location":"zh/ACTUATION/HANDSON-ROS/P1-GET-STARTED/p1-get-started/#ch5","title":"CH5 \u5e38\u7528\u5de5\u5177","text":""},{"location":"zh/ACTUATION/ROS/ros/","title":"\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf (ROS)","text":""},{"location":"zh/ACTUATION/ROS/ros/#_1","title":"\u94fe\u63a5","text":"<ul> <li> <p> ROS Wiki</p> <p>ROS \u5b98\u65b9 Wiki</p> <p>  Portal </p> </li> <li> <p> ROS Humble</p> <p>ROS Humble \u6307\u5357</p> <p>  Portal </p> </li> <li> <p> \u53e4\u6708\u5c45</p> <p>\u5728\u7ebf\u673a\u5668\u4eba\u5b66\u5b66\u4e60</p> <p>  Portal </p> </li> <li> <p> \u9c7c\u9999ROS</p> <p>\u5728\u7ebf\u673a\u5668\u4eba\u5b66\u5b66\u4e60</p> <p>  Portal </p> </li> </ul>"},{"location":"zh/ACTUATION/ROS/OFFICIAL-GUIDE/DISTRIBUTION/distribution/","title":"ROS2-Humble\u6307\u5357-\u53d1\u884c\u7248\u672c","text":"<p>\ud83c\udf10 \u539f\u59cb\u9875\u9762\u94fe\u63a5 </p> <p>\u5f53\u524d\u4ec5\u652f\u6301\u82f1\u6587\u7248\u3002</p>"},{"location":"zh/ACTUATION/ROS/OFFICIAL-GUIDE/INSTALLATION/installation/","title":"ROS2-Humble\u6307\u5357-\u5b89\u88c5","text":"<p>\ud83c\udf10 \u539f\u59cb\u9875\u9762\u94fe\u63a5 </p> <p>\u5f53\u524d\u4ec5\u652f\u6301\u82f1\u6587\u7248\u3002</p>"},{"location":"zh/ACTUATION/ROS/OFFICIAL-GUIDE/TUTORIALS/CLI-TOOLS/cli-tools/","title":"ROS2-Humble \u6307\u5357 - \u6559\u7a0b - \u521d\u5b66\u8005\uff1a\u5ba2\u6237\u7aef\u5de5\u5177","text":"<p>\ud83c\udf10 \u539f\u6587\u8fde\u63a5</p> <p>\u5f53\u524d\u4ec5\u652f\u6301\u82f1\u6587\u7248\u3002</p>"},{"location":"zh/AI/ai/","title":"\u4eba\u5de5\u667a\u80fd","text":""},{"location":"zh/AI/BASICS/basics/","title":"AI \u57fa\u7840","text":"<p>AI \u8fdb\u5316\u53f2: https://www.linkedin.com/pulse/biggest-confusion-cleared-ai-vs-ml-dl-ashwin-kumar/</p>"},{"location":"zh/AI/BASICS/basics/#_1","title":"\u673a\u5668\u5b66\u4e60","text":"<ul> <li> <p> \u673a\u5668\u5b66\u4e60</p> <p>\u8fdb\u5ea6\uff1a [\u2705]</p> <p>\u8bc4\u4ef7 \u5434\u6069\u8fbe\u5728 Coursera \u4e0a\u7684\u673a\u5668\u5b66\u4e60\u8bfe\u7a0b\u3002\u8fd9\u95e8\u8bfe\u7a0b\u662f\u57fa\u4e8e Matlab/Octave \u7684\uff0c\u73b0\u5728\u7684\u65b0\u7248\u662f\u57fa\u4e8e Python \u7684\u3002</p> <p>  \u8bfe\u7a0b\u4e3b\u9875 </p> </li> </ul>"},{"location":"zh/AI/BASICS/basics/#_2","title":"\u6df1\u5ea6\u5b66\u4e60","text":"<ul> <li> <p> \u6df1\u5ea6\u5b66\u4e60\u4e13\u9879\u8bfe\u7a0b \ud83c\udfc6</p> <p>\u8fdb\u5ea6\uff1a [\u2705]</p> <p>\u5185\u5bb9\uff1a 5 \u95e8\u8bfe\u7a0b</p> <p>\u5434\u6069\u8fbe\u5728 Coursera \u4e0a\u7684\u6df1\u5ea6\u5b66\u4e60\u4e13\u9879\u8bfe\u7a0b\u3002\u8fd9\u4e2a\u4e13\u9879\u8bfe\u7a0b\u5305\u542b\u4e86 5 \u95e8\u8bfe\u7a0b\uff1a</p> <ul> <li>\u795e\u7ecf\u7f51\u7edc\u548c\u6df1\u5ea6\u5b66\u4e60</li> <li>\u6539\u5584\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\uff1a\u8d85\u53c2\u6570\u8c03\u8bd5\u3001\u6b63\u5219\u5316\u548c\u4f18\u5316</li> <li>\u7ed3\u6784\u5316\u673a\u5668\u5b66\u4e60\u9879\u76ee</li> <li>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc</li> <li>\u5e8f\u5217\u6a21\u578b</li> </ul> <p>\u8bc4\u4ef7 \u8fd9\u4e2a\u4e13\u9879\u8bfe\u7a0b\u51e0\u4e4e\u6db5\u76d6\u4e86\u6df1\u5ea6\u5b66\u4e60\u7684\u65b9\u65b9\u9762\u9762\uff0c\u975e\u5e38\u63a8\u8350\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u4e13\u8f91\u6bd4\u8f83\u82b1\u8d39\u65f6\u95f4\uff0c\u5982\u679c\u6709\u65f6\u95f4\u53ef\u4ee5\u9759\u4e0b\u6765\u6162\u6162\u5b66\u3002</p> <p>  \u8bfe\u7a0b\u4e3b\u9875 </p> </li> <li> <p> \u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60 \ud83c\udfc6</p> <p>\u72b6\u6001\uff1a [\u2705 \u5b8c\u6210 1,2,18] [\ud83d\udea7 \u8fdb\u884c\u4e2d 17]</p> <p>\u8bc4\u4ef7 \u4e00\u672c\u975e\u5e38\u597d\u7684\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\u4e66\u7c4d\uff0c\u514d\u8d39\u5f00\u6e90\uff0c\u4e2d\u6587\u7248\u4e5f\u6709\u3002\u8fd9\u672c\u4e66\u8fd8\u5728\u4e0d\u65ad\u66f4\u65b0\u4e2d\uff0c\u4f46\u662f\u5df2\u7ecf\u975e\u5e38\u597d\u4e86\uff0c\u975e\u5e38\u63a8\u8350\u3002</p> <p>  \u4e66\u7c4d\u4e3b\u9875 </p> </li> </ul>"},{"location":"zh/AI/CNN/cnn/","title":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"zh/AI/CV/cv/","title":"\u8ba1\u7b97\u673a\u89c6\u89c9","text":""},{"location":"zh/AI/CV/cv/#_2","title":"\u94fe\u63a5","text":"<ul> <li> <p> OpenCV</p> <p>\u7528\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u3001\u56fe\u50cf\u5904\u7406\u548c\u673a\u5668\u5b66\u4e60\u7684\u5e93\u3002C++\u3001Python \u548c Java \u63a5\u53e3\uff0c\u652f\u6301 Windows\u3001Linux\u3001Mac OS\u3001iOS \u548c Android\u3002OpenCV \u4e13\u6ce8\u4e8e\u5b9e\u65f6\u5e94\u7528\u7684\u8ba1\u7b97\u6548\u7387\u3002\u4f7f\u7528\u4f18\u5316\u7684 C/C++ \u7f16\u5199\uff0c\u8be5\u5e93\u53ef\u4ee5\u5229\u7528\u591a\u6838\u5904\u7406\u3002\u542f\u7528 OpenCL\uff0c\u5b83\u53ef\u4ee5\u5229\u7528\u5e95\u5c42\u5f02\u6784\u8ba1\u7b97\u5e73\u53f0\u7684\u786c\u4ef6\u52a0\u901f\u3002</p> <p>  \u95e8\u6237 </p> </li> </ul>"},{"location":"zh/AI/FL/fl/","title":"\u8054\u90a6\u5b66\u4e60","text":""},{"location":"zh/AI/FRAMEWORKS/frameworks/","title":"\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6","text":"<p>\u8c08\u5230\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u63d0\u5230\u6700\u6d41\u884c\u7684\u6846\u67b6\uff1aTensorFlow\u3001PyTorch\u3001Caffe\u3001MXNet\u3001CNTK\u7b49\u3002\u5b83\u4eec\u90fd\u662f\u5f00\u6e90\u7684\uff0c\u5e76\u4e14\u62e5\u6709\u4e00\u4e2a\u5e9e\u5927\u7684\u793e\u533a\u3002\u5b83\u4eec\u4e5f\u662f\u4e1a\u754c\u6700\u53d7\u6b22\u8fce\u7684\u6846\u67b6\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u53ea\u4ecb\u7ecdTensorFlow\u548cPyTorch\u3002 </p> <ul> <li> <p> TensorFlow</p> <p>TensorFlow\u662f\u7aef\u5230\u7aef\u5f00\u6e90\u673a\u5668\u5b66\u4e60\u5e73\u53f0\u3002\u5b83\u5177\u6709\u5168\u9762\uff0c\u7075\u6d3b\u7684\u5de5\u5177\u751f\u6001\u7cfb\u7edf\uff0c\u53ef\u8ba9\u7814\u7a76\u4eba\u5458\u63a8\u52a8ML\u7684\u6700\u65b0\u8fdb\u5c55\uff0c\u5e76\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u8f7b\u677e\u6784\u5efa\u548c\u90e8\u7f72ML\u5e94\u7528\u7a0b\u5e8f\u3002</p> <p>\u5de5\u4e1a\u754c\u9996\u9009</p> <p>  \u6559\u7a0b </p> </li> <li> <p> PyTorch</p> <p>PyTorch\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u673a\u5668\u5b66\u4e60\u6846\u67b6\uff0c\u53ef\u4ee5\u52a0\u901f\u4ece\u7814\u7a76\u539f\u578b\u5230\u751f\u4ea7\u90e8\u7f72\u7684\u8def\u5f84\u3002\u5b83\u7531Facebook\u7684AI\u7814\u7a76\u5c0f\u7ec4\u4e8e2016\u5e74\u5f00\u53d1\u3002PyTorch\u5f3a\u8c03\u7075\u6d3b\u6027\uff0c\u5e76\u5141\u8bb8\u4ee5\u60ef\u7528\u7684Python\u8868\u8fbe\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u3002</p> <p>\u5b66\u672f\u754c\u9996\u9009</p> <p>  \u6559\u7a0b </p> </li> </ul>"},{"location":"zh/AI/FRAMEWORKS/frameworks/#tensorflow","title":"TensorFlow","text":"<ul> <li> <p> \u5b98\u65b9\u7f51\u7ad9</p> <p>\ud83c\udf10 https://www.tensorflow.org/</p> </li> <li> <p> \u6559\u7a0b</p> <p>\ud83c\udf10 https://www.tensorflow.org/tutorials</p> </li> <li> <p> \u8fb9\u7f18\u8ba1\u7b97</p> <p>\ud83c\udf10 https://www.tensorflow.org/lite</p> </li> </ul>"},{"location":"zh/AI/FRAMEWORKS/frameworks/#pytorch","title":"PyTorch","text":"<ul> <li> <p> \u5b98\u65b9\u7f51\u7ad9</p> <p>\ud83c\udf10 https://pytorch.org/</p> </li> <li> <p> \u6559\u7a0b</p> <p>\ud83c\udf10 https://pytorch.org/tutorials/</p> </li> <li> <p> \u8fb9\u7f18\u8ba1\u7b97</p> <p>\ud83c\udf10 https://pytorch.org/mobile/home/</p> </li> </ul>"},{"location":"zh/AI/GAN/gan/","title":"\u5bf9\u6297\u751f\u6210\u7f51\u7edc","text":""},{"location":"zh/AI/MLP/mlp/","title":"\u591a\u5c42\u611f\u77e5\u673a","text":""},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/","title":"CH01 - \u5f15\u8a00","text":""},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_1","title":"\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u673a\u5668\u5b66\u4e60","text":"<p>\u201cHi,Siri\u201d \u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002</p> <p></p> <p>\u4e00\u4e2a\u5178\u578b\u7684\u8bad\u7ec3\u8fc7\u7a0b\u3002</p> <p></p>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_2","title":"\u5173\u952e\u7ec4\u6210\u90e8\u5206","text":"<ol> <li>\u6570\u636e</li> <li>\u6a21\u578b</li> <li>\u76ee\u6807\u51fd\u6570</li> <li>\u4f18\u5316\u7b97\u6cd5</li> </ol>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_3","title":"\u6570\u636e","text":"<p>\u5783\u573e\u8fdb\uff0c\u5783\u573e\u51fa\u3002\u6570\u636e\u8d28\u91cf\u6bd4\u6a21\u578b\u672c\u8eab\u66f4\u91cd\u8981\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_4","title":"\u4e00\u4e9b\u5173\u952e\u6982\u5ff5\uff1a","text":"<ul> <li>\u6837\u672c</li> <li>\u7279\u5f81</li> <li>\u6807\u7b7e</li> <li>\u7ef4\u5ea6</li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_5","title":"\u6570\u636e\u5212\u5206","text":"<ul> <li>\u8bad\u7ec3\u96c6</li> <li>\u9a8c\u8bc1\u96c6</li> <li>\u6d4b\u8bd5\u96c6</li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_6","title":"\u6a21\u578b","text":"<p>\u6ca1\u6709\u4e00\u79cd\u6a21\u578b\u9002\u7528\u4e8e\u6240\u6709\u573a\u666f\u3002\u6a21\u578b\u5e94\u8be5\u6839\u636e\u6570\u636e\u548c\u4efb\u52a1\u8fdb\u884c\u9009\u62e9\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_7","title":"\u76ee\u6807\u51fd\u6570","text":"<p>\u76ee\u6807\u51fd\u6570\u7528\u4e8e\u8861\u91cf\u6a21\u578b\u7684\u8d28\u91cf\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_8","title":"\u4f18\u5316\u7b97\u6cd5","text":"<p>\u5927\u591a\u6570\u95ee\u9898\u5f52\u7ed3\u4e3a\u4f18\u5316\u95ee\u9898\u3002\u4f18\u5316\u7b97\u6cd5\u7528\u4e8e\u627e\u5230\u6a21\u578b\u7684\u6700\u4f18\u53c2\u6570\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_9","title":"\u673a\u5668\u5b66\u4e60\u7684\u79cd\u7c7b","text":""},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_10","title":"\u76d1\u7763\u5b66\u4e60","text":"<ul> <li> <p>\u56de\u5f52</p> </li> <li> <p>\u5206\u7c7b</p> </li> <li> <p>\u6807\u6ce8</p> </li> <li> <p>\u641c\u7d22\u4e0e\u6392\u5e8f</p> </li> <li> <p>\u63a8\u8350\u7cfb\u7edf</p> </li> <li> <p>\u5e8f\u5217\u5b66\u4e60</p> </li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_11","title":"\u65e0\u76d1\u7763\u5b66\u4e60","text":"<ul> <li> <p>\u805a\u7c7b</p> </li> <li> <p>\u964d\u7ef4</p> <ul> <li>\u4e3b\u6210\u4efd\u5206\u6790\uff08PCA\uff09\u662f\u4e00\u79cd\u5e38\u7528\u7684\u964d\u7ef4\u65b9\u6cd5\u3002</li> </ul> </li> <li> <p>\u56e0\u679c\u4e0e\u6982\u7387\u56fe\u6a21\u578b</p> </li> <li> <p>\u751f\u6210\u6a21\u578b\u4e0e\u5224\u522b\u6a21\u578b</p> </li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_12","title":"\u4e0e\u73af\u5883\u4ea4\u4e92","text":"<p>\u5728\u7ebf\u5b66\u4e60 / \u9002\u5e94\u6027\u5b66\u4e60</p> <p></p>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_13","title":"\u5f3a\u5316\u5b66\u4e60","text":"<p>\u5f3a\u5316\u5b66\u4e60\u7ed9\u51fa\u4e86\u4e00\u79cd\u975e\u5e38\u4e00\u822c\u7684\u95ee\u9898\u9648\u8ff0\uff0c\u5176\u4e2d\u4e00\u4e2a\u4ee3\u7406\u5728\u4e00\u7cfb\u5217\u65f6\u95f4\u6b65\u957f\u5185\u4e0e\u73af\u5883\u8fdb\u884c\u4ea4\u4e92\u3002\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\u957f\uff0c\u4ee3\u7406\u4ece\u73af\u5883\u4e2d\u63a5\u6536\u4e00\u4e9b\u89c2\u5bdf\u5e76\u5fc5\u987b\u9009\u62e9\u4e00\u4e2a\u52a8\u4f5c\uff0c\u8be5\u52a8\u4f5c\u968f\u540e\u901a\u8fc7\u67d0\u79cd\u673a\u5236\uff08\u6709\u65f6\u79f0\u4e3a\u6267\u884c\u5668\uff09\u4f20\u8f93\u56de\u73af\u5883\uff0c\u5f53\u5728\u6bcf\u4e2a\u5faa\u73af\u4e4b\u540e\uff0c\u4ee3\u7406\u4ece\u73af\u5883\u4e2d\u83b7\u5f97\u5956\u52b1\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5982\u56fe1.3.7\u6240\u793a\u3002\u7136\u540e\u4ee3\u7406\u63a5\u6536\u540e\u7eed\u89c2\u5bdf\uff0c\u5e76\u9009\u62e9\u540e\u7eed\u52a8\u4f5c\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u5f3a\u5316\u5b66\u4e60\u4ee3\u7406\u7684\u884c\u4e3a\u7531\u7b56\u7565\u51b3\u5b9a\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u7b56\u7565\u53ea\u662f\u4e00\u4e2a\u5c06\u73af\u5883\u89c2\u5bdf\u6620\u5c04\u5230\u52a8\u4f5c\u7684\u51fd\u6570\u3002\u5f3a\u5316\u5b66\u4e60\u7684\u76ee\u6807\u662f\u4ea7\u751f\u597d\u7684\u7b56\u7565\u3002</p> <p></p> <p>Note</p> <p>\u4efb\u4f55\u673a\u5668\u5b66\u4e60\u95ee\u9898\u90fd\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u3002</p> <ul> <li>\u5173\u952e\u95ee\u9898</li> <li>\u5956\u52b1\u5206\u914d</li> <li>\u5ba2\u89c2\u8f66\u578b</li> <li>\u63a2\u7d22\u4e0e\u5229\u7528 \uff08\u6709\u7684\u65f6\u5019\u667a\u80fd\u4f53\u9700\u8981\u653e\u5f03\u4e00\u90e8\u5206\u5956\u52b1\u4ee5\u83b7\u53d6\u77e5\u8bc6\uff09</li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_14","title":"\u6839\u6e90","text":"<p>...</p>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_15","title":"\u901a\u5f80\u6df1\u5ea6\u5b66\u4e60\u4e4b\u8def","text":"<p>...</p>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_16","title":"\u6210\u529f\u6848\u4f8b","text":"<p>...</p>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_17","title":"\u6df1\u5ea6\u5b66\u4e60\u7684\u7279\u70b9","text":"<p>...</p>"},{"location":"zh/AI/NOTE-D2L/CH1-INTRO/ch1-intro/#_18","title":"\u5c0f\u7ed3","text":"<p>\u673a\u5668\u5b66\u4e60\u7814\u7a76\u8ba1\u7b97\u673a\u7cfb\u7edf\u5982\u4f55\u5229\u7528\u7ecf\u9a8c\uff08\u901a\u5e38\u662f\u6570\u636e\uff09\u6765\u63d0\u9ad8\u7279\u5b9a\u4efb\u52a1\u7684\u6027\u80fd\u3002\u5b83\u7ed3\u5408\u4e86\u7edf\u8ba1\u5b66\u3001\u6570\u636e\u6316\u6398\u548c\u4f18\u5316\u7684\u601d\u60f3\u3002\u901a\u5e38\uff0c\u5b83\u662f\u88ab\u7528\u4f5c\u5b9e\u73b0\u4eba\u5de5\u667a\u80fd\u89e3\u51b3\u65b9\u6848\u7684\u4e00\u79cd\u624b\u6bb5\u3002</p> <p>\u8868\u793a\u5b66\u4e60\u4f5c\u4e3a\u673a\u5668\u5b66\u4e60\u7684\u4e00\u7c7b\uff0c\u5176\u7814\u7a76\u7684\u91cd\u70b9\u662f\u5982\u4f55\u81ea\u52a8\u627e\u5230\u5408\u9002\u7684\u6570\u636e\u8868\u793a\u65b9\u5f0f\u3002\u6df1\u5ea6\u5b66\u4e60\u662f\u901a\u8fc7\u5b66\u4e60\u591a\u5c42\u6b21\u7684\u8f6c\u6362\u6765\u8fdb\u884c\u7684\u591a\u5c42\u6b21\u7684\u8868\u793a\u5b66\u4e60\u3002</p> <p>\u6df1\u5ea6\u5b66\u4e60\u4e0d\u4ec5\u53d6\u4ee3\u4e86\u4f20\u7edf\u673a\u5668\u5b66\u4e60\u7684\u6d45\u5c42\u6a21\u578b\uff0c\u800c\u4e14\u53d6\u4ee3\u4e86\u52b3\u52a8\u5bc6\u96c6\u578b\u7684\u7279\u5f81\u5de5\u7a0b\u3002</p> <p>\u6700\u8fd1\u5728\u6df1\u5ea6\u5b66\u4e60\u65b9\u9762\u53d6\u5f97\u7684\u8bb8\u591a\u8fdb\u5c55\uff0c\u5927\u90fd\u662f\u7531\u5ec9\u4ef7\u4f20\u611f\u5668\u548c\u4e92\u8054\u7f51\u89c4\u6a21\u5e94\u7528\u6240\u4ea7\u751f\u7684\u5927\u91cf\u6570\u636e\uff0c\u4ee5\u53ca\uff08\u901a\u8fc7GPU\uff09\u7b97\u529b\u7684\u7a81\u7834\u6765\u89e6\u53d1\u7684\u3002</p> <p>\u6574\u4e2a\u7cfb\u7edf\u4f18\u5316\u662f\u83b7\u5f97\u9ad8\u6027\u80fd\u7684\u5173\u952e\u73af\u8282\u3002\u6709\u6548\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u7684\u5f00\u6e90\u4f7f\u5f97\u8fd9\u4e00\u70b9\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/","title":"CH02 - \u9884\u5907\u77e5\u8bc6","text":"<p>\u8981\u5b66\u4e60\u6df1\u5ea6\u5b66\u4e60\uff0c\u9996\u5148\u9700\u8981\u5148\u638c\u63e1\u4e00\u4e9b\u57fa\u672c\u6280\u80fd\u3002 \u6240\u6709\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u90fd\u6d89\u53ca\u4ece\u6570\u636e\u4e2d\u63d0\u53d6\u4fe1\u606f\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5148\u5b66\u4e60\u4e00\u4e9b\u5173\u4e8e\u6570\u636e\u7684\u5b9e\u7528\u6280\u80fd\uff0c\u5305\u62ec\u5b58\u50a8\u3001\u64cd\u4f5c\u548c\u9884\u5904\u7406\u6570\u636e\u3002</p> <p>\u673a\u5668\u5b66\u4e60\u901a\u5e38\u9700\u8981\u5904\u7406\u5927\u578b\u6570\u636e\u96c6\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u67d0\u4e9b\u6570\u636e\u96c6\u89c6\u4e3a\u4e00\u4e2a\u8868\uff0c\u5176\u4e2d\u8868\u7684\u884c\u5bf9\u5e94\u6837\u672c\uff0c\u5217\u5bf9\u5e94\u5c5e\u6027\u3002 \u7ebf\u6027\u4ee3\u6570\u4e3a\u4eba\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7528\u6765\u5904\u7406\u8868\u683c\u6570\u636e\u7684\u65b9\u6cd5\u3002 \u6211\u4eec\u4e0d\u4f1a\u592a\u6df1\u7a76\u7ec6\u8282\uff0c\u800c\u662f\u5c06\u91cd\u70b9\u653e\u5728\u77e9\u9635\u8fd0\u7b97\u7684\u57fa\u672c\u539f\u7406\u53ca\u5176\u5b9e\u73b0\u4e0a\u3002</p> <p>\u6df1\u5ea6\u5b66\u4e60\u662f\u5173\u4e8e\u4f18\u5316\u7684\u5b66\u4e60\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u5e26\u6709\u53c2\u6570\u7684\u6a21\u578b\uff0c\u6211\u4eec\u60f3\u8981\u627e\u5230\u5176\u4e2d\u80fd\u62df\u5408\u6570\u636e\u7684\u6700\u597d\u6a21\u578b\u3002 \u5728\u7b97\u6cd5\u7684\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u51b3\u5b9a\u4ee5\u4f55\u79cd\u65b9\u5f0f\u8c03\u6574\u53c2\u6570\u9700\u8981\u4e00\u70b9\u5fae\u79ef\u5206\u77e5\u8bc6\u3002 \u672c\u7ae0\u5c06\u7b80\u8981\u4ecb\u7ecd\u8fd9\u4e9b\u77e5\u8bc6\u3002 \u5e78\u8fd0\u7684\u662f\uff0cautograd\u5305\u4f1a\u81ea\u52a8\u8ba1\u7b97\u5fae\u5206\uff0c\u672c\u7ae0\u4e5f\u5c06\u4ecb\u7ecd\u5b83\u3002</p> <p>\u673a\u5668\u5b66\u4e60\u8fd8\u6d89\u53ca\u5982\u4f55\u505a\u51fa\u9884\u6d4b\uff1a\u7ed9\u5b9a\u89c2\u5bdf\u5230\u7684\u4fe1\u606f\uff0c\u67d0\u4e9b\u672a\u77e5\u5c5e\u6027\u53ef\u80fd\u7684\u503c\u662f\u591a\u5c11\uff1f \u8981\u5728\u4e0d\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u4e25\u683c\u7684\u63a8\u65ad\uff0c\u6211\u4eec\u9700\u8981\u501f\u7528\u6982\u7387\u8bed\u8a00\u3002</p> <p>\u6700\u540e\uff0c\u5b98\u65b9\u6587\u6863\u63d0\u4f9b\u4e86\u672c\u4e66\u4e4b\u5916\u7684\u5927\u91cf\u63cf\u8ff0\u548c\u793a\u4f8b\u3002 \u5728\u672c\u7ae0\u7684\u7ed3\u5c3e\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5982\u4f55\u5728\u5b98\u65b9\u6587\u6863\u4e2d\u67e5\u627e\u6240\u9700\u4fe1\u606f\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#21","title":"2.1 \u6570\u636e\u64cd\u4f5c","text":""},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#211","title":"2.1.1 \u5165\u95e8","text":"<p>\u5bfc\u5165<code>torch</code>\u6216<code>tensorflow</code>\u5e93</p> PYTORCHTENSORFLOW <pre><code>import torch\n</code></pre> <pre><code>import tensorflow as tf\n</code></pre> <p>\u5f20\u91cf\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u53ef\u4ee5\u5177\u6709\u4efb\u610f\u6570\u91cf\u7684\u7ef4\u5ea6\u3002 \u4f8b\u5982\uff0c\u5411\u91cf\u662f\u4e00\u7ef4\u5f20\u91cf\uff0c\u77e9\u9635\u662f\u4e8c\u7ef4\u5f20\u91cf\u3002 \u5f20\u91cf\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5177\u6709\u76f8\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4e14\u5f20\u91cf\u7684\u5f62\u72b6\u7531\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u5927\u5c0f\u7ec4\u6210\u3002</p> PYTORCHTENSORFLOW <pre><code>x = torch.arange(12)\nx\n</code></pre> <pre><code>tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11])\n</code></pre> <pre><code>x = tf.range(12)\nx\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(12,), dtype=int32, numpy=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11], dtype=int32)&gt;\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u67e5\u770b\u5f20\u91cf\u7684\u5f62\u72b6\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5176<code>shape</code>\u5c5e\u6027\u3002</p> PYTORCHTENSORFLOW <pre><code>x.shape\n</code></pre> <pre><code>torch.Size([12])\n</code></pre> <pre><code>x.shape\n</code></pre> <pre><code>TensorShape([12])\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u67e5\u770b\u5f20\u91cf\u4e2d\u5143\u7d20\u7684\u603b\u6570\uff0c\u53ef\u4ee5\u8c03\u7528<code>numel</code>\u51fd\u6570\u6216\u8005<code>size</code>\u5c5e\u6027\u3002</p> PYTORCHTENSORFLOW <pre><code>x.numel()\n</code></pre> <pre><code>12\n</code></pre> <pre><code>tf.size(x)\n</code></pre> <pre><code>12\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u6539\u53d8\u5f20\u91cf\u5f62\u72b6\uff0c\u800c\u4e0d\u6539\u53d8\u5143\u7d20\u6570\u91cf\u548c\u5143\u7d20\u503c\uff0c\u53ef\u4ee5\u8c03\u7528<code>reshape</code>\u51fd\u6570\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5f20\u91cf<code>x</code>\u4ece\u5f62\u72b6\u4e3a(12,)\u7684\u4e00\u7ef4\u5f20\u91cf\u8f6c\u6362\u4e3a\u5f62\u72b6\u4e3a(3,4)\u7684\u4e8c\u7ef4\u5f20\u91cf\u3002</p> PYTORCHTENSORFLOW <pre><code>x.reshape(3, 4)\n</code></pre> <pre><code>tensor([[ 0,  1,  2,  3],\n        [ 4,  5,  6,  7],\n        [ 8,  9, 10, 11]])\n</code></pre> <pre><code>tf.reshape(x, (3, 4))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=int32, numpy=\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11]], dtype=int32)&gt;\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u53ea\u77e5\u9053\u60f3\u8981\u5f20\u91cf\u5177\u6709\u591a\u5c11\u5217\uff0c\u800c\u4e0d\u77e5\u9053\u60f3\u8981\u5f20\u91cf\u5177\u6709\u591a\u5c11\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528-1\u6307\u5b9a\uff0c\u8ba9\u7cfb\u7edf\u81ea\u52a8\u63a8\u65ad\u51fa\u6b64\u503c\u3002 \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7531\u4e8e\u5f20\u91cf<code>x</code>\u5305\u542b12\u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528<code>x.reshape(-1, 4)</code>\u6216<code>x.reshape(3, -1)</code>\u6765\u91cd\u5851\u5f20\u91cf<code>x</code>\u4e3a\u5f62\u72b6\u4e3a(3,4)\u6216(4,3)\u7684\u5f20\u91cf\u3002</p> PYTORCHTENSORFLOW <pre><code>x.reshape(-1, 4)\n</code></pre> <pre><code>tensor([[ 0,  1,  2,  3],\n        [ 4,  5,  6,  7],\n        [ 8,  9, 10, 11]])\n</code></pre> <pre><code>tf.reshape(x, (3, -1))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=int32, numpy=\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11]], dtype=int32)&gt;\n</code></pre> <p>\u6709\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u51680\u3001\u51681\u3001\u5176\u4ed6\u5e38\u91cf\u6216\u8005\u4ece\u7279\u5b9a\u5206\u5e03\u4e2d\u968f\u673a\u91c7\u6837\u7684\u6570\u5b57\u5f20\u91cf\u6765\u521d\u59cb\u5316\u5f20\u91cf\u3002 \u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5f62\u72b6\u4e3a(2,3,4)\u7684\u5f20\u91cf\uff0c\u5176\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u8bbe\u7f6e\u4e3a0\u3002</p> PYTORCHTENSORFLOW <pre><code>torch.zeros((2, 3, 4))\n</code></pre> <pre><code>tensor([[[0., 0., 0., 0.],\n         [0., 0., 0., 0.],\n         [0., 0., 0., 0.]],\n\n        [[0., 0., 0., 0.],\n         [0., 0., 0., 0.],\n         [0., 0., 0., 0.]]])\n</code></pre> <pre><code>tf.zeros((2, 3, 4))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(2, 3, 4), dtype=float32, numpy=\narray([[[0., 0., 0., 0.],\n        [0., 0., 0., 0.],\n        [0., 0., 0., 0.]],\n\n       [[0., 0., 0., 0.],\n        [0., 0., 0., 0.],\n        [0., 0., 0., 0.]]], dtype=float32)&gt;\n</code></pre> <p>\u540c\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5f62\u72b6\u4e3a(2,3,4)\u7684\u5f20\u91cf\uff0c\u5176\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u8bbe\u7f6e\u4e3a1\u3002</p> PYTORCHTENSORFLOW <pre><code>torch.ones((2, 3, 4))\n</code></pre> <pre><code>tensor([[[1., 1., 1., 1.],\n         [1., 1., 1., 1.],\n         [1., 1., 1., 1.]],\n\n        [[1., 1., 1., 1.],\n         [1., 1., 1., 1.],\n         [1., 1., 1., 1.]]])\n</code></pre> <pre><code>tf.ones((2, 3, 4))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(2, 3, 4), dtype=float32, numpy=\narray([[[1., 1., 1., 1.],\n        [1., 1., 1., 1.],\n        [1., 1., 1., 1.]],\n\n       [[1., 1., 1., 1.],\n        [1., 1., 1., 1.],\n        [1., 1., 1., 1.]]], dtype=float32)&gt;\n</code></pre> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7Python\u7684\u5217\u8868\uff08\u6216\u5d4c\u5957\u5217\u8868\uff09\u6307\u5b9a\u9700\u8981\u521b\u5efa\u7684\u5f20\u91cf\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u3002</p> PYTORCHTENSORFLOW <pre><code>torch.tensor([[2, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\n</code></pre> <pre><code>tensor([[2, 1, 4, 3],\n        [1, 2, 3, 4],\n        [4, 3, 2, 1]])\n</code></pre> <pre><code>tf.constant([[2, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=int32, numpy=\narray([[2, 1, 4, 3],\n       [1, 2, 3, 4],\n       [4, 3, 2, 1]], dtype=int32)&gt;\n</code></pre> <p>\u901a\u5e38\uff0c\u6211\u4eec\u5e0c\u671b\u4ece\u67d0\u4e2a\u6982\u7387\u5206\u5e03\u4e2d\u968f\u673a\u91c7\u6837\u4e00\u4e9b\u503c\uff0c\u4f8b\u5982\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u6b63\u6001\u5206\u5e03\u3002 \u5728\u672c\u4e66\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u6df1\u5165\u4e86\u89e3\u6982\u7387\u548c\u7edf\u8ba1\u77e5\u8bc6\u3002 \u6709\u5173\u8fd9\u4e9b\u4e3b\u9898\u7684\u4f18\u79c0\u4e66\u7c4d\u5305\u62ec\u6982\u7387\u5bfc\u8bba [@blitzstein2014introduction] \u548c\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5 [@lihang2012statistical]\u3002 \u4e3a\u4e86\u751f\u6210\u5177\u6709\u5f62\u72b6\u4e3a(3,4)\u7684\u5f20\u91cf\u3002 \u5176\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5c06\u968f\u673a\u91c7\u6837\u4e8e\u5747\u503c\u4e3a0\u3001\u6807\u51c6\u5dee\u4e3a1\u7684\u6b63\u6001\u5206\u5e03\u3002</p> PYTORCHTENSORFLOW <pre><code>torch.randn(3, 4)\n</code></pre> <pre><code>tensor([[ 0.1835,  0.7694, -0.4696,  0.5421],\n        [-0.4637, -0.0328,  0.2369, -0.4107],\n        [-0.9880, -0.5176, -0.1713, -0.2025]])\n</code></pre> <pre><code>tf.random.normal((3, 4))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=float32, numpy=\narray([[ 0.1835,  0.7694, -0.4696,  0.5421],\n       [-0.4637, -0.0328,  0.2369, -0.4107],\n       [-0.9880, -0.5176, -0.1713, -0.2025]], dtype=float32)&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#212","title":"2.1.2 \u8fd0\u7b97\u7b26","text":"<p>\u5f20\u91cf\u652f\u6301\u5927\u91cf\u7684\u8fd0\u7b97\u7b26\uff08\u64cd\u4f5c\u7b26\uff09\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e24\u4e2a\u5f20\u91cf\u6309\u5143\u7d20\u76f8\u52a0\u3002 \u7ed9\u5b9a\u5f20\u91cf<code>X</code>\u548c<code>Y</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>X + Y</code>\u6765\u5b9e\u73b0\u6309\u5143\u7d20\u52a0\u6cd5\u3002 \u5bf9\u4e8e\u6309\u5143\u7d20\u4e58\u6cd5\u3001\u6309\u5143\u7d20\u9664\u6cd5\u548c\u6309\u5143\u7d20\u6307\u6570\u8fd0\u7b97\uff0c\u6211\u4eec\u5206\u522b\u53ef\u4ee5\u4f7f\u7528<code>X * Y</code>\u3001<code>X / Y</code>\u548c<code>X**Y</code>\u3002 \u7b26\u53f7<code>**</code>\u4ee3\u8868\u6309\u5143\u7d20\u4e58\u65b9\u8fd0\u7b97\u3002\u5bf9\u4e8e\u4efb\u610f\u5177\u6709\u76f8\u540c\u5f62\u72b6\u7684\u5f20\u91cf\uff0c \u5e38\u89c1\u7684\u6807\u51c6\u7b97\u672f\u8fd0\u7b97\u7b26\uff08+\u3001-\u3001\u3001/\u548c*\uff09\u90fd\u53ef\u4ee5\u88ab\u5347\u7ea7\u4e3a\u6309\u5143\u7d20\u8fd0\u7b97\u3002 \u6211\u4eec\u53ef\u4ee5\u5728\u540c\u4e00\u5f62\u72b6\u7684\u4efb\u610f\u4e24\u4e2a\u5f20\u91cf\u4e0a\u8c03\u7528\u6309\u5143\u7d20\u64cd\u4f5c\u3002 \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9017\u53f7\u6765\u8868\u793a\u4e00\u4e2a\u5177\u67095\u4e2a\u5143\u7d20\u7684\u5143\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u6309\u5143\u7d20\u64cd\u4f5c\u7684\u7ed3\u679c\u3002</p> PYTORCHTENSORFLOW <pre><code>x = torch.tensor([1.0, 2, 4, 8])\ny = torch.tensor([2, 2, 2, 2])\nx + y, x - y, x * y, x / y, x ** y\n</code></pre> <pre><code>(tensor([ 3.,  4.,  6., 10.]),\n tensor([-1.,  0.,  2.,  6.]),\n tensor([ 2.,  4.,  8., 16.]),\n tensor([0.5000, 1.0000, 2.0000, 4.0000]),\n tensor([ 1.,  4., 16., 64.]))\n</code></pre> <pre><code>x = tf.constant([1.0, 2, 4, 8])\ny = tf.constant([2, 2, 2, 2])\nx + y, x - y, x * y, x / y, x ** y\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 3.,  4.,  6., 10.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([-1.,  0.,  2.,  6.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 2.,  4.,  8., 16.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.5, 1. , 2. , 4. ], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 1.,  4., 16., 64.], dtype=float32)&gt;)\n</code></pre> <p>\u201c\u6309\u5143\u7d20\u201d\u65b9\u5f0f\u53ef\u4ee5\u5e94\u7528\u66f4\u591a\u7684\u8ba1\u7b97\uff0c\u5305\u62ec\u50cf\u6c42\u5e42\u8fd9\u6837\u7684\u4e00\u5143\u8fd0\u7b97\u7b26\u3002</p> PYTORCHTENSORFLOW <pre><code>torch.exp(x)\n</code></pre> <pre><code>tensor([  2.7183,   7.3891,  54.5981, 298.8674])\n</code></pre> <pre><code>tf.exp(x)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([  2.7183,   7.3891,  54.5981, 298.8674], dtype=float32)&gt;\n</code></pre> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u591a\u4e2a\u5f20\u91cf\u8fde\u7ed3\uff08concatenate\uff09\u5728\u4e00\u8d77\uff0c \u628a\u5b83\u4eec\u7aef\u5bf9\u7aef\u5730\u53e0\u8d77\u6765\u5f62\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u5f20\u91cf\u3002 \u6211\u4eec\u53ea\u9700\u8981\u63d0\u4f9b\u5f20\u91cf\u5217\u8868\uff0c\u5e76\u7ed9\u51fa\u6cbf\u54ea\u4e2a\u8f74\u8fde\u7ed3\u3002</p> PYTORCHTENSORFLOW <pre><code>X = torch.arange(12, dtype=torch.float32).reshape((3, 4))\nY = torch.tensor([[2.0, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\ntorch.cat((X, Y), dim=0), torch.cat((X, Y), dim=1)\n</code></pre> <pre><code>(tensor([[ 0.,  1.,  2.,  3.],\n         [ 4.,  5.,  6.,  7.],\n         [ 8.,  9., 10., 11.],\n         [ 2.,  1.,  4.,  3.],\n         [ 1.,  2.,  3.,  4.],\n         [ 4.,  3.,  2.,  1.]]),\n tensor([[ 0.,  1.,  2.,  3.,  2.,  1.,  4.,  3.],\n         [ 4.,  5.,  6.,  7.,  1.,  2.,  3.,  4.],\n         [ 8.,  9., 10., 11.,  4.,  3.,  2.,  1.]]))\n</code></pre> <pre><code>X = tf.reshape(tf.range(12, dtype=tf.float32), (3, 4))\nY = tf.constant([[2.0, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\ntf.concat((X, Y), axis=0), tf.concat((X, Y), axis=1)\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(6, 4), dtype=float32, numpy=\narray([[ 0.,  1.,  2.,  3.],\n       [ 4.,  5.,  6.,  7.],\n       [ 8.,  9., 10., 11.],\n       [ 2.,  1.,  4.,  3.],\n       [ 1.,  2.,  3.,  4.],\n       [ 4.,  3.,  2.,  1.]], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(3, 8), dtype=float32, numpy=\narray([[ 0.,  1.,  2.,  3.,  2.,  1.,  4.,  3.],\n       [ 4.,  5.,  6.,  7.,  1.,  2.,  3.,  4.],\n       [ 8.,  9., 10., 11.,  4.,  3.,  2.,  1.]], dtype=float32)&gt;)\n</code></pre> <p>\u6709\u65f6\uff0c\u6211\u4eec\u60f3\u901a\u8fc7\u903b\u8f91\u8fd0\u7b97\u7b26\u6784\u5efa\u4e8c\u5143\u5f20\u91cf\u3002</p> PYTORCHTENSORFLOW <pre><code>X == Y\n</code></pre> <pre><code>tensor([[False,  True, False,  True],\n        [False, False, False, False],\n        [False, False, False, False]])\n</code></pre> <pre><code>X == Y\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=bool, numpy=\narray([[False,  True, False,  True],\n       [False, False, False, False],\n       [False, False, False, False]])&gt;\n</code></pre> <p>\u5bf9\u5f20\u91cf\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u6c42\u548c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u5f20\u91cf\u3002</p> PYTORCHTENSORFLOW <pre><code>X.sum()\n</code></pre> <pre><code>tensor(66.)\n</code></pre> <pre><code>tf.reduce_sum(X)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=66.0&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#213","title":"2.1.3 \u5e7f\u64ad\u673a\u5236","text":"<p>\u5728\u4e0a\u9762\u7684\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4e86\u5982\u4f55\u5728\u76f8\u540c\u5f62\u72b6\u7684\u4e24\u4e2a\u5f20\u91cf\u4e0a\u6267\u884c\u6309\u5143\u7d20\u64cd\u4f5c\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u4e0d\u540c\u5f62\u72b6\u7684\u5f20\u91cf\u4e0a\u6267\u884c\u6309\u5143\u7d20\u64cd\u4f5c\u3002 \u5f53\u4e24\u4e2a\u5f20\u91cf\u7684\u5f62\u72b6\u4e0d\u540c\u65f6\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u5e7f\u64ad\u673a\u5236\uff08broadcasting mechanism\uff09\u6765\u6267\u884c\u6309\u5143\u7d20\u64cd\u4f5c\u3002 \u8fd9\u4e2a\u673a\u5236\u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1a \u9996\u5148\uff0c\u901a\u8fc7\u9002\u5f53\u590d\u5236\u5143\u7d20\u6765\u6269\u5c55\u4e00\u4e2a\u6216\u4e24\u4e2a\u6570\u7ec4\uff0c\u4ee5\u4fbf\u5728\u8f6c\u6362\u4e4b\u540e\uff0c\u4e24\u4e2a\u5f20\u91cf\u5177\u6709\u76f8\u540c\u7684\u5f62\u72b6\u3002 \u5176\u6b21\uff0c\u5bf9\u751f\u6210\u7684\u6570\u7ec4\u6267\u884c\u6309\u5143\u7d20\u64cd\u4f5c\u3002</p> <p>\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u6cbf\u7740\u6570\u7ec4\u4e2d\u957f\u5ea6\u4e3a1\u7684\u8f74\u8fdb\u884c\u5e7f\u64ad\uff0c\u5982\u4e0b\u4f8b\u6240\u793a\u3002</p> PYTORCHTENSORFLOW <pre><code>a = torch.arange(3).reshape((3, 1))\nb = torch.arange(2).reshape((1, 2))\na, b\n</code></pre> <pre><code>(tensor([[0],\n         [1],\n         [2]]),\n tensor([[0, 1]]))\n</code></pre> <pre><code>a = tf.reshape(tf.range(3), (3, 1))\nb = tf.reshape(tf.range(2), (1, 2))\na, b\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(3, 1), dtype=int32, numpy=\narray([[0],\n       [1],\n       [2]], dtype=int32)&gt;,\n &lt;tf.Tensor: shape=(1, 2), dtype=int32, numpy=array([[0, 1]], dtype=int32)&gt;)\n</code></pre> <p>\u7531\u4e8e<code>a</code>\u548c<code>b</code>\u5206\u522b\u662f3\u884c1\u5217\u548c1\u884c2\u5217\u7684\u77e9\u9635\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u5c06\u5b83\u4eec\u76f8\u52a0\uff0c\u90a3\u4e48<code>a</code>\u4e2d\u7b2c\u4e00\u5217\u76843\u4e2a\u5143\u7d20\u88ab\u5e7f\u64ad\uff08\u590d\u5236\uff09\u5230\u4e86\u7b2c\u4e8c\u5217\uff0c\u800c<code>b</code>\u4e2d\u7b2c\u4e00\u884c\u76842\u4e2a\u5143\u7d20\u88ab\u5e7f\u64ad\uff08\u590d\u5236\uff09\u5230\u4e86\u7b2c\u4e8c\u884c\u548c\u7b2c\u4e09\u884c\u3002 \u5982\u6b64\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e24\u4e2a3\u884c2\u5217\u7684\u77e9\u9635\u6309\u5143\u7d20\u76f8\u52a0\u3002</p> PYTORCHTENSORFLOW <pre><code>a + b\n</code></pre> <pre><code>tensor([[0, 1],\n        [1, 2],\n        [2, 3]])\n</code></pre> <pre><code>a + b\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 2), dtype=int32, numpy=\narray([[0, 1],\n       [1, 2],\n       [2, 3]], dtype=int32)&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#214","title":"2.1.4 \u7d22\u5f15\u548c\u5207\u7247","text":"<p>\u5c31\u50cf\u5728\u4efb\u4f55\u5176\u4ed6Python\u6570\u7ec4\u4e2d\u4e00\u6837\uff0c\u5f20\u91cf\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\u3002 \u4e0e\u4efb\u4f55Python\u6570\u7ec4\u4e00\u6837\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u662f0\uff0c\u800c\u4e0d\u662f1\u3002 \u4e0e\u6807\u51c6Python\u5217\u8868\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u65b9\u62ec\u53f7\uff08[]\uff09\u6765\u8bbf\u95ee\u548c\u5206\u914d\u5f20\u91cf\u4e2d\u7684\u5143\u7d20\u3002</p> PYTORCHTENSORFLOW <pre><code>X[-1], X[1:3]\n</code></pre> <pre><code>(tensor([ 8.,  9., 10., 11.]), tensor([[ 4.,  5.,  6.,  7.],\n         [ 8.,  9., 10., 11.]]))\n</code></pre> <pre><code>X[-1], X[1:3]\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 8.,  9., 10., 11.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(2, 4), dtype=float32, numpy=\narray([[ 4.,  5.,  6.,  7.],\n       [ 8.,  9., 10., 11.]], dtype=float32)&gt;)\n</code></pre> <p>\u9664\u8bfb\u53d6\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u7d22\u5f15\u6765\u5c06\u5143\u7d20\u5199\u5165\u77e9\u9635\u3002</p> PYTORCHTENSORFLOW <pre><code>X[1, 2] = 9\nX\n</code></pre> <pre><code>tensor([[ 0.,  1.,  2.,  3.],\n        [ 4.,  5.,  9.,  7.],\n        [ 8.,  9., 10., 11.]])\n</code></pre> <pre><code>X[1, 2].assign(9)\nX\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=float32, numpy=\narray([[ 0.,  1.,  2.,  3.],\n       [ 4.,  5.,  9.,  7.],\n       [ 8.,  9., 10., 11.]], dtype=float32)&gt;\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u60f3\u4e3a\u591a\u4e2a\u5143\u7d20\u8d4b\u503c\u76f8\u540c\u7684\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7d22\u5f15\u6240\u6709\u5143\u7d20\uff0c\u7136\u540e\u4e3a\u5b83\u4eec\u8d4b\u503c\u3002 \u4f8b\u5982\uff0c<code>[0:2, :]</code>\u8bbf\u95ee\u7b2c1\u884c\u548c\u7b2c2\u884c\uff0c\u5176\u4e2d\u201c:\u201d\u4ee3\u8868\u6cbf\u8f740\uff08\u884c\uff09\u7684\u6240\u6709\u5143\u7d20\u3002 \u867d\u7136\u6211\u4eec\u8ba8\u8bba\u7684\u662f\u77e9\u9635\u7684\u7d22\u5f15\uff0c\u4f46\u8fd9\u4e5f\u9002\u7528\u4e8e\u5411\u91cf\u548c\u8d85\u8fc72\u4e2a\u7ef4\u5ea6\u7684\u5f20\u91cf\u3002</p> PYTORCHTENSORFLOW <pre><code>X[0:2, :] = 12\nX\n</code></pre> <pre><code>tensor([[12., 12., 12., 12.],\n        [12., 12., 12., 12.],\n        [ 8.,  9., 10., 11.]])\n</code></pre> <pre><code>X[0:2, :].assign(12)\nX\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(3, 4), dtype=float32, numpy=\narray([[12., 12., 12., 12.],\n       [12., 12., 12., 12.],\n       [ 8.,  9., 10., 11.]], dtype=float32)&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#215","title":"2.1.5 \u8282\u7701\u5185\u5b58","text":"<p>\u8fd0\u884c\u4e00\u4e9b\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e3a\u65b0\u7ed3\u679c\u5206\u914d\u5185\u5b58\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u7528<code>Y = X + Y</code>\uff0c\u6211\u4eec\u4f1a\u5c06<code>Y</code>\u6307\u5411\u65b0\u521b\u5efa\u7684\u5185\u5b58\uff0c\u800c\u4e0d\u662f\u5c06<code>Y</code>\u6307\u5411<code>X</code>\u7684\u539f\u59cb\u4f4d\u7f6e\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Python\u7684<code>id</code>\u51fd\u6570\u6765\u9a8c\u8bc1\u8fd9\u4e00\u70b9\uff0c\u8fd9\u4e2a\u51fd\u6570\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5185\u5b58\u4e2d\u5f15\u7528\u5bf9\u8c61\u7684\u786e\u5207\u5730\u5740\u3002 \u8fd0\u884c<code>Y = Y + X</code>\u540e\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0<code>id(Y)</code>\u6307\u5411\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u3002 \u8fd9\u662f\u56e0\u4e3aPython\u9996\u5148\u8ba1\u7b97<code>Y + X</code>\uff0c\u4e3a\u7ed3\u679c\u5206\u914d\u65b0\u7684\u5185\u5b58\uff0c\u7136\u540e\u4f7f<code>Y</code>\u6307\u5411\u5185\u5b58\u4e2d\u7684\u8fd9\u4e2a\u65b0\u4f4d\u7f6e\u3002</p> PYTORCHTENSORFLOW <pre><code>before = id(Y)\nY = Y + X\nid(Y) == before\n</code></pre> <pre><code>False\n</code></pre> <pre><code>before = id(Y)\nY = Y + X\nid(Y) == before\n</code></pre> <pre><code>False\n</code></pre> <p>\u8fd9\u53ef\u80fd\u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u539f\u56e0\u6709\u4e24\u4e2a\uff1a</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u4e0d\u60f3\u603b\u662f\u4e0d\u5fc5\u8981\u5730\u5206\u914d\u5185\u5b58\u3002\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u6709\u6570\u767e\u5146\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u5728\u4e00\u79d2\u5185\u591a\u6b21\u66f4\u65b0\u6240\u6709\u53c2\u6570\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u539f\u5730\u6267\u884c\u8fd9\u4e9b\u66f4\u65b0\uff1b</p> <p>\u5982\u679c\u6211\u4eec\u4e0d\u539f\u5730\u66f4\u65b0\uff0c\u5176\u4ed6\u5f15\u7528\u4ecd\u7136\u4f1a\u6307\u5411\u65e7\u7684\u5185\u5b58\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u67d0\u4e9b\u4ee3\u7801\u53ef\u80fd\u4f1a\u65e0\u610f\u4e2d\u5f15\u7528\u65e7\u7684\u53c2\u6570\u3002</p> <p>\u5e78\u8fd0\u7684\u662f\uff0c(\u6267\u884c\u539f\u5730\u64cd\u4f5c)\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5207\u7247\u8868\u793a\u6cd5\u5c06\u64cd\u4f5c\u7684\u7ed3\u679c\u5206\u914d\u7ed9\u5148\u524d\u5206\u914d\u7ed9\u7ed3\u679c\u7684\u6570\u7ec4\uff0c\u4f8b\u5982<code>Y[:] = &lt;expression&gt;</code>\u3002\u4e3a\u4e86\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u77e9\u9635<code>Z</code>\uff0c\u5176\u5f62\u72b6\u4e0e\u53e6\u4e00\u4e2a<code>Y</code>\u76f8\u540c\uff0c\u4f7f\u7528<code>zeros_like</code>\u6765\u5206\u914d\u4e00\u4e2a\u51680\u7684\u5757\u3002</p> PYTORCHTENSORFLOW <pre><code>Z = torch.zeros_like(Y)\nprint('id(Z):', id(Z))\nZ[:] = X + Y\nprint('id(Z):', id(Z))\n</code></pre> <pre><code>id(Z): 140703086993984\nid(Z): 140703086993984\n</code></pre> <pre><code>Z = tf.zeros_like(Y)\nprint('id(Z):', id(Z))\nZ[:] = X + Y\nprint('id(Z):', id(Z))\n</code></pre> <pre><code>id(Z): 140703086993984\nid(Z): 140703086993984\n</code></pre> <p>\u73b0\u5728\uff0c\u6211\u4eec\u7528<code>X + Y</code>\u66ff\u6362<code>Y</code>\u3002\u6211\u4eec\u4f7f\u7528<code>[:]</code>\u6765\u6307\u5b9a\u6211\u4eec\u60f3\u8981\u7528\u5206\u914d\u7ed9<code>X + Y</code>\u7684\u7ed3\u679c\u6765\u66f4\u65b0<code>Y</code>\u4e2d\u7684\u503c\u3002</p> PYTORCHTENSORFLOW <pre><code>before = id(Y)\nY[:] = X + Y\nid(Y) == before\n</code></pre> <pre><code>True\n</code></pre> <pre><code>before = id(Y)\nY[:] = X + Y\nid(Y) == before\n</code></pre> <pre><code>True\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#216-python","title":"2.1.6 \u8f6c\u6362\u4e3a\u5176\u4ed6 Python \u5bf9\u8c61","text":"<p>\u5c06\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5b9a\u4e49\u7684\u5f20\u91cf\u8f6c\u6362\u4e3aNumPy\u5f20\u91cf\uff08ndarray\uff09\u5f88\u5bb9\u6613\uff0c\u53cd\u4e4b\u4e5f\u540c\u6837\u5bb9\u6613\u3002 \u8f6c\u6362\u540e\u7684\u7ed3\u679c\u4e0d\u5171\u4eab\u5185\u5b58\u3002 \u8fd9\u4e2a\u5c0f\u7684\u4e0d\u4fbf\u5b9e\u9645\u4e0a\u662f\u975e\u5e38\u91cd\u8981\u7684\uff1a\u5f53\u5728CPU\u6216GPU\u4e0a\u6267\u884c\u64cd\u4f5c\u7684\u65f6\u5019\uff0c \u5982\u679cPython\u7684NumPy\u5305\u4e5f\u5e0c\u671b\u4f7f\u7528\u76f8\u540c\u7684\u5185\u5b58\u5757\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\uff0c\u4eba\u4eec\u4e0d\u5e0c\u671b\u505c\u4e0b\u8ba1\u7b97\u6765\u7b49\u5b83\u3002</p> PYTORCHTENSORFLOW <pre><code>A = X.numpy()\nB = torch.tensor(A)\ntype(A), type(B)\n</code></pre> <pre><code>(numpy.ndarray, torch.Tensor)\n</code></pre> <pre><code>A = X.numpy()\nB = tf.convert_to_tensor(A)\ntype(A), type(B)\n</code></pre> <pre><code>(numpy.ndarray, tensorflow.python.framework.ops.EagerTensor)\n</code></pre> <p>\u8981(\u5c06\u5927\u5c0f\u4e3a1\u7684\u5f20\u91cf\u8f6c\u6362\u4e3aPython\u6807\u91cf)\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528<code>item</code>\u51fd\u6570\u6216Python\u7684\u5185\u7f6e\u51fd\u6570\u3002</p> PYTORCHTENSORFLOW <pre><code>a = torch.tensor([3.5])\na, a.item(), float(a), int(a)\n</code></pre> <pre><code>(tensor([3.5000]), 3.5, 3.5, 3)\n</code></pre> <pre><code>a = tf.constant([3.5])\na, a.numpy(), float(a), int(a)\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(1,), dtype=float32, numpy=array([3.5], dtype=float32)&gt;,\n array([3.5], dtype=float32),\n 3.5,\n 3)\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#217","title":"2.1.7 \u5c0f\u7ed3","text":"<p>\u6df1\u5ea6\u5b66\u4e60\u5b58\u50a8\u548c\u64cd\u4f5c\u6570\u636e\u7684\u4e3b\u8981\u63a5\u53e3\u662f\u5f20\u91cf\uff08n\u7ef4\u6570\u7ec4\uff09\u3002\u5b83\u63d0\u4f9b\u4e86\u5404\u79cd\u529f\u80fd\uff0c\u5305\u62ec\u57fa\u672c\u6570\u5b66\u8fd0\u7b97\u3001\u5e7f\u64ad\u3001\u7d22\u5f15\u3001\u5207\u7247\u3001\u5185\u5b58\u8282\u7701\u548c\u8f6c\u6362\u5176\u4ed6Python\u5bf9\u8c61\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#22","title":"2.2 \u6570\u636e\u9884\u5904\u7406","text":"<p>\u4e3a\u4e86\u80fd\u7528\u6df1\u5ea6\u5b66\u4e60\u6765\u89e3\u51b3\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\uff0c\u6211\u4eec\u7ecf\u5e38\u4ece\u9884\u5904\u7406\u539f\u59cb\u6570\u636e\u5f00\u59cb\uff0c \u800c\u4e0d\u662f\u4ece\u90a3\u4e9b\u51c6\u5907\u597d\u7684\u5f20\u91cf\u683c\u5f0f\u6570\u636e\u5f00\u59cb\u3002 \u5728Python\u4e2d\u5e38\u7528\u7684\u6570\u636e\u5206\u6790\u5de5\u5177\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528pandas\u8f6f\u4ef6\u5305\u3002 \u50cf\u5e9e\u5927\u7684Python\u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u8bb8\u591a\u5176\u4ed6\u6269\u5c55\u5305\u4e00\u6837\uff0cpandas\u53ef\u4ee5\u4e0e\u5f20\u91cf\u517c\u5bb9\u3002 \u672c\u8282\u6211\u4eec\u5c06\u7b80\u8981\u4ecb\u7ecd\u4f7f\u7528pandas\u9884\u5904\u7406\u539f\u59cb\u6570\u636e\uff0c\u5e76\u5c06\u539f\u59cb\u6570\u636e\u8f6c\u6362\u4e3a\u5f20\u91cf\u683c\u5f0f\u7684\u6b65\u9aa4\u3002 \u540e\u9762\u7684\u7ae0\u8282\u5c06\u4ecb\u7ecd\u66f4\u591a\u7684\u6570\u636e\u9884\u5904\u7406\u6280\u672f\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#221","title":"2.2.1 \u8bfb\u53d6\u6570\u636e\u96c6","text":"<p>\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u4eba\u5de5\u6570\u636e\u96c6\uff0c\u5e76\u5b58\u50a8\u5728CSV\uff08\u9017\u53f7\u5206\u9694\u503c\uff09\u6587\u4ef6 ../data/house_tiny.csv\u4e2d\u3002 \u4ee5\u5176\u4ed6\u683c\u5f0f\u5b58\u50a8\u7684\u6570\u636e\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u7684\u65b9\u5f0f\u8fdb\u884c\u5904\u7406\u3002 \u4e0b\u9762\u6211\u4eec\u5c06\u6570\u636e\u96c6\u6309\u884c\u5199\u5165CSV\u6587\u4ef6\u4e2d\u3002</p> <p><pre><code>import os\n\nos.makedirs(os.path.join('..', 'data'), exist_ok=True)\ndata_file = os.path.join('..', 'data', 'house_tiny.csv')\nwith open(data_file, 'w') as f:\n    f.write('NumRooms,Alley,Price\\n')  # \u5217\u540d\n    f.write('NA,Pave,127500\\n')  # \u6bcf\u884c\u8868\u793a\u4e00\u4e2a\u6570\u636e\u6837\u672c\n    f.write('2,NA,106000\\n')\n    f.write('4,NA,178100\\n')\n    f.write('NA,NA,140000\\n')\n</code></pre> \u8981\u4ece\u521b\u5efa\u7684CSV\u6587\u4ef6\u4e2d\u52a0\u8f7d\u539f\u59cb\u6570\u636e\u96c6\uff0c\u6211\u4eec\u5bfc\u5165pandas\u5305\u5e76\u8c03\u7528read_csv\u51fd\u6570\u3002\u8be5\u6570\u636e\u96c6\u6709\u56db\u884c\u4e09\u5217\u3002\u5176\u4e2d\u6bcf\u884c\u63cf\u8ff0\u4e86\u623f\u95f4\u6570\u91cf\uff08\u201cNumRooms\u201d\uff09\u3001\u5df7\u5b50\u7c7b\u578b\uff08\u201cAlley\u201d\uff09\u548c\u623f\u5c4b\u4ef7\u683c\uff08\u201cPrice\u201d\uff09\u3002</p> PYTORCHTENSORFLOW <pre><code>!pip install pandas\nimport pandas as pd\ndata = pd.read_csv(data_file)\ndata\n</code></pre> <pre><code>   NumRooms Alley   Price\n0       NaN  Pave  127500\n1       2.0   NaN  106000\n2       4.0   NaN  178100\n3       NaN   NaN  140000\n</code></pre> <pre><code>!pip install pandas\nimport pandas as pd\ndata = pd.read_csv(data_file)\ndata\n</code></pre> <pre><code>   NumRooms Alley   Price\n0       NaN  Pave  127500\n1       2.0   NaN  106000\n2       4.0   NaN  178100\n3       NaN   NaN  140000\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#222","title":"2.2.2 \u5904\u7406\u7f3a\u5931\u503c","text":"<p>\u6ce8\u610f\uff0c\u201cNaN\u201d\u9879\u4ee3\u8868\u7f3a\u5931\u503c\u3002 \u4e3a\u4e86\u5904\u7406\u7f3a\u5931\u7684\u6570\u636e\uff0c\u5178\u578b\u7684\u65b9\u6cd5\u5305\u62ec\u63d2\u503c\u6cd5\u548c\u5220\u9664\u6cd5\uff0c \u5176\u4e2d\u63d2\u503c\u6cd5\u7528\u4e00\u4e2a\u66ff\u4ee3\u503c\u5f25\u8865\u7f3a\u5931\u503c\uff0c\u800c\u5220\u9664\u6cd5\u5219\u76f4\u63a5\u5ffd\u7565\u7f3a\u5931\u503c\u3002 \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u8003\u8651\u63d2\u503c\u6cd5\u3002</p> <p>\u901a\u8fc7\u4f4d\u7f6e\u7d22\u5f15iloc\uff0c\u6211\u4eec\u5c06data\u5206\u6210inputs\u548coutputs\uff0c \u5176\u4e2d\u524d\u8005\u4e3adata\u7684\u524d\u4e24\u5217\uff0c\u800c\u540e\u8005\u4e3adata\u7684\u6700\u540e\u4e00\u5217\u3002 \u5bf9\u4e8einputs\u4e2d\u7f3a\u5c11\u7684\u6570\u503c\uff0c\u6211\u4eec\u7528\u540c\u4e00\u5217\u7684\u5747\u503c\u66ff\u6362\u201cNaN\u201d\u9879\u3002</p> PYTORCHTENSORFLOW <pre><code>inputs, outputs = data.iloc[:, 0:2], data.iloc[:, 2]\ninputs = inputs.fillna(inputs.mean())\ninputs\n</code></pre> <pre><code>   NumRooms Alley\n0       3.0  Pave\n1       2.0   NaN\n2       4.0   NaN\n3       3.0   NaN\n</code></pre> <pre><code>inputs, outputs = data.iloc[:, 0:2], data.iloc[:, 2]\ninputs = inputs.fillna(inputs.mean())\ninputs\n</code></pre> <pre><code>   NumRooms Alley\n0       3.0  Pave\n1       2.0   NaN\n2       4.0   NaN\n3       3.0   NaN\n</code></pre> <p>\u5bf9\u4e8einputs\u4e2d\u7684\u7c7b\u522b\u503c\u6216\u79bb\u6563\u503c\uff0c\u6211\u4eec\u5c06\u201cNaN\u201d\u89c6\u4e3a\u4e00\u4e2a\u7c7b\u522b\u3002 \u7531\u4e8e\u201c\u5df7\u5b50\u7c7b\u578b\u201d\uff08\u201cAlley\u201d\uff09\u5217\u53ea\u63a5\u53d7\u4e24\u79cd\u7c7b\u578b\u7684\u7c7b\u522b\u503c\u201cPave\u201d\u548c\u201cNaN\u201d\uff0c pandas\u53ef\u4ee5\u81ea\u52a8\u5c06\u6b64\u5217\u8f6c\u6362\u4e3a\u4e24\u5217\u201cAlley_Pave\u201d\u548c\u201cAlley_nan\u201d\u3002 \u5df7\u5b50\u7c7b\u578b\u4e3a\u201cPave\u201d\u7684\u884c\u4f1a\u5c06\u201cAlley_Pave\u201d\u7684\u503c\u8bbe\u7f6e\u4e3a1\uff0c\u201cAlley_nan\u201d\u7684\u503c\u8bbe\u7f6e\u4e3a0\u3002 \u7f3a\u5c11\u5df7\u5b50\u7c7b\u578b\u7684\u884c\u4f1a\u5c06\u201cAlley_Pave\u201d\u548c\u201cAlley_nan\u201d\u5206\u522b\u8bbe\u7f6e\u4e3a0\u548c1\u3002</p> PYTORCHTENSORFLOW <pre><code>inputs = pd.get_dummies(inputs, dummy_na=True)\ninputs\n</code></pre> <pre><code>   NumRooms  Alley_Pave  Alley_nan\n0       3.0           1          0\n1       2.0           0          1\n2       4.0           0          1\n3       3.0           0          1\n</code></pre> <pre><code>inputs = pd.get_dummies(inputs, dummy_na=True)\ninputs\n</code></pre> <pre><code>   NumRooms  Alley_Pave  Alley_nan\n0       3.0           1          0\n1       2.0           0          1\n2       4.0           0          1\n3       3.0           0          1\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#223","title":"2.2.3 \u8f6c\u6362\u4e3a\u5f20\u91cf\u683c\u5f0f","text":"<p>\u73b0\u5728inputs\u548coutputs\u4e2d\u7684\u6240\u6709\u6761\u76ee\u90fd\u662f\u6570\u503c\u7c7b\u578b\uff0c\u5b83\u4eec\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5f20\u91cf\u683c\u5f0f\u3002 \u5f53\u6570\u636e\u91c7\u7528\u5f20\u91cf\u683c\u5f0f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5(\u901a\u8fc7\u5728 :numref:<code>sec_ndarray</code> \u4e2d\u5f15\u5165\u7684\u5f20\u91cf\u903b\u8f91\u6765((\u8bbf\u95ee\u4efb\u610f\u5143\u7d20\u3002)**)</p> PYTORCHTENSORFLOW <pre><code>import torch\nX, y = torch.tensor(inputs.values), torch.tensor(outputs.values)\nX, y\n</code></pre> <pre><code>(tensor([[3., 1., 0.],\n         [2., 0., 1.],\n         [4., 0., 1.],\n         [3., 0., 1.]], dtype=torch.float64),\n tensor([127500, 106000, 178100, 140000]))\n</code></pre> <pre><code>import tensorflow as tf\nX, y = tf.constant(inputs.values), tf.constant(outputs.values)\nX, y\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(4, 3), dtype=float64, numpy=\narray([[3., 1., 0.],\n       [2., 0., 1.],\n       [4., 0., 1.],\n       [3., 0., 1.]])&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=int64, numpy=array([127500, 106000, 178100, 140000])&gt;)\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#224","title":"2.2.4 \u5c0f\u7ed3","text":"<ul> <li> <p>pandas\u8f6f\u4ef6\u5305\u662fPython\u4e2d\u5e38\u7528\u7684\u6570\u636e\u5206\u6790\u5de5\u5177\u4e2d\uff0cpandas\u53ef\u4ee5\u4e0e\u5f20\u91cf\u517c\u5bb9\u3002</p> </li> <li> <p>\u7528pandas\u5904\u7406\u7f3a\u5931\u7684\u6570\u636e\u65f6\uff0c\u6211\u4eec\u53ef\u6839\u636e\u60c5\u51b5\u9009\u62e9\u7528\u63d2\u503c\u6cd5\u548c\u5220\u9664\u6cd5\u3002</p> </li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#23","title":"2.3 \u7ebf\u6027\u4ee3\u6570","text":"<p>\u5728\u4ecb\u7ecd\u5b8c\u5982\u4f55\u5b58\u50a8\u548c\u64cd\u4f5c\u6570\u636e\u540e\uff0c\u63a5\u4e0b\u6765\u5c06\u7b80\u8981\u5730\u56de\u987e\u4e00\u4e0b\u90e8\u5206\u57fa\u672c\u7ebf\u6027\u4ee3\u6570\u5185\u5bb9\u3002 \u8fd9\u4e9b\u5185\u5bb9\u6709\u52a9\u4e8e\u8bfb\u8005\u4e86\u89e3\u548c\u5b9e\u73b0\u672c\u4e66\u4e2d\u4ecb\u7ecd\u7684\u5927\u591a\u6570\u6a21\u578b\u3002 \u672c\u8282\u5c06\u4ecb\u7ecd\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u57fa\u672c\u6570\u5b66\u5bf9\u8c61\u3001\u7b97\u672f\u548c\u8fd0\u7b97\uff0c\u5e76\u7528\u6570\u5b66\u7b26\u53f7\u548c\u76f8\u5e94\u7684\u4ee3\u7801\u5b9e\u73b0\u6765\u8868\u793a\u5b83\u4eec\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#231","title":"2.3.1 \u6807\u91cf","text":"<p>\u6807\u91cf\u7531\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u5f20\u91cf\u8868\u793a\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u5b9e\u4f8b\u5316\u4e24\u4e2a\u6807\u91cf\uff0c\u5e76\u6267\u884c\u4e00\u4e9b\u719f\u6089\u7684\u7b97\u672f\u8fd0\u7b97\uff0c\u5373\u52a0\u6cd5\u3001\u4e58\u6cd5\u3001\u9664\u6cd5\u548c\u6307\u6570\u3002</p> PYTORCHTENSORFLOW <pre><code>import torch\nx = torch.tensor(3.0)\ny = torch.tensor(2.0)\n\nx + y, x * y, x / y, x**y\n</code></pre> <pre><code>(tensor([5.]), tensor([6.]), tensor([1.5000]), tensor([9.]))\n</code></pre> <pre><code>import tensorflow as tf\nx = tf.constant(3.0)\ny = tf.constant(2.0)\n\nx + y, x * y, x / y, x**y\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(1,), dtype=float32, numpy=array([5.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(1,), dtype=float32, numpy=array([6.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.5], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(1,), dtype=float32, numpy=array([9.], dtype=float32)&gt;)\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#232","title":"2.3.2 \u5411\u91cf","text":"<p>\u5411\u91cf\u53ef\u4ee5\u88ab\u89c6\u4e3a\u6807\u91cf\u503c\u7ec4\u6210\u7684\u5217\u8868\u3002 \u8fd9\u4e9b\u6807\u91cf\u503c\u88ab\u79f0\u4e3a\u5411\u91cf\u7684\u5143\u7d20\uff08element\uff09\u6216\u5206\u91cf\uff08component\uff09\u3002 \u5f53\u5411\u91cf\u8868\u793a\u6570\u636e\u96c6\u4e2d\u7684\u6837\u672c\u65f6\uff0c\u5b83\u4eec\u7684\u503c\u5177\u6709\u4e00\u5b9a\u7684\u73b0\u5b9e\u610f\u4e49\u3002\u5728\u6570\u5b66\u8868\u793a\u6cd5\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u7528\u7c97\u4f53\u3001\u5c0f\u5199\u5b57\u6bcd\u8868\u793a\u5411\u91cf\u3002 </p> PYTORCHTENSORFLOW <pre><code>import torch\nx = torch.arange(4)\nx\n</code></pre> <pre><code>tensor([0, 1, 2, 3])\n</code></pre> <pre><code>import tensorflow as tf\nx = tf.range(4)\nx\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=int32, numpy=array([0, 1, 2, 3], dtype=int32)&gt;\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u6807\u6765\u5f15\u7528\u5411\u91cf\u7684\u4efb\u4e00\u5143\u7d20.</p> PYTORCHTENSORFLOW <pre><code>x[3]\n</code></pre> <pre><code>tensor(3)\n</code></pre> <pre><code>x[3]\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=int32, numpy=3&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2321","title":"2.3.2.1 \u957f\u5ea6\u3001\u7ef4\u5ea6\u548c\u5f62\u72b6","text":"<p>\u5411\u91cf\u53ea\u662f\u4e00\u4e2a\u6570\u5b57\u6570\u7ec4\uff0c\u5c31\u50cf\u6bcf\u4e2a\u6570\u7ec4\u90fd\u6709\u4e00\u4e2a\u957f\u5ea6\u4e00\u6837\uff0c\u6bcf\u4e2a\u5411\u91cf\u4e5f\u662f\u5982\u6b64\u3002 \u5411\u91cf\u7684\u957f\u5ea6\u901a\u5e38\u79f0\u4e3a\u7ef4\u5ea6\u3002</p> <p>\u4e0e\u666e\u901a\u7684Python\u6570\u7ec4\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528Python\u7684\u5185\u7f6elen()\u51fd\u6570\u6765\u8bbf\u95ee\u5f20\u91cf\u7684\u957f\u5ea6\u3002</p> PYTORCHTENSORFLOW <pre><code>len(x)\n</code></pre> <pre><code>4\n</code></pre> <pre><code>len(x)\n</code></pre> <pre><code>4\n</code></pre> <p>\u5f53\u7528\u5f20\u91cf\u8868\u793a\u4e00\u4e2a\u5411\u91cf\uff08\u53ea\u6709\u4e00\u4e2a\u8f74\uff09\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7.shape\u5c5e\u6027\u8bbf\u95ee\u5411\u91cf\u7684\u957f\u5ea6\u3002 \u5f62\u72b6\uff08shape\uff09\u662f\u4e00\u4e2a\u5143\u7d20\u7ec4\uff0c\u5217\u51fa\u4e86\u5f20\u91cf\u6cbf\u6bcf\u4e2a\u8f74\u7684\u957f\u5ea6\uff08\u7ef4\u6570\uff09\u3002 \u5bf9\u4e8e\u53ea\u6709\u4e00\u4e2a\u8f74\u7684\u5f20\u91cf\uff0c\u5f62\u72b6\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u3002</p> PYTORCHTENSORFLOW <pre><code>x.shape\n</code></pre> <pre><code>torch.Size([4])\n</code></pre> <pre><code>x.shape\n</code></pre> <pre><code>TensorShape([4])\n</code></pre> <p>\u8bf7\u6ce8\u610f\uff0c\u7ef4\u5ea6\uff08dimension\uff09\u8fd9\u4e2a\u8bcd\u5728\u4e0d\u540c\u4e0a\u4e0b\u6587\u65f6\u5f80\u5f80\u4f1a\u6709\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u8fd9\u7ecf\u5e38\u4f1a\u4f7f\u4eba\u611f\u5230\u56f0\u60d1\u3002 \u4e3a\u4e86\u6e05\u695a\u8d77\u89c1\uff0c\u6211\u4eec\u5728\u6b64\u660e\u786e\u4e00\u4e0b\uff1a \u5411\u91cf\u6216\u8f74\u7684\u7ef4\u5ea6\u88ab\u7528\u6765\u8868\u793a\u5411\u91cf\u6216\u8f74\u7684\u957f\u5ea6\uff0c\u5373\u5411\u91cf\u6216\u8f74\u7684\u5143\u7d20\u6570\u91cf\u3002 \u7136\u800c\uff0c\u5f20\u91cf\u7684\u7ef4\u5ea6\u7528\u6765\u8868\u793a\u5f20\u91cf\u5177\u6709\u7684\u8f74\u6570\u3002 \u5728\u8fd9\u4e2a\u610f\u4e49\u4e0a\uff0c\u5f20\u91cf\u7684\u67d0\u4e2a\u8f74\u7684\u7ef4\u6570\u5c31\u662f\u8fd9\u4e2a\u8f74\u7684\u957f\u5ea6\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#233","title":"2.3.3 \u77e9\u9635","text":"<p>\u6b63\u5982\u5411\u91cf\u5c06\u6807\u91cf\u4ece\u96f6\u9636\u63a8\u5e7f\u5230\u4e00\u9636\uff0c\u77e9\u9635\u5c06\u5411\u91cf\u4ece\u4e00\u9636\u63a8\u5e7f\u5230\u4e8c\u9636\u3002\u77e9\u9635\uff0c\u5728\u4ee3\u7801\u4e2d\u8868\u793a\u4e3a\u5177\u6709\u4e24\u4e2a\u8f74\u7684\u5f20\u91cf\u3002\u5f53\u8c03\u7528\u51fd\u6570\u6765\u5b9e\u4f8b\u5316\u5f20\u91cf\u65f6\uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e24\u4e2a\u5206\u91cfm\u548cn\u6765\u521b\u5efa\u4e00\u4e2a\u5f62\u72b6\u4e3amxn\u7684\u77e9\u9635\u3002</p> PYTORCHTENSORFLOW <pre><code>import torch\nA = torch.arange(20).reshape(5, 4)\nA\n</code></pre> <pre><code>tensor([[ 0,  1,  2,  3],\n        [ 4,  5,  6,  7],\n        [ 8,  9, 10, 11],\n        [12, 13, 14, 15],\n        [16, 17, 18, 19]])\n</code></pre> <pre><code>import tensorflow as tf\nA = tf.reshape(tf.range(20), (5, 4))\nA\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(5, 4), dtype=int32, numpy=\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11],\n       [12, 13, 14, 15],\n       [16, 17, 18, 19]], dtype=int32)&gt;\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u884c\u7d22\u5f15\uff08row\uff09\u548c\u5217\u7d22\u5f15\uff08column\uff09\u6765\u8bbf\u95ee\u77e9\u9635\u4e2d\u7684\u6807\u91cf\u5143\u7d20\u3002 \u4e3a\u4e86\u8868\u793a\u77e9\u9635<code>A</code>\u4e2d\u884c\u7d22\u5f15\u4e3a<code>i</code>\u3001\u5217\u7d22\u5f15\u4e3a<code>j</code>\u7684\u5143\u7d20\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u6807\u91cf\u8bb0\u6cd5\\(a_{i,j}\\)\u3002</p> <p>\u5f53\u6211\u4eec\u4ea4\u6362\u77e9\u9635\u7684\u884c\u548c\u5217\u65f6\uff0c\u7ed3\u679c\u79f0\u4e3a\u77e9\u9635\u7684\u8f6c\u7f6e\uff08transpose\uff09\u3002</p> PYTORCHTENSORFLOW <pre><code>A.T\n</code></pre> <pre><code>tensor([[ 0,  4,  8, 12, 16],\n        [ 1,  5,  9, 13, 17],\n        [ 2,  6, 10, 14, 18],\n        [ 3,  7, 11, 15, 19]])\n</code></pre> <pre><code>tf.transpose(A)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4, 5), dtype=int32, numpy=\narray([[ 0,  4,  8, 12, 16],\n       [ 1,  5,  9, 13, 17],\n       [ 2,  6, 10, 14, 18],\n       [ 3,  7, 11, 15, 19]], dtype=int32)&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#234","title":"2.3.4 \u5f20\u91cf","text":"<p>\u5c31\u50cf\u5411\u91cf\u662f\u6807\u91cf\u7684\u63a8\u5e7f\uff0c\u77e9\u9635\u662f\u5411\u91cf\u7684\u63a8\u5e7f\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u5177\u6709\u66f4\u591a\u8f74\u7684\u6570\u636e\u7ed3\u6784\u3002 \u5f20\u91cf\uff08\u672c\u5c0f\u8282\u4e2d\u7684\u201c\u5f20\u91cf\u201d\u6307\u4ee3\u6570\u5bf9\u8c61\uff09\u662f\u63cf\u8ff0\u5177\u6709\u4efb\u610f\u6570\u91cf\u8f74\u7684n\u7ef4\u6570\u7ec4\u7684\u901a\u7528\u65b9\u6cd5\u3002 \u4f8b\u5982\uff0c\u5411\u91cf\u662f\u4e00\u9636\u5f20\u91cf\uff0c\u77e9\u9635\u662f\u4e8c\u9636\u5f20\u91cf\u3002</p> PYTORCHTENSORFLOW <pre><code>import torch\nX = torch.arange(24).reshape(2, 3, 4)\nX\n</code></pre> <pre><code>tensor([[[ 0,  1,  2,  3],\n         [ 4,  5,  6,  7],\n         [ 8,  9, 10, 11]],\n\n        [[12, 13, 14, 15],\n         [16, 17, 18, 19],\n         [20, 21, 22, 23]]])\n</code></pre> <pre><code>import tensorflow as tf\nX = tf.reshape(tf.range(24), (2, 3, 4))\nX\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(2, 3, 4), dtype=int32, numpy=\narray([[[ 0,  1,  2,  3],\n        [ 4,  5,  6,  7],\n        [ 8,  9, 10, 11]],\n\n       [[12, 13, 14, 15],\n        [16, 17, 18, 19],\n        [20, 21, 22, 23]]], dtype=int32)&gt;\n</code></pre> <p>\u5f20\u91cf\u4fdd\u7559\u4e86\u77e9\u9635\u7684\u6240\u6709\u6027\u8d28\u3002 \u5f20\u91cf\u5177\u6709\u8f74\u3001\u79e9\u548c\u5f62\u72b6\u3002 \u4e00\u4e2a\u5f20\u91cf\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u5b83\u4eec\u7684\u8f74\u6570\u6765\u6307\u5b9a\u8f74\u7684\u6570\u91cf\u3002 \u5f20\u91cf\u7684\u8f74\u6570\u4e5f\u79f0\u4e3a\u5b83\u7684\u9636\uff08order\uff09\u3001\u79e9\uff08rank\uff09\u6216ndim\uff08\u8868\u793a\u201cnumber of dimensions\u201d\uff09\u3002 \u77e9\u9635\u6709\u4e24\u4e2a\u8f74\uff08\u884c\u548c\u5217\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u8bf4\u5b83\u7684\u9636\u4e3a2\uff0c\u5b83\u7684\u79e9\u4e3a2\uff0c\u5b83\u7684ndim\u4e3a2\u3002 \u540c\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u5f20\u91cf\u7684\u9636\u3001\u79e9\u6216ndim\u7b49\u4e8e\u5b83\u7684\u8f74\u6570\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#235","title":"2.3.5 \u5f20\u91cf\u7b97\u6cd5\u7684\u57fa\u672c\u6027\u8d28","text":"<p>\u6807\u91cf\u3001\u5411\u91cf\u3001\u77e9\u9635\u548c\u4efb\u610f\u6570\u91cf\u8f74\u7684\u5f20\u91cf\uff08\u672c\u5c0f\u8282\u4e2d\u7684\u201c\u5f20\u91cf\u201d\u6307\u4ee3\u6570\u5bf9\u8c61\uff09\u6709\u4e00\u4e9b\u5b9e\u7528\u7684\u5c5e\u6027\u3002 \u4f8b\u5982\uff0c\u4ece\u6309\u5143\u7d20\u64cd\u4f5c\u7684\u5b9a\u4e49\u4e2d\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u4efb\u4f55\u6309\u5143\u7d20\u7684\u4e00\u5143\u8fd0\u7b97\u90fd\u4e0d\u4f1a\u6539\u53d8\u5176\u64cd\u4f5c\u6570\u7684\u5f62\u72b6\u3002 \u540c\u6837\uff0c\u7ed9\u5b9a\u5177\u6709\u76f8\u540c\u5f62\u72b6\u7684\u4efb\u610f\u4e24\u4e2a\u5f20\u91cf\uff0c\u4efb\u4f55\u6309\u5143\u7d20\u4e8c\u5143\u8fd0\u7b97\u7684\u7ed3\u679c\u90fd\u5c06\u662f\u76f8\u540c\u5f62\u72b6\u7684\u5f20\u91cf\u3002 \u4f8b\u5982\uff0c\u5c06\u4e24\u4e2a\u76f8\u540c\u5f62\u72b6\u7684\u77e9\u9635\u76f8\u52a0\uff0c\u4f1a\u5728\u8fd9\u4e24\u4e2a\u77e9\u9635\u4e0a\u6267\u884c\u5143\u7d20\u52a0\u6cd5\u3002</p> PYTORCHTENSORFLOW <pre><code>A = torch.arange(20, dtype=torch.float32).reshape(5, 4)\nB = A.clone()  # \u901a\u8fc7\u5206\u914d\u65b0\u5185\u5b58\uff0c\u5c06A\u7684\u4e00\u4e2a\u526f\u672c\u5206\u914d\u7ed9B\nA, A + B\n</code></pre> <pre><code>(tensor([[ 0.,  1.,  2.,  3.],\n         [ 4.,  5.,  6.,  7.],\n         [ 8.,  9., 10., 11.],\n         [12., 13., 14., 15.],\n         [16., 17., 18., 19.]]),\n tensor([[ 0.,  2.,  4.,  6.],\n         [ 8., 10., 12., 14.],\n         [16., 18., 20., 22.],\n         [24., 26., 28., 30.],\n         [32., 34., 36., 38.]]))\n</code></pre> <pre><code>A = tf.reshape(tf.range(20, dtype=tf.float32), (5, 4))\nB = A  # \u4e0d\u80fd\u901a\u8fc7\u5206\u914d\u65b0\u5185\u5b58\u5c06A\u514b\u9686\u5230B\nA, A + B\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(5, 4), dtype=float32, numpy=\narray([[ 0.,  1.,  2.,  3.],\n       [ 4.,  5.,  6.,  7.],\n       [ 8.,  9., 10., 11.],\n       [12., 13., 14., 15.],\n       [16., 17., 18., 19.]], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(5, 4), dtype=float32, numpy=\narray([[ 0.,  2.,  4.,  6.],\n       [ 8., 10., 12., 14.],\n       [16., 18., 20., 22.],\n       [24., 26., 28., 30.],\n       [32., 34., 36., 38.]], dtype=float32)&gt;)\n</code></pre> <p>\u5177\u4f53\u800c\u8a00\uff0c\u4e24\u4e2a\u77e9\u9635\u6309\u5143\u7d20\u4e58\u6cd5\u79f0\u4e3a\u54c8\u8fbe\u739b\u79ef\uff08Hadamard product\uff09\uff08\u6570\u5b66\u7b26\u53f7\\(\\odot\\)\uff09\uff0c\u800c\u4e0d\u662f\u77e9\u9635\u4e58\u6cd5\u3002 \u4e24\u4e2a\u77e9\u9635\u6309\u5143\u7d20\u76f8\u4e58\u7684\u7ed3\u679c\u4e0e\u4e24\u4e2a\u77e9\u9635\u7684\u5f62\u72b6\u76f8\u540c\u3002</p> PYTORCHTENSORFLOW <pre><code>A * B\n</code></pre> <pre><code>tensor([[  0.,   1.,   4.,   9.],\n        [ 16.,  25.,  36.,  49.],\n        [ 64.,  81., 100., 121.],\n        [144., 169., 196., 225.],\n        [256., 289., 324., 361.]])\n</code></pre> <pre><code>A * B\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(5, 4), dtype=float32, numpy=\narray([[  0.,   1.,   4.,   9.],\n       [ 16.,  25.,  36.,  49.],\n       [ 64.,  81., 100., 121.],\n       [144., 169., 196., 225.],\n       [256., 289., 324., 361.]], dtype=float32)&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#236","title":"2.3.6 \u964d\u7ef4","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5bf9\u4efb\u610f\u5f20\u91cf\u8fdb\u884c\u7684\u4e00\u4e2a\u6709\u7528\u7684\u64cd\u4f5c\u662f\u8ba1\u7b97\u5176\u5143\u7d20\u7684\u548c\u3002\u5728\u4ee3\u7801\u4e2d\u53ef\u4ee5\u8c03\u7528\u8ba1\u7b97\u6c42\u548c\u7684\u51fd\u6570\uff1a</p> PYTORCHTENSORFLOW <pre><code>import torch\nx = torch.arange(4, dtype=torch.float32)\nx, x.sum()\n</code></pre> <pre><code>(tensor([0., 1., 2., 3.]), tensor(6.))\n</code></pre> <pre><code>import tensorflow as tf\nx = tf.range(4, dtype=tf.float32)\nx, tf.reduce_sum(x)\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([0., 1., 2., 3.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(), dtype=float32, numpy=6.0&gt;)\n</code></pre> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u6c42\u548c\u51fd\u6570\u4f1a\u6cbf\u6240\u6709\u7684\u8f74\u964d\u4f4e\u5f20\u91cf\u7684\u7ef4\u5ea6\uff0c\u4f7f\u5b83\u53d8\u4e3a\u4e00\u4e2a\u6807\u91cf\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u6307\u5b9a\u5f20\u91cf\u6cbf\u54ea\u4e00\u4e2a\u8f74\u6765\u901a\u8fc7\u6c42\u548c\u964d\u4f4e\u7ef4\u5ea6\u3002 \u4ee5\u77e9\u9635\u4e3a\u4f8b\uff0c\u4e3a\u4e86\u901a\u8fc7\u6c42\u548c\u6240\u6709\u884c\u7684\u5143\u7d20\u6765\u964d\u7ef4\uff08\u8f740\uff09\uff0c\u53ef\u4ee5\u5728\u8c03\u7528\u51fd\u6570\u65f6\u6307\u5b9aaxis=0\u3002 \u7531\u4e8e\u8f93\u5165\u77e9\u9635\u6cbf0\u8f74\u964d\u7ef4\u4ee5\u751f\u6210\u8f93\u51fa\u5411\u91cf\uff0c\u56e0\u6b64\u8f93\u5165\u8f740\u7684\u7ef4\u6570\u5728\u8f93\u51fa\u5f62\u72b6\u4e2d\u6d88\u5931\u3002</p> PYTORCHTENSORFLOW <pre><code>A.shape, A.sum()\n</code></pre> <pre><code>(torch.Size([5, 4]), tensor(190.))\n</code></pre> <pre><code>A.shape, tf.reduce_sum(A)\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([40., 45., 50., 55.], dtype=float32)&gt;, TensorShape([4]))\n</code></pre> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u6c42\u548c\u51fd\u6570\u4f1a\u6cbf\u6240\u6709\u7684\u8f74\u964d\u4f4e\u5f20\u91cf\u7684\u7ef4\u5ea6\uff0c\u4f7f\u5b83\u53d8\u4e3a\u4e00\u4e2a\u6807\u91cf\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u6307\u5b9a\u5f20\u91cf\u6cbf\u54ea\u4e00\u4e2a\u8f74\u6765\u901a\u8fc7\u6c42\u548c\u964d\u4f4e\u7ef4\u5ea6\u3002 \u4ee5\u77e9\u9635\u4e3a\u4f8b\uff0c\u4e3a\u4e86\u901a\u8fc7\u6c42\u548c\u6240\u6709\u884c\u7684\u5143\u7d20\u6765\u964d\u7ef4\uff08\u8f740\uff09\uff0c\u53ef\u4ee5\u5728\u8c03\u7528\u51fd\u6570\u65f6\u6307\u5b9aaxis=0\u3002 \u7531\u4e8e\u8f93\u5165\u77e9\u9635\u6cbf0\u8f74\u964d\u7ef4\u4ee5\u751f\u6210\u8f93\u51fa\u5411\u91cf\uff0c\u56e0\u6b64\u8f93\u5165\u8f740\u7684\u7ef4\u6570\u5728\u8f93\u51fa\u5f62\u72b6\u4e2d\u6d88\u5931\u3002</p> PYTORCHTENSORFLOW <pre><code>A_sum_axis1 = A.sum(axis=1)\nA_sum_axis1, A_sum_axis1.shape\n</code></pre> <pre><code>(tensor([ 6., 22., 38., 54., 70.]), torch.Size([5]))\n</code></pre> <pre><code>A_sum_axis1 = tf.reduce_sum(A, axis=1)\nA_sum_axis1, A_sum_axis1.shape\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(5,), dtype=float32, numpy=array([ 6., 22., 38., 54., 70.], dtype=float32)&gt;,\n TensorShape([5]))\n</code></pre> <p>\u6cbf\u7740\u884c\u548c\u5217\u5bf9\u77e9\u9635\u6c42\u548c\uff0c\u7b49\u4ef7\u4e8e\u5bf9\u77e9\u9635\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u6c42\u548c\u3002</p> PYTORCHTENSORFLOW <pre><code>A.sum(axis=[0, 1])\n</code></pre> <pre><code>tensor(190.)\n</code></pre> <pre><code>tf.reduce_sum(A, axis=[0, 1])\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=190.0&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2361","title":"2.3.6.1 \u975e\u964d\u7ef4\u6c42\u548c","text":"<p>\u4f46\u662f\uff0c\u6709\u65f6\u5728\u8c03\u7528\u51fd\u6570\u6765\u8ba1\u7b97\u603b\u548c\u6216\u5747\u503c\u65f6\u4fdd\u6301\u8f74\u6570\u4e0d\u53d8\u4f1a\u5f88\u6709\u7528\u3002</p> PYTORCHTENSORFLOW <pre><code>sum_A = A.sum(axis=1, keepdims=True)\nsum_A\n</code></pre> <pre><code>tensor([[ 6.],\n        [22.],\n        [38.],\n        [54.],\n        [70.]])\n</code></pre> <pre><code>sum_A = tf.reduce_sum(A, axis=1, keepdims=True)\nsum_A\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(5, 1), dtype=float32, numpy=\narray([[ 6.],\n       [22.],\n       [38.],\n       [54.],\n       [70.]], dtype=float32)&gt;\n</code></pre> <p>\u4f8b\u5982\uff0c\u7531\u4e8esum_A\u5728\u5bf9\u6bcf\u884c\u8fdb\u884c\u6c42\u548c\u540e\u4ecd\u4fdd\u6301\u4e24\u4e2a\u8f74\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e7f\u64ad\u5c06A\u9664\u4ee5sum_A\u3002</p> PYTORCHTENSORFLOW <pre><code>A / sum_A\n</code></pre> <pre><code>tensor([[0.0000, 0.1667, 0.3333, 0.5000],\n        [0.1818, 0.2273, 0.2727, 0.3182],\n        [0.2105, 0.2368, 0.2632, 0.2895],\n        [0.2222, 0.2407, 0.2593, 0.2778],\n        [0.2286, 0.2429, 0.2571, 0.2714]])\n</code></pre> <pre><code>A / sum_A\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(5, 4), dtype=float32, numpy=\narray([[0.        , 0.16666667, 0.33333334, 0.5       ],\n       [0.18181819, 0.22727273, 0.27272728, 0.3181818 ],\n       [0.21052632, 0.23684211, 0.2631579 , 0.28947368],\n       [0.22222222, 0.24074075, 0.25925925, 0.2777778 ],\n       [0.22857143, 0.24285714, 0.25714287, 0.2714286 ]], dtype=float32)&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#237","title":"2.3.7 \u70b9\u79ef","text":"<p>\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\u6309\u5143\u7d20\u64cd\u4f5c\u3001\u6c42\u548c\u53ca\u5e73\u5747\u503c\u3002 \u53e6\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u64cd\u4f5c\u4e4b\u4e00\u662f\u70b9\u79ef\u3002\u7ed9\u5b9a\u4e24\u4e2a\u5411\u91cf\uff0c\u4ed6\u4eec\u7684\u70b9\u79ef\u662f\u76f8\u5e94\u5143\u7d20\u7684\u4e58\u79ef\u7684\u548c\uff08**\u6ce8\u610f\uff1a**\u6211\u4eec\u5728\u672c\u4e66\u4e2d\u4f7f\u7528\u201c\u70b9\u79ef\u201d\u4e00\u8bcd\u6765\u8868\u793a\u70b9\u79ef\uff09\u3002</p> PYTORCHTENSORFLOW <pre><code>y = torch.ones(4, dtype=torch.float32)\nx, y, torch.dot(x, y)\n</code></pre> <pre><code>(tensor([0., 1., 2., 3.]), tensor([1., 1., 1., 1.]), tensor(6.))\n</code></pre> <pre><code>y = tf.ones(4, dtype=tf.float32)\nx, y, tf.tensordot(x, y, axes=1)\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([0., 1., 2., 3.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([1., 1., 1., 1.], dtype=float32)&gt;,\n &lt;tf.Tensor: shape=(), dtype=float32, numpy=6.0&gt;)\n</code></pre> <p>\u70b9\u79ef\u5728\u5f88\u591a\u573a\u5408\u90fd\u5f88\u6709\u7528\u3002 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e00\u7ec4\u7531\u5411\u91cf\\(\\mathbf{x} \\in \\mathbb{R}^d\\)\u7ed9\u51fa\u7684\u503c\uff0c\u548c\u4e00\u7ec4\u7531\u5411\u91cf\\(\\mathbf{w} \\in \\mathbb{R}^d\\)\u7ed9\u51fa\u7684\u6743\u91cd\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5143\u7d20\\(x_i\\)\u548c\\(w_i\\)\u7684\u4e58\u79ef\u7684\u548c\u6765\u5f97\u5230\u4e00\u4e2a\u6807\u91cf\uff1a\\(\\mathbf{x}^\\top \\mathbf{w} = \\sum_{i=1}^d x_i w_i.\\) \u6ce8\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5411\u91cf\\(\\mathbf{x}\\)\u89c6\u4e3a\u662f\u4e00\u4e2a\u884c\u5411\u91cf\uff0c\u5c06\\(\\mathbf{w}\\)\u89c6\u4e3a\u662f\u4e00\u4e2a\u5217\u5411\u91cf\uff0c\u5176\u70b9\u79ef\u4e3a\u4e00\u4e2a\u77e9\u9635\uff1a\\(\\mathbf{x}^\\top \\mathbf{w} = \\mathbf{x}^\\top \\mathbf{w}.\\)</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#238-","title":"2.3.8 \u77e9\u9635-\u5411\u91cf\u79ef","text":"<p>\u73b0\u5728\u6211\u4eec\u77e5\u9053\u5982\u4f55\u8ba1\u7b97\u70b9\u79ef\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u7406\u89e3\u77e9\u9635-\u5411\u91cf\u79ef(matrix-vector product)\u3002\u56de\u987e\u5206\u522b\u5728\u6807\u91cf\u548c\u5411\u91cf\u4e2d\u5b9a\u4e49\u7684\u77e9\u9635\\(\\mathbf{A} \\in \\mathbb{R}^{m \\times n}\\)\u548c\u5411\u91cf\\(\\mathbf{x} \\in \\mathbb{R}^n\\)\u3002\u8ba9\u6211\u4eec\u5c06\u77e9\u9635\\(\\mathbf{A}\\)\u7528\u5b83\u7684\u884c\u5411\u91cf\u8868\u793a\uff1a</p> \\[ \\mathbf{A} = \\begin{bmatrix} \\mathbf{a}^\\top_1 \\\\ \\mathbf{a}^\\top_2 \\\\ \\vdots \\\\ \\mathbf{a}^\\top_m \\end{bmatrix}, \\] <p>\u5176\u4e2d\u6bcf\u4e2a\\(\\mathbf{a}^\\top_i \\in \\mathbb{R}^n\\)\u90fd\u662f\u4e00\u4e2a\u884c\u5411\u91cf\uff0c\u8868\u793a\\(\\mathbf{A}\\)\u7684\u7b2c\\(i\\)\u884c\u3002\u77e9\u9635\u5411\u91cf\u79ef\\(\\mathbf{A}\\mathbf{x}\\)\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a\\(m\\)\u7684\u5217\u5411\u91cf\uff0c\u5176\u7b2c\\(i\\)\u4e2a\u5143\u7d20\u662f\u70b9\u79ef\\(\\mathbf{a}^\\top_i \\mathbf{x}\\)\uff1a</p> \\[ \\mathbf{A}\\mathbf{x} = \\begin{bmatrix} \\mathbf{a}^\\top_1 \\\\ \\mathbf{a}^\\top_2 \\\\ \\vdots \\\\ \\mathbf{a}^\\top_m \\end{bmatrix} \\mathbf{x} = \\begin{bmatrix} \\mathbf{a}^\\top_1 \\mathbf{x} \\\\ \\mathbf{a}^\\top_2 \\mathbf{x} \\\\ \\vdots \\\\ \\mathbf{a}^\\top_m \\mathbf{x} \\end{bmatrix}. \\] <p>\u6211\u4eec\u53ef\u4ee5\u5427\u4e00\u4e2a\u77e9\u9635\\(\\mathbf{A} \\in \\mathbb{R}^{m \\times n}\\)\u770b\u4f5c\u4e00\u4e2a\u4ece\\(\\mathbb{R}^n\\)\u5230\\(\\mathbb{R}^m\\)\u7684\u8f6c\u6362\u3002\u8fd9\u4e9b\u8f6c\u6362\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c\u4f8b\u5982\u53ef\u4ee5\u7528\u65b9\u9635\u7684\u4e58\u6cd5\u6765\u8868\u793a\u65cb\u8f6c\u3002\u540e\u7eed\u7ae0\u8282\u5c06\u8bb2\u5230\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u77e9\u9635-\u5411\u91cf\u79ef\u6765\u63cf\u8ff0\u5728\u7ed9\u5b9a\u524d\u4e00\u5c42\u7684\u503c\u65f6\uff0c \u6c42\u89e3\u795e\u7ecf\u7f51\u7edc\u6bcf\u4e00\u5c42\u6240\u9700\u7684\u590d\u6742\u8ba1\u7b97\u3002</p> PYTORCHTENSORFLOW <pre><code>A.shape, x.shape, torch.mv(A, x)\n</code></pre> <pre><code>(torch.Size([5, 4]), torch.Size([4]), tensor([ 14.,  38.,  62.,  86., 110.]))\n</code></pre> <pre><code>A.shape, x.shape, tf.linalg.matvec(A, x)\n</code></pre> <pre><code>(&lt;tf.Tensor: shape=(5, 4), dtype=float32, numpy=\narray([[ 0.,  1.,  2.,  3.],\n       [ 4.,  5.,  6.,  7.],\n       [ 8.,  9., 10., 11.],\n       [12., 13., 14., 15.],\n       [16., 17., 18., 19.]], dtype=float32)&gt;,\n TensorShape([4]),\n &lt;tf.Tensor: shape=(5,), dtype=float32, numpy=array([ 14.,  38.,  62.,  86., 110.], dtype=float32)&gt;)\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#239-","title":"2.3.9 \u77e9\u9635-\u77e9\u9635\u4e58\u6cd5","text":"<p>\u5728\u638c\u63e1\u70b9\u79ef\u548c\u77e9\u9635-\u5411\u91cf\u79ef\u7684\u77e5\u8bc6\u540e\uff0c \u90a3\u4e48**\u77e9\u9635-\u77e9\u9635\u4e58\u6cd5**\uff08matrix-matrix multiplication\uff09\u5e94\u8be5\u5f88\u7b80\u5355\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u6709\u4e24\u4e2a\u77e9\u9635\\(\\mathbf{A} \\in \\mathbb{R}^{n \\times k}\\)\u548c\\(\\mathbf{B} \\in \\mathbb{R}^{k \\times m}\\)\uff1a</p> \\[ \\mathbf{A} = \\begin{bmatrix} \\mathbf{a_{11}} &amp; \\mathbf{a_{12}} &amp; \\cdots &amp; \\mathbf{a_{1k}} \\\\ \\mathbf{a_{21}} &amp; \\mathbf{a_{22}} &amp; \\cdots &amp; \\mathbf{a_{2k}} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\mathbf{a_{n1}} &amp; \\mathbf{a_{n2}} &amp; \\cdots &amp; \\mathbf{a_{nk}} \\end{bmatrix}, \\quad \\mathbf{B} = \\begin{bmatrix} \\mathbf{b_{11}} &amp; \\mathbf{b_{12}} &amp; \\cdots &amp; \\mathbf{b_{1m}} \\\\ \\mathbf{b_{21}} &amp; \\mathbf{b_{22}} &amp; \\cdots &amp; \\mathbf{b_{2m}} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\mathbf{b_{k1}} &amp; \\mathbf{b_{k2}} &amp; \\cdots &amp; \\mathbf{b_{km}} \\end{bmatrix}. \\] <p>\u7528\u884c\u5411\u91cf\\(\\mathbf{a}^\\top_{i} \\in \\mathbb{R}^k\\)\u8868\u793a\u77e9\u9635\\(\\mathbf{A}\\)\u7684\u7b2c\\(i\\)\u884c\uff0c\u7528\u5217\u5411\u91cf\\(\\mathbf{b}_{j} \\in \\mathbb{R}^k\\)\u8868\u793a\u77e9\u9635\\(\\mathbf{B}\\)\u7684\u7b2c\\(j\\)\u5217\u3002\u8981\u751f\u6210\u77e9\u9635\u79ef\\(\\mathbf{C} = \\mathbf{A}\\mathbf{B}\\)\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u8003\u8651\\(\\mathbf{A}\\)\u7684\u884c\u5411\u91cf\u548c\\(\\mathbf{B}\\)\u7684\u5217\u5411\u91cf\uff1a</p> \\[ \\mathbf{A} = \\begin{bmatrix} \\mathbf{a}^\\top_{1} \\\\ \\mathbf{a}^\\top_{2} \\\\ \\vdots \\\\ \\mathbf{a}^\\top_{n} \\end{bmatrix}, \\quad \\mathbf{B} = \\begin{bmatrix} \\mathbf{b}_{1} &amp; \\mathbf{b}_{2} &amp; \\cdots &amp; \\mathbf{b}_{m} \\end{bmatrix}. \\] <p>\u5f53\u6211\u4eec\u7b80\u5355\u5730\u5c06\u6bcf\u4e2a\u5143\u7d20\\(c_{ij}\\)\u8ba1\u7b97\u4e3a\u70b9\u79ef\\(\\mathbf{a}^\\top_i \\mathbf{b}_j\\)\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u77e9\u9635\\(\\mathbf{C} \\in \\mathbb{R}^{n \\times m}\\)\uff1a</p> \\[ \\mathbf{C} = \\begin{bmatrix} \\mathbf{a}^\\top_{1} \\\\ \\mathbf{a}^\\top_{2} \\\\ \\vdots \\\\ \\mathbf{a}^\\top_{n} \\end{bmatrix} \\begin{bmatrix} \\mathbf{b}_{1} &amp; \\mathbf{b}_{2} &amp; \\cdots &amp; \\mathbf{b}_{m} \\end{bmatrix} = \\begin{bmatrix} \\mathbf{a}^\\top_{1} \\mathbf{b}_{1} &amp; \\mathbf{a}^\\top_{1} \\mathbf{b}_{2} &amp; \\cdots &amp; \\mathbf{a}^\\top_{1} \\mathbf{b}_{m} \\\\ \\mathbf{a}^\\top_{2} \\mathbf{b}_{1} &amp; \\mathbf{a}^\\top_{2} \\mathbf{b}_{2} &amp; \\cdots &amp; \\mathbf{a}^\\top_{2} \\mathbf{b}_{m} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\mathbf{a}^\\top_{n} \\mathbf{b}_{1} &amp; \\mathbf{a}^\\top_{n} \\mathbf{b}_{2} &amp; \\cdots &amp; \\mathbf{a}^\\top_{n} \\mathbf{b}_{m} \\end{bmatrix}. \\] <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u77e9\u9635-\u77e9\u9635\u4e58\u6cd5\\(\\\\mathbf{A}\\mathbf{B}\\)\u770b\u4f5c\u7b80\u5355\u5730\u6267\u884cm\u6b21\u77e9\u9635-\u5411\u91cf\u79ef\u5e76\u5c06\u7ed3\u679c\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u5f97\u5230\u4e00\u4e2a\\(n \\times m\\)\u77e9\u9635\u3002</p> PYTORCHTENSORFLOW <pre><code>B = torch.ones(4, 3)\ntorch.mm(A, B)\n</code></pre> <pre><code>tensor([[ 6.,  6.,  6.],\n        [22., 22., 22.],\n        [38., 38., 38.],\n        [54., 54., 54.],\n        [70., 70., 70.]])\n</code></pre> <pre><code>B = tf.ones((4, 3))\ntf.matmul(A, B)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(5, 3), dtype=float32, numpy=\narray([[ 6.,  6.,  6.],\n       [22., 22., 22.],\n       [38., 38., 38.],\n       [54., 54., 54.],\n       [70., 70., 70.]], dtype=float32)&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2310","title":"2.3.10 \u8303\u6570","text":"<p>\u7ebf\u6027\u4ee3\u6570\u4e2d\u6700\u6709\u7528\u7684\u4e00\u4e9b\u8fd0\u7b97\u7b26\u662f\u8303\u6570\uff08norm\uff09\u3002 \u975e\u6b63\u5f0f\u5730\u8bf4\uff0c\u5411\u91cf\u7684\u8303\u6570\u662f\u8868\u793a\u4e00\u4e2a\u5411\u91cf\u6709\u591a\u5927\u3002 \u8fd9\u91cc\u8003\u8651\u7684\u5927\u5c0f\uff08size\uff09\u6982\u5ff5\u4e0d\u6d89\u53ca\u7ef4\u5ea6\uff0c\u800c\u662f\u5206\u91cf\u7684\u5927\u5c0f\u3002</p> <p>\u5728\u7ebf\u6027\u4ee3\u6570\u4e2d\uff0c\u5411\u91cf\u8303\u6570\u662f\u5c06\u5411\u91cf\u6620\u5c04\u5230\u6807\u91cf\u7684\u51fd\u6570\\(f\\)\u3002 \u7ed9\u5b9a\u4efb\u610f\u5411\u91cf\\(\\mathbf{x}\\)\uff0c\u5411\u91cf\u8303\u6570\u8981\u6ee1\u8db3\u4e00\u4e9b\u5c5e\u6027\u3002\u7b2c\u4e00\u4e2a\u6027\u8d28\u662f\uff1a\u5982\u679c\u6211\u4eec\u6309\u5e38\u6570\u56e0\u5b50\\(\\alpha\\)\u7f29\u653e\\(\\mathbf{x}\\)\u7684\u6240\u6709\u5143\u7d20\uff0c\u5176\u8303\u6570\u4e5f\u4f1a\u6309\u76f8\u540c\u5e38\u6570\u56e0\u5b50\u7684\u7edd\u5bf9\u503c\u7f29\u653e\uff1a</p> \\[\\| \\alpha \\mathbf{x} \\| = |\\alpha| \\| \\mathbf{x} \\|. \\] <p>\u7b2c\u4e8c\u4e2a\u6027\u8d28\u662f\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff08triangle inequality\uff09\u3002 \u5b83\u8868\u660e\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u5411\u91cf\\(\\mathbf{x}\\)\u548c\\(\\mathbf{y}\\)\uff0c\u5411\u91cf\u4e4b\u548c\u7684\u8303\u6570\u4e0d\u5927\u4e8e\u5411\u91cf\u8303\u6570\u7684\u548c\uff1a</p> \\[ \\| \\mathbf{x} + \\mathbf{y} \\| \\leq \\| \\mathbf{x} \\| + \\| \\mathbf{y} \\| . \\] <p>\u7b2c\u4e09\u4e2a\u6027\u8d28\u7b80\u5355\u5730\u8bf4\u8303\u6570\u5fc5\u987b\u975e\u8d1f\uff1a</p> \\[ \\| \\mathbf{x} \\| \\geq 0. \\] <p>\u8fd9\u662f\u6709\u9053\u7406\u7684\uff0c\u56e0\u4e3a\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u4e1c\u897f\u7684\u6700\u5c0f\u5927\u5c0f\u4e3a\u96f6\u3002\u6700\u540e\u4e00\u4e2a\u6027\u8d28\u89c4\u5b9a\u4e86\u4ec0\u4e48\u6837\u7684\u5411\u91cf\u5177\u6709\u96f6\u8303\u6570\uff1a</p> \\[ \\| \\mathbf{x} \\| = 0 \\Leftrightarrow \\mathbf{x} = \\mathbf{0}. \\] <p>\u8303\u6570\u542c\u8d77\u6765\u5f88\u50cf\u8ddd\u79bb\u7684\u5ea6\u91cf\u3002 \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u548c\u6bd5\u8fbe\u54e5\u62c9\u65af\u5b9a\u7406\u4e2d\u7684\u975e\u8d1f\u6027\u6982\u5ff5\u548c\u4e09\u89d2\u4e0d\u7b49\u5f0f\u53ef\u80fd\u4f1a\u7ed9\u51fa\u4e00\u4e9b\u542f\u53d1\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u662f\u4e00\u4e2a\\(L_2\\)\u8303\u6570: \u5047\u8bbe\\(n\\)\u7ef4\u5411\u91cf\\(\\mathbf{x}\\)\u7684\u5750\u6807\u4e3a\\(x_1, \\ldots, x_n\\), \u5176\\(L_2\\)\u8303\u6570\u662f\u5411\u91cf\u5143\u7d20\u5e73\u65b9\u548c\u7684\u5e73\u65b9\u6839\uff1a</p> \\[ \\| \\mathbf{x} \\|_2 = \\sqrt{\\sum_{i=1}^n x_i^2}, \\] <p>\u5176\u4e2d\uff0c\u5728\\(L_2\\)\u8303\u6570\u4e2d\u5e38\u5e38\u7701\u7565\u4e0b\u68072\uff0c\u4e5f\u5c31\u662f\u8bf4\\(\\|\\mathbf{x}\\|\\)\u7b49\u4ef7\u4e8e\\(\\|\\mathbf{x}\\|_2\\)\u3002 \u5728\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u8ba1\u7b97\u5411\u91cf\u7684\\(L_2\\)\u8303\u6570\u3002</p> PYTORCHTENSORFLOW <pre><code>u = torch.tensor([3.0, -4.0])\ntorch.norm(u)\n</code></pre> <pre><code>tensor(5.)\n</code></pre> <pre><code>u = tf.constant([3.0, -4.0])\ntf.norm(u)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=5.0&gt;\n</code></pre> <p>\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u66f4\u7ecf\u5e38\u5730\u4f7f\u7528\\(L_2\\)\u8303\u6570\u7684\u5e73\u65b9\u3002 \u4f60\u8fd8\u4f1a\u7ecf\u5e38\u9047\u5230\\(L_1\\)\u8303\u6570\uff0c\u5b83\u8868\u793a\u4e3a\u5411\u91cf\u5143\u7d20\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\uff1a</p> \\[ \\| \\mathbf{x} \\|_1 = \\sum_{i=1}^n \\left|x_i \\right|. \\] <p>\u4e0e\\(L_2\\)\u8303\u6570\u76f8\u6bd4\uff0c\\(L_1\\)\u8303\u6570\u53d7\u5f02\u5e38\u503c\u7684\u5f71\u54cd\u8f83\u5c0f\u3002\u4e3a\u4e86\u8ba1\u7b97\\(L_1\\)\u8303\u6570\uff0c\u6211\u4eec\u5c06\u7edd\u5bf9\u503c\u51fd\u6570\u548c\u6309\u5143\u7d20\u6c42\u548c\u7ec4\u5408\u8d77\u6765\u3002</p> PYTORCHTENSORFLOW <pre><code>torch.abs(u).sum()\n</code></pre> <pre><code>tensor(7.)\n</code></pre> <pre><code>tf.reduce_sum(tf.abs(u))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=7.0&gt;\n</code></pre> <p>\\(L_2\\)\u8303\u6570\u548c\\(L_1\\)\u8303\u6570\u90fd\u662f\u66f4\u4e00\u822c\u5f62\u5f0f\\(L_p\\)\u8303\u6570\u7684\u7279\u4f8b\uff1a</p> \\[ \\| \\mathbf{x} \\|_p = \\left( \\sum_{i=1}^n \\left|x_i \\right|^p \\right)^{\\frac{1}{p}}. \\] <p>\u7c7b\u4f3c\u4e8e\u5411\u91cf\u7684\\(L_2\\)\u8303\u6570\uff0c\u77e9\u9635\\(\\mathbf{X} \\in \\mathbb{R}^{m \\times n}\\)\u7684**\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u8303\u6570**\uff08Frobenius norm\uff09\u662f\u77e9\u9635\u5143\u7d20\u5e73\u65b9\u548c\u7684\u5e73\u65b9\u6839\uff1a</p> \\[ \\|\\mathbf{X}\\|_F = \\sqrt{\\sum_{i=1}^m \\sum_{j=1}^n x_{ij}^2}. \\] <p>\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u8303\u6570\u6ee1\u8db3\u5411\u91cf\u8303\u6570\u7684\u6240\u6709\u6027\u8d28\u3002 \u5b83\u5c31\u50cf\u662f\u5c06\u77e9\u9635\u5c55\u5e73\u6210\u5411\u91cf\u540e\u8ba1\u7b97\u5176\\(L_2\\)\u8303\u6570\u4e00\u6837\u3002</p> PYTORCHTENSORFLOW <pre><code>torch.norm(torch.ones((4, 9)))\n</code></pre> <pre><code>tensor(6.)\n</code></pre> <pre><code>tf.norm(tf.ones((4, 9)))\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=6.0&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#23101","title":"2.3.10.1 \u8303\u6570\u548c\u76ee\u6807","text":"<p>\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u8bd5\u56fe\u89e3\u51b3\u4f18\u5316\u95ee\u9898\uff1a \u6700\u5927\u5316\u5206\u914d\u7ed9\u89c2\u6d4b\u6570\u636e\u7684\u6982\u7387; \u6700\u5c0f\u5316\u9884\u6d4b\u548c\u771f\u5b9e\u89c2\u6d4b\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 \u7528\u5411\u91cf\u8868\u793a\u7269\u54c1\uff08\u5982\u5355\u8bcd\u3001\u4ea7\u54c1\u6216\u65b0\u95fb\u6587\u7ae0\uff09\uff0c\u4ee5\u4fbf\u6700\u5c0f\u5316\u76f8\u4f3c\u9879\u76ee\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6700\u5927\u5316\u4e0d\u540c\u9879\u76ee\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 \u76ee\u6807\uff0c\u6216\u8bb8\u662f\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u6700\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff08\u9664\u4e86\u6570\u636e\uff09\uff0c\u901a\u5e38\u88ab\u8868\u8fbe\u4e3a\u8303\u6570\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2311","title":"2.3.11 \u5173\u4e8e\u7ebf\u6027\u4ee3\u6570\u7684\u66f4\u591a\u4fe1\u606f\u00b6","text":"<p>\u4ec5\u7528\u4e00\u8282\uff0c\u6211\u4eec\u5c31\u6559\u4f1a\u4e86\u9605\u8bfb\u672c\u4e66\u6240\u9700\u7684\u3001\u7528\u4ee5\u7406\u89e3\u73b0\u4ee3\u6df1\u5ea6\u5b66\u4e60\u7684\u7ebf\u6027\u4ee3\u6570\u3002 \u7ebf\u6027\u4ee3\u6570\u8fd8\u6709\u5f88\u591a\uff0c\u5176\u4e2d\u5f88\u591a\u6570\u5b66\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\u975e\u5e38\u6709\u7528\u3002 \u4f8b\u5982\uff0c\u77e9\u9635\u53ef\u4ee5\u5206\u89e3\u4e3a\u56e0\u5b50\uff0c\u8fd9\u4e9b\u5206\u89e3\u53ef\u4ee5\u663e\u793a\u771f\u5b9e\u4e16\u754c\u6570\u636e\u96c6\u4e2d\u7684\u4f4e\u7ef4\u7ed3\u6784\u3002 \u673a\u5668\u5b66\u4e60\u7684\u6574\u4e2a\u5b50\u9886\u57df\u90fd\u4fa7\u91cd\u4e8e\u4f7f\u7528\u77e9\u9635\u5206\u89e3\u53ca\u5176\u5411\u9ad8\u9636\u5f20\u91cf\u7684\u6cdb\u5316\uff0c\u6765\u53d1\u73b0\u6570\u636e\u96c6\u4e2d\u7684\u7ed3\u6784\u5e76\u89e3\u51b3\u9884\u6d4b\u95ee\u9898\u3002 \u5f53\u5f00\u59cb\u52a8\u624b\u5c1d\u8bd5\u5e76\u5728\u771f\u5b9e\u6570\u636e\u96c6\u4e0a\u5e94\u7528\u4e86\u6709\u6548\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u4f60\u4f1a\u66f4\u503e\u5411\u4e8e\u5b66\u4e60\u66f4\u591a\u6570\u5b66\u3002 \u56e0\u6b64\uff0c\u8fd9\u4e00\u8282\u5230\u6b64\u7ed3\u675f\uff0c\u672c\u4e66\u5c06\u5728\u540e\u9762\u4ecb\u7ecd\u66f4\u591a\u6570\u5b66\u77e5\u8bc6\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2312","title":"2.3.12 \u5c0f\u7ed3","text":"<ul> <li> <p>\u6807\u91cf\u3001\u5411\u91cf\u3001\u77e9\u9635\u548c\u5f20\u91cf\u662f\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u57fa\u672c\u6570\u5b66\u5bf9\u8c61\u3002</p> </li> <li> <p>\u5411\u91cf\u6cdb\u5316\u81ea\u6807\u91cf\uff0c\u77e9\u9635\u6cdb\u5316\u81ea\u5411\u91cf\u3002</p> </li> <li> <p>\u6807\u91cf\u3001\u5411\u91cf\u3001\u77e9\u9635\u548c\u5f20\u91cf\u5206\u522b\u5177\u6709\u96f6\u3001\u4e00\u3001\u4e8c\u548c\u4efb\u610f\u6570\u91cf\u7684\u8f74\u3002</p> </li> <li> <p>\u4e00\u4e2a\u5f20\u91cf\u53ef\u4ee5\u901a\u8fc7sum\u548cmean\u6cbf\u6307\u5b9a\u7684\u8f74\u964d\u4f4e\u7ef4\u5ea6\u3002</p> </li> <li> <p>\u4e24\u4e2a\u77e9\u9635\u7684\u6309\u5143\u7d20\u4e58\u6cd5\u88ab\u79f0\u4e3a\u4ed6\u4eec\u7684Hadamard\u79ef\u3002\u5b83\u4e0e\u77e9\u9635\u4e58\u6cd5\u4e0d\u540c\u3002</p> </li> <li> <p>\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528\u8303\u6570\uff0c\u5982\\(L_1\\)\u8303\u6570\u3001\\(L_2\\)\u8303\u6570\u3001\u8303\u6570\u548cFrobenius\u8303\u6570\u3002</p> </li> <li> <p>\u6211\u4eec\u53ef\u4ee5\u5bf9\u6807\u91cf\u3001\u5411\u91cf\u3001\u77e9\u9635\u548c\u5f20\u91cf\u6267\u884c\u5404\u79cd\u64cd\u4f5c\u3002</p> </li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#24","title":"2.4 \u5fae\u79ef\u5206","text":"<p>\u57282500\u5e74\u524d\uff0c\u53e4\u5e0c\u814a\u4eba\u628a\u4e00\u4e2a\u591a\u8fb9\u5f62\u5206\u6210\u4e09\u89d2\u5f62\uff0c\u5e76\u628a\u5b83\u4eec\u7684\u9762\u79ef\u76f8\u52a0\uff0c\u624d\u627e\u5230\u8ba1\u7b97\u591a\u8fb9\u5f62\u9762\u79ef\u7684\u65b9\u6cd5\u3002 \u4e3a\u4e86\u6c42\u51fa\u66f2\u7ebf\u5f62\u72b6\uff08\u6bd4\u5982\u5706\uff09\u7684\u9762\u79ef\uff0c\u53e4\u5e0c\u814a\u4eba\u5728\u8fd9\u6837\u7684\u5f62\u72b6\u4e0a\u523b\u5185\u63a5\u591a\u8fb9\u5f62\u3002 \u5185\u63a5\u591a\u8fb9\u5f62\u7684\u7b49\u957f\u8fb9\u8d8a\u591a\uff0c\u5c31\u8d8a\u63a5\u8fd1\u5706\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u88ab\u79f0\u4e3a\u903c\u8fd1\u6cd5\uff08method of exhaustion\uff09\u3002\u4e8b\u5b9e\u4e0a\uff0c\u903c\u8fd1\u6cd5\u5c31\u662f\u79ef\u5206\uff08integral calculus\uff09\u7684\u8d77\u6e90\u3002 2000\u591a\u5e74\u540e\uff0c\u5fae\u79ef\u5206\u7684\u53e6\u4e00\u652f\uff0c\u5fae\u5206\uff08differential calculus\uff09\u88ab\u53d1\u660e\u51fa\u6765\u3002 \u5728\u5fae\u5206\u5b66\u6700\u91cd\u8981\u7684\u5e94\u7528\u662f\u4f18\u5316\u95ee\u9898\uff0c\u5373\u8003\u8651\u5982\u4f55\u628a\u4e8b\u60c5\u505a\u5230\u6700\u597d\u3002 \u6b63\u5982\u5728 2.3.10.1\u8282\u4e2d\u8ba8\u8bba\u7684\u90a3\u6837\uff0c \u8fd9\u79cd\u95ee\u9898\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\u662f\u65e0\u5904\u4e0d\u5728\u7684\u3002</p> <p>\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u201c\u8bad\u7ec3\u201d\u6a21\u578b\uff0c\u4e0d\u65ad\u66f4\u65b0\u5b83\u4eec\uff0c\u4f7f\u5b83\u4eec\u5728\u770b\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u6570\u636e\u65f6\u53d8\u5f97\u8d8a\u6765\u8d8a\u597d\u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u53d8\u5f97\u66f4\u597d\u610f\u5473\u7740\u6700\u5c0f\u5316\u4e00\u4e2a\u635f\u5931\u51fd\u6570\uff08loss function\uff09\uff0c \u5373\u4e00\u4e2a\u8861\u91cf\u201c\u6a21\u578b\u6709\u591a\u7cdf\u7cd5\u201d\u8fd9\u4e2a\u95ee\u9898\u7684\u5206\u6570\u3002 \u6700\u7ec8\uff0c\u6211\u4eec\u771f\u6b63\u5173\u5fc3\u7684\u662f\u751f\u6210\u4e00\u4e2a\u6a21\u578b\uff0c\u5b83\u80fd\u591f\u5728\u4ece\u672a\u89c1\u8fc7\u7684\u6570\u636e\u4e0a\u8868\u73b0\u826f\u597d\u3002 \u4f46\u201c\u8bad\u7ec3\u201d\u6a21\u578b\u53ea\u80fd\u5c06\u6a21\u578b\u4e0e\u6211\u4eec\u5b9e\u9645\u80fd\u770b\u5230\u7684\u6570\u636e\u76f8\u62df\u5408\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u62df\u5408\u6a21\u578b\u7684\u4efb\u52a1\u5206\u89e3\u4e3a\u4e24\u4e2a\u5173\u952e\u95ee\u9898\uff1a</p> <ul> <li>\u4f18\u5316\uff08optimization\uff09\uff1a\u7528\u6a21\u578b\u62df\u5408\u89c2\u6d4b\u6570\u636e\u7684\u8fc7\u7a0b\uff1b</li> <li>\u6cdb\u5316\uff08generalization\uff09\uff1a\u6570\u5b66\u539f\u7406\u548c\u5b9e\u8df5\u8005\u7684\u667a\u6167\uff0c\u80fd\u591f\u6307\u5bfc\u6211\u4eec\u751f\u6210\u51fa\u6709\u6548\u6027\u8d85\u51fa\u7528\u4e8e\u8bad\u7ec3\u7684\u6570\u636e\u96c6\u672c\u8eab\u7684\u6a21\u578b\u3002</li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#241","title":"2.4.1 \u5bfc\u6570","text":"<p>\u6211\u4eec\u9996\u5148\u8ba8\u8bba\u5bfc\u6570\u7684\u8ba1\u7b97\uff0c\u8fd9\u662f\u51e0\u4e4e\u6240\u6709\u6df1\u5ea6\u5b66\u4e60\u4f18\u5316\u7b97\u6cd5\u7684\u5173\u952e\u6b65\u9aa4\u3002 \u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u9009\u62e9\u5bf9\u4e8e\u6a21\u578b\u53c2\u6570\u53ef\u5fae\u7684\u635f\u5931\u51fd\u6570\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u53c2\u6570\uff0c \u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e2a\u53c2\u6570\u589e\u52a0\u6216\u51cf\u5c11\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u91cf\uff0c\u53ef\u4ee5\u77e5\u9053\u635f\u5931\u4f1a\u4ee5\u591a\u5feb\u7684\u901f\u5ea6\u589e\u52a0\u6216\u51cf\u5c11\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570\\(f: \\mathbb{R} \\rightarrow \\mathbb{R}\\)\uff0c\u5b83\u7684\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u662f\u6807\u91cf\u3002\u5982\u679c\u51fd\u6570\\(f\\)\u7684\u5bfc\u6570\u5b58\u5728\uff0c\u8fd9\u4e2a\u6781\u9650\u88ab\u5b9a\u4e49\u4e3a\uff1a</p> \\[ f'(x) = \\lim_{h \\rightarrow 0} \\frac{f(x+h) - f(x)}{h}.\\] <p>\u5982\u679c\u5bfc\u6570\\(f'(a)\\)\u5b58\u5728\uff0c\u5219\u51fd\u6570\\(f\\)\u5728\u70b9\\(a\\)\u662f\u53ef\u5fae\u7684\u3002\u5982\u679c\\(f\\)\u5728\u533a\u95f4\\([a, b]\\)\u4e0a\u7684\u6bcf\u4e2a\u70b9\u90fd\u53ef\u5fae\uff0c\u90a3\u4e48\\(f\\)\u5728\u533a\u95f4\\([a, b]\\)\u4e0a\u662f\u53ef\u5fae\u7684\u3002\u5982\u679c\\(f\\)\u5728\u533a\u95f4\\((-\\infty, \\infty)\\)\u4e0a\u662f\u53ef\u5fae\u7684\uff0c\u5219\\(f\\)\u662f\u53ef\u5fae\u7684\u3002\u51fd\u6570\\(f\\)\u7684\u5bfc\u6570\\(f'\\)\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\uff1a\u5b83\u5c06\\(x\\)\u6620\u5c04\u5230\u5bfc\u6570\\(f'(x)\\)\u3002\u540c\u6837\uff0c\u5982\u679c\\(f'\\)\u5728\u67d0\u4e2a\u533a\u95f4\u4e0a\u662f\u53ef\u5fae\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u5b83\u7684\u5bfc\u6570\uff0c\u5b83\u88ab\u79f0\u4e3a\\(f\\)\u7684\u4e8c\u9636\u5bfc\u6570\\(f''\\)\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u5bfc\u6570\\(f'(x)\\)\u89e3\u91ca\u4e3a\uff1a\u5f53\\(x\\)\u5728\\(f(x)\\)\u5904\u589e\u52a0\\(h\\)\u65f6\uff0c\\(f(x)\\)\u76f8\u5bf9\u4e8e\\(h\\)\u7684\u53d8\u5316\u7387\u3002\u56e0\u6b64\uff0c\u5f53\\(h\\)\u63a5\u8fd10\u65f6\uff0c\\(f(x)\\)\u76f8\u5bf9\u4e8e\\(h\\)\u7684\u53d8\u5316\u7387\u662f\\(f'(x)\\)\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u5bfc\u6570\u89e3\u91ca\u4e3a\uff1a\\(f(x)\\)\u7684\u77ac\u65f6\u53d8\u5316\u7387\u3002\u4f8b\u5982\uff0c\u5982\u679c\\(f(x)\\)\u8868\u793a\u4e00\u4e2a\u4eba\u7684\u4f4d\u7f6e\u968f\u65f6\u95f4\u7684\u53d8\u5316\uff0c\u90a3\u4e48\\(f'(x)\\)\u5c31\u662f\u8fd9\u4e2a\u4eba\u7684\u77ac\u65f6\u901f\u5ea6\u3002\u5982\u679c\\(f(x)\\)\u8868\u793a\u4e00\u4e2a\u4eba\u7684\u901f\u5ea6\u968f\u65f6\u95f4\u7684\u53d8\u5316\uff0c\u90a3\u4e48\\(f'(x)\\)\u5c31\u662f\u8fd9\u4e2a\u4eba\u7684\u77ac\u65f6\u52a0\u901f\u5ea6\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#242","title":"2.4.2 \u504f\u5bfc\u6570","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u8ba8\u8bba\u4e86\u4ec5\u542b\u4e00\u4e2a\u53d8\u91cf\u7684\u51fd\u6570\u7684\u5fae\u5206\u3002 \u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0c\u51fd\u6570\u901a\u5e38\u4f9d\u8d56\u4e8e\u8bb8\u591a\u53d8\u91cf\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5fae\u5206\u7684\u601d\u60f3\u63a8\u5e7f\u5230\u591a\u5143\u51fd\u6570\uff08multivariate function\uff09\u4e0a\u3002</p> <p>\u8bbe\\(y = f(x_1, x_2, \\ldots, x_n)\\)\u662f\u4e00\u4e2a\u5177\u6709\\(n\\)\u4e2a\u53d8\u91cf\u7684\u51fd\u6570\u3002 \\(f\\)\u7684\u504f\u5bfc\u6570\\(\\frac{\\partial y}{\\partial x_i}\\)\uff08partial derivative\uff09\u8861\u91cf\u4e86\\(f\\)\u76f8\u5bf9\u4e8e\u53d8\u91cf\\(x_i\\)\u7684\u53d8\u5316\u7387\uff0c\u800c\u5c06\u5176\u4ed6\u53d8\u91cf\\(x_j (j \\neq i, j = 1, 2, \\ldots, n)\\)\u89c6\u4e3a\u5e38\u6570\u3002 \u8981\u8ba1\u7b97\\(\\frac{\\partial y}{\\partial x_i}\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\\(f(x_1, x_2, \\ldots, x_n)\\)\u89c6\u4e3a\u4e00\u4e2a\u5173\u4e8e\u4e00\u4e2a\u53d8\u91cf\\(x_i\\)\u7684\u51fd\u6570\uff0c\u800c\u5c06\u5176\u4ed6\u53d8\u91cf\\(x_j (j \\neq i, j = 1, 2, \\ldots, n)\\)\u89c6\u4e3a\u5e38\u6570\u3002 \u7136\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u8fd9\u4e2a\u51fd\u6570\u7684\u5bfc\u6570\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u5355\u53d8\u91cf\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\u6240\u505a\u7684\u90a3\u6837\uff0c\u800c\u5c06\u5176\u4ed6\u53d8\u91cf\u89c6\u4e3a\u5e38\u6570\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#243","title":"2.4.3 \u68af\u5ea6","text":"<p>\u6211\u4eec\u53ef\u4ee5\u8fde\u7ed3\u4e00\u4e2a\u591a\u5143\u51fd\u6570\u5bf9\u5176\u6240\u6709\u53d8\u91cf\u7684\u504f\u5bfc\u6570\uff0c\u4ee5\u5f97\u5230\u8be5\u51fd\u6570\u7684\u68af\u5ea6\uff08gradient\uff09\u5411\u91cf\u3002 \u5177\u4f53\u800c\u8a00\uff0c\u8bbe\u51fd\u6570\\(f: \\mathbb{R}^n \\rightarrow \\mathbb{R}\\)\u7684\u8f93\u5165\u662f\u4e00\u4e2a\\(n\\)\u7ef4\u5411\u91cf\\(\\mathbf{x} = [x_1, x_2, \\ldots, x_n]^\\top\\)\uff0c\u5b83\u7684\u8f93\u51fa\u662f\u6807\u91cf\u3002 \\(f(\\mathbf{x})\\)\u76f8\u5bf9\u4e8e\\(\\mathbf{x}\\)\u7684\u68af\u5ea6\u662f\u4e00\u4e2a\u5305\u542b\\(n\\)\u4e2a\u504f\u5bfc\u6570\u7684\u5411\u91cf\uff1a</p> \\[ \\nabla_{\\mathbf{x}} f(\\mathbf{x}) = \\begin{bmatrix} \\frac{\\partial f(\\mathbf{x})}{\\partial x_1} \\\\ \\frac{\\partial f(\\mathbf{x})}{\\partial x_2} \\\\ \\vdots \\\\ \\frac{\\partial f(\\mathbf{x})}{\\partial x_n} \\end{bmatrix}. \\] <p>\u5176\u4e2d \\(\\nabla_{\\mathbf{x}} f(\\mathbf{x})\\) \u8bfb\u4f5c\u201c\\(f(\\mathbf{x})\\)\u5173\u4e8e\\(\\mathbf{x}\\)\u7684\u68af\u5ea6\u201d\u3002 \u5728\u672c\u4e66\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u68af\u5ea6\u548c\u5bfc\u6570\u8fd9\u4e24\u4e2a\u672f\u8bed\u3002 \u68af\u5ea6\u662f\u504f\u5bfc\u6570\u7684\u5411\u91cf\uff0c\u800c\u5bfc\u6570\u662f\u504f\u5bfc\u6570\u7684\u6807\u91cf\u3002</p> <p>\u5047\u8bbe\\(x\\)\u4e3a\\(n\\)\u7ef4\u5411\u91cf\uff0c\u5728\u5fae\u5206\u591a\u5143\u51fd\u6570\u65f6\uff0c\u7ecf\u5e38\u4f7f\u7528\u4ee5\u4e0b\u89c4\u5219\uff1a</p> <ol> <li> <p>\u5bf9\u4e8e\u6240\u6709\u7684\\(\\mathbf{A} \\in \\mathbb{R}^{m \\times n}\\)\uff0c\u90fd\u6709\\(\\nabla_{\\mathbf{x}} \\mathbf{A}\\mathbf{x} = \\mathbf{A}^\\top\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u6240\u6709\u7684\\(\\mathbf{A} \\in \\mathbb{R}^{m \\times n}\\)\uff0c\u90fd\u6709\\(\\nabla_{\\mathbf{x}} \\mathbf{x}^\\top\\mathbf{A} = \\mathbf{A}\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u6240\u6709\u7684\\(\\mathbf{A} \\in \\mathbb{R}^{m \\times n}\\)\uff0c\u90fd\u6709\\(\\nabla_{\\mathbf{x}} \\mathbf{x}^\\top\\mathbf{A}\\mathbf{x} = (\\mathbf{A} + \\mathbf{A}^\\top)\\mathbf{x}\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u6240\u6709\u7684\u53ef\u5fae\u7684\u5355\u53d8\u91cf\u51fd\u6570\\(f\\)\uff0c\u90fd\u6709\\(\\nabla_{\\mathbf{x}} f(\\mathbf{x}) = \\left[\\frac{\\partial f(\\mathbf{x})}{\\partial \\mathbf{x}}\\right]^\\top\\)\u3002</p> </li> </ol>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#244","title":"2.4.4 \u94fe\u5f0f\u6cd5\u5219","text":"<p>\u7136\u800c\uff0c\u4e0a\u9762\u65b9\u6cd5\u53ef\u80fd\u5f88\u96be\u627e\u5230\u68af\u5ea6\u3002 \u8fd9\u662f\u56e0\u4e3a\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0c\u591a\u5143\u51fd\u6570\u901a\u5e38\u662f\u590d\u5408\uff08composite\uff09\u7684\uff0c \u6240\u4ee5\u96be\u4ee5\u5e94\u7528\u4e0a\u8ff0\u4efb\u4f55\u89c4\u5219\u6765\u5fae\u5206\u8fd9\u4e9b\u51fd\u6570\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u94fe\u5f0f\u6cd5\u5219\u53ef\u4ee5\u88ab\u7528\u6765\u5fae\u5206\u590d\u5408\u51fd\u6570\u3002</p> <p>\u5047\u8bbe\\(y=f(u)\\)\u548c\\(u=g(x)\\)\u662f\u4e24\u4e2a\u51fd\u6570\uff0c\u5176\u4e2d\\(u\\)\u662f\\(x\\)\u7684\u51fd\u6570\uff0c\\(y\\)\u662f\\(u\\)\u7684\u51fd\u6570\u3002 \u4e3a\u4e86\u627e\u5230\u590d\u5408\u51fd\u6570\\(y=f(g(x))\\)\u5173\u4e8e\\(x\\)\u7684\u5bfc\u6570\uff0c\u94fe\u5f0f\u6cd5\u5219\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u5173\u7cfb\uff1a</p> \\[ \\frac{dy}{dx} = \\frac{dy}{du} \\frac{du}{dx}. \\] <p>\u73b0\u5728\u8003\u8651\u4e00\u4e2a\u66f4\u4e00\u822c\u7684\u573a\u666f\uff0c\u5373\u51fd\u6570\u5177\u6709\u4efb\u610f\u6570\u91cf\u7684\u53d8\u91cf\u7684\u60c5\u51b5\u3002 \u5047\u8bbe\u53ef\u5fae\u5206\u51fd\u6570\\(y\\)\u662f\\(x_1, x_2, \\ldots, x_n\\)\u7684\u51fd\u6570\uff0c\u5176\u4e2d\\(x_i\\)\u662f\\(t_1, t_2, \\ldots, t_m\\)\u7684\u51fd\u6570\u3002 \u4e3a\u4e86\u8ba1\u7b97\u5bfc\u6570\\(\\frac{dy}{dt_i}\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\uff1a</p> \\[ \\frac{dy}{dt_i} = \\frac{dy}{dx_1} \\frac{dx_1}{dt_i} + \\frac{dy}{dx_2} \\frac{dx_2}{dt_i} + \\cdots + \\frac{dy}{dx_n} \\frac{dx_n}{dt_i}. \\]"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#245","title":"2.4.5 \u5c0f\u7ed3","text":"<ul> <li> <p>\u5fae\u5206\u548c\u79ef\u5206\u662f\u5fae\u79ef\u5206\u7684\u4e24\u4e2a\u5206\u652f\uff0c\u524d\u8005\u53ef\u4ee5\u5e94\u7528\u4e8e\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u4f18\u5316\u95ee\u9898\u3002</p> </li> <li> <p>\u5bfc\u6570\u53ef\u4ee5\u88ab\u89e3\u91ca\u4e3a\u51fd\u6570\u76f8\u5bf9\u4e8e\u5176\u53d8\u91cf\u7684\u77ac\u65f6\u53d8\u5316\u7387\uff0c\u5b83\u4e5f\u662f\u51fd\u6570\u66f2\u7ebf\u7684\u5207\u7ebf\u7684\u659c\u7387\u3002</p> </li> <li> <p>\u68af\u5ea6\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5176\u5206\u91cf\u662f\u591a\u53d8\u91cf\u51fd\u6570\u76f8\u5bf9\u4e8e\u5176\u6240\u6709\u53d8\u91cf\u7684\u504f\u5bfc\u6570\u3002</p> </li> <li> <p>\u94fe\u5f0f\u6cd5\u5219\u53ef\u4ee5\u7528\u6765\u5fae\u5206\u590d\u5408\u51fd\u6570\u3002</p> </li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#25","title":"2.5 \u81ea\u52a8\u5fae\u5206","text":"<p>\u6c42\u5bfc\u662f\u51e0\u4e4e\u6240\u6709\u6df1\u5ea6\u5b66\u4e60\u4f18\u5316\u7b97\u6cd5\u7684\u5173\u952e\u6b65\u9aa4\u3002 \u867d\u7136\u6c42\u5bfc\u7684\u8ba1\u7b97\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4e00\u4e9b\u57fa\u672c\u7684\u5fae\u79ef\u5206\u3002 \u4f46\u5bf9\u4e8e\u590d\u6742\u7684\u6a21\u578b\uff0c\u624b\u5de5\u8fdb\u884c\u66f4\u65b0\u662f\u4e00\u4ef6\u5f88\u75db\u82e6\u7684\u4e8b\u60c5\uff08\u800c\u4e14\u7ecf\u5e38\u5bb9\u6613\u51fa\u9519\uff09\u3002</p> <p>\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u901a\u8fc7\u81ea\u52a8\u8ba1\u7b97\u5bfc\u6570\uff0c\u5373\u81ea\u52a8\u5fae\u5206\uff08automatic differentiation\uff09\u6765\u52a0\u5feb\u6c42\u5bfc\u3002 \u5b9e\u9645\u4e2d\uff0c\u6839\u636e\u8bbe\u8ba1\u597d\u7684\u6a21\u578b\uff0c\u7cfb\u7edf\u4f1a\u6784\u5efa\u4e00\u4e2a**\u8ba1\u7b97\u56fe**\uff08computational graph\uff09\uff0c \u6765\u8ddf\u8e2a\u8ba1\u7b97\u662f**\u54ea\u4e9b\u6570\u636e\u901a\u8fc7\u54ea\u4e9b\u64cd\u4f5c\u7ec4\u5408\u8d77\u6765\u4ea7\u751f\u8f93\u51fa**\u3002 \u81ea\u52a8\u5fae\u5206\u4f7f\u7cfb\u7edf\u80fd\u591f\u968f\u540e\u53cd\u5411\u4f20\u64ad\u68af\u5ea6\u3002 \u8fd9\u91cc\uff0c\u53cd\u5411\u4f20\u64ad\uff08backpropagate\uff09\u610f\u5473\u7740\u8ddf\u8e2a\u6574\u4e2a\u8ba1\u7b97\u56fe\uff0c\u586b\u5145\u5173\u4e8e\u6bcf\u4e2a\u53c2\u6570\u7684\u504f\u5bfc\u6570\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#251","title":"2.5.1 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50","text":"<p>\u4f5c\u4e3a\u4e00\u4e2a\u6f14\u793a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6211\u4eec\u60f3\u5bf9\u51fd\u6570\\(y = 2\\mathbf{x}^\\top\\mathbf{x}\\)\u5173\u4e8e\u5217\u5411\u91cf\\(\\mathbf{x}\\)\u6c42\u5bfc\uff0c\u5176\u4e2d\\(\\mathbf{x} \\in \\mathbb{R}^d\\)\u3002 \u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u53d8\u91cf<code>x</code>\u5e76\u4e3a\u5176\u5206\u914d\u4e00\u4e2a\u521d\u59cb\u503c\u3002</p> PYTORCHTENSORFLOW <pre><code>import torch\n\nx = torch.arange(4.0)\nx\n</code></pre> <pre><code>tensor([0., 1., 2., 3.])\n</code></pre> <pre><code>import tensorflow as tf\n\nx = tf.range(4, dtype=tf.float32)\nx\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([0., 1., 2., 3.], dtype=float32)&gt;\n</code></pre> <p>\u5728\u6211\u4eec\u8ba1\u7b97<code>y</code>\u5173\u4e8e<code>x</code>\u7684\u68af\u5ea6\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5730\u65b9\u6765\u5b58\u50a8\u68af\u5ea6\u3002\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u4f1a\u5728\u6bcf\u6b21\u5bf9\u4e00\u4e2a\u53c2\u6570\u6c42\u5bfc\u65f6\u90fd\u5206\u914d\u65b0\u7684\u5185\u5b58\u3002 \u56e0\u4e3a\u6211\u4eec\u7ecf\u5e38\u4f1a\u6210\u5343\u4e0a\u4e07\u6b21\u5730\u66f4\u65b0\u76f8\u540c\u7684\u53c2\u6570\uff0c\u6bcf\u6b21\u90fd\u5206\u914d\u65b0\u7684\u5185\u5b58\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u5c06\u5185\u5b58\u8017\u5c3d\u3002 \u6ce8\u610f\uff0c\u4e00\u4e2a\u6807\u91cf\u51fd\u6570\u5173\u4e8e\u5411\u91cf\\(x\\)\u7684\u68af\u5ea6\u662f\u5411\u91cf\uff0c\u5e76\u4e14\u4e0e\\(x\\)\u5177\u6709\u76f8\u540c\u7684\u5f62\u72b6\u3002</p> PYTORCHTENSORFLOW <pre><code>x.requires_grad_(True)\n</code></pre> <pre><code>tensor([0., 1., 2., 3.], requires_grad=True)\n</code></pre> <pre><code>x = tf.Variable(x)\n</code></pre> <p>```text</p> <p>\u73b0\u5728\u8ba1\u7b97\\(y\\)</p> PYTORCHTENSORFLOW <pre><code>y = 2 * torch.dot(x, x)\ny\n</code></pre> <pre><code>tensor(28., grad_fn=&lt;MulBackward0&gt;)\n</code></pre> <pre><code>y = 2 * tf.tensordot(x, x, axes=1)\ny\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=28.0&gt;\n</code></pre> <p>x\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a4\u7684\u5411\u91cf\uff0c\u8ba1\u7b97<code>x</code>\u548c<code>x</code>\u7684\u5185\u79ef\uff0c\u5f97\u5230\u4e86\u6211\u4eec\u8d4b\u503c\u7ed9<code>y</code>\u7684\u6807\u91cf\u8f93\u51fa\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u53cd\u5411\u4f20\u64ad\u51fd\u6570\u6765\u81ea\u52a8\u8ba1\u7b97<code>y</code>\u5173\u4e8e<code>x</code>\u6bcf\u4e2a\u5206\u91cf\u7684\u68af\u5ea6\uff0c\u7136\u540e\u6253\u5370\u8fd9\u4e9b\u68af\u5ea6\u3002</p> PYTORCHTENSORFLOW <pre><code>y.backward()\nx.grad\n</code></pre> <pre><code>tensor([ 0.,  4.,  8., 12.])\n</code></pre> <pre><code>x_grad = t.gradient(y, x)\nx_grad\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([ 0.,  4.,  8., 12.], dtype=float32)&gt;\n</code></pre> <p>\u51fd\u6570\\(y = 2\\mathbf{x}^\\top\\mathbf{x}\\)\u5173\u4e8e\\(\\mathbf{x}\\)\u7684\u68af\u5ea6\u5e94\u4e3a\\(4\\mathbf{x}\\)\u3002 \u8ba9\u6211\u4eec\u5feb\u901f\u9a8c\u8bc1\u6211\u4eec\u60f3\u5230\u7684\u7ed3\u679c\u662f\u5426\u6b63\u786e\u3002</p> PYTORCHTENSORFLOW <pre><code>x.grad == 4 * x\n</code></pre> <pre><code>tensor([True, True, True, True])\n</code></pre> <pre><code>x_grad == 4 * x\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=bool, numpy=array([ True,  True,  True,  True])&gt;\n</code></pre> <p>\u73b0\u5728\u8ba1\u7b97<code>x</code>\u7684\u53e6\u4e00\u4e2a\u51fd\u6570\u3002</p> PYTORCHTENSORFLOW <pre><code>x.grad.zero_()\ny = x.sum()\ny.backward()\nx.grad\n</code></pre> <pre><code>tensor([1., 1., 1., 1.])\n</code></pre> <pre><code>with tf.GradientTape() as t:\n    y = tf.reduce_sum(x)\nt.gradient(y, x)  # \u88ab\u65b0\u8ba1\u7b97\u7684\u68af\u5ea6\u8986\u76d6\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([1., 1., 1., 1.], dtype=float32)&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#252","title":"2.5.2 \u975e\u6807\u91cf\u53d8\u91cf\u7684\u53cd\u5411\u4f20\u64ad","text":"<p>\u5f53y\u4e0d\u662f\u6807\u91cf\u65f6\uff0c\u5411\u91cfy\u5173\u4e8e\u5411\u91cfx\u7684\u5bfc\u6570\u7684\u6700\u81ea\u7136\u89e3\u91ca\u662f\u4e00\u4e2a\u77e9\u9635\u3002 \u5bf9\u4e8e\u9ad8\u9636\u548c\u9ad8\u7ef4\u7684y\u548cx\uff0c\u6c42\u5bfc\u7684\u7ed3\u679c\u53ef\u4ee5\u662f\u4e00\u4e2a\u9ad8\u9636\u5f20\u91cf\u3002</p> <p>\u7136\u800c\uff0c\u867d\u7136\u8fd9\u4e9b\u66f4\u5947\u7279\u7684\u5bf9\u8c61\u786e\u5b9e\u51fa\u73b0\u5728\u9ad8\u7ea7\u673a\u5668\u5b66\u4e60\u4e2d\uff08\u5305\u62ec\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff09\uff0c \u4f46\u5f53\u8c03\u7528\u5411\u91cf\u7684\u53cd\u5411\u8ba1\u7b97\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u8bd5\u56fe\u8ba1\u7b97\u4e00\u6279\u8bad\u7ec3\u6837\u672c\u4e2d\u6bcf\u4e2a\u7ec4\u6210\u90e8\u5206\u7684\u635f\u5931\u51fd\u6570\u7684\u5bfc\u6570\u3002 \u8fd9\u91cc\uff0c\u6211\u4eec\u7684\u76ee\u7684\u4e0d\u662f\u8ba1\u7b97\u5fae\u5206\u77e9\u9635\uff0c\u800c\u662f\u5355\u72ec\u8ba1\u7b97\u6279\u91cf\u4e2d\u6bcf\u4e2a\u6837\u672c\u7684\u504f\u5bfc\u6570\u4e4b\u548c\u3002</p> PYTORCHTENSORFLOW <pre><code># \u5bf9\u975e\u6807\u91cf\u8c03\u7528backward\u9700\u8981\u4f20\u5165\u4e00\u4e2agradient\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u6307\u5b9a\u5fae\u5206\u51fd\u6570\u5173\u4e8eself\u7684\u68af\u5ea6\u3002\n# \u672c\u4f8b\u53ea\u60f3\u6c42\u504f\u5bfc\u6570\u7684\u548c\uff0c\u6240\u4ee5\u4f20\u9012\u4e00\u4e2a1\u7684\u68af\u5ea6\u662f\u5408\u9002\u7684\nx.grad.zero_()\ny = x * x\n# \u7b49\u4ef7\u4e8ey.backward(torch.ones(len(x)))\ny.sum().backward()\nx.grad\n</code></pre> <pre><code>tensor([0., 2., 4., 6.])\n</code></pre> <pre><code>with tf.GradientTape() as t:\n    y = x * x\nt.gradient(y, x)# \u7b49\u4ef7\u4e8ey=tf.reduce_sum(x*x)\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=float32, numpy=array([0., 2., 4., 6.], dtype=float32)&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#253","title":"2.5.3 \u5206\u79bb\u8ba1\u7b97","text":"<p>\u6709\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u67d0\u4e9b\u8ba1\u7b97\u79fb\u52a8\u5230\u8bb0\u5f55\u7684\u8ba1\u7b97\u56fe\u4e4b\u5916\u3002 \u4f8b\u5982\uff0c\u5047\u8bbey\u662f\u4f5c\u4e3ax\u7684\u51fd\u6570\u8ba1\u7b97\u7684\uff0c\u800cz\u5219\u662f\u4f5c\u4e3ay\u548cx\u7684\u51fd\u6570\u8ba1\u7b97\u7684\u3002 \u60f3\u8c61\u4e00\u4e0b\uff0c\u6211\u4eec\u60f3\u8ba1\u7b97z\u5173\u4e8ex\u7684\u68af\u5ea6\uff0c\u4f46\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u5e0c\u671b\u5c06y\u89c6\u4e3a\u4e00\u4e2a\u5e38\u6570\uff0c \u5e76\u4e14\u53ea\u8003\u8651\u5230x\u5728y\u88ab\u8ba1\u7b97\u540e\u53d1\u6325\u7684\u4f5c\u7528\u3002</p> <p>\u8fd9\u91cc\u53ef\u4ee5\u5206\u79bby\u6765\u8fd4\u56de\u4e00\u4e2a\u65b0\u53d8\u91cfu\uff0c\u8be5\u53d8\u91cf\u4e0ey\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c \u4f46\u4e22\u5f03\u8ba1\u7b97\u56fe\u4e2d\u5982\u4f55\u8ba1\u7b97y\u7684\u4efb\u4f55\u4fe1\u606f\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u68af\u5ea6\u4e0d\u4f1a\u5411\u540e\u6d41\u7ecfu\u5230x\u3002 \u56e0\u6b64\uff0c\u4e0b\u9762\u7684\u53cd\u5411\u4f20\u64ad\u51fd\u6570\u8ba1\u7b97z=u*x\u5173\u4e8ex\u7684\u504f\u5bfc\u6570\uff0c\u540c\u65f6\u5c06u\u4f5c\u4e3a\u5e38\u6570\u5904\u7406\uff0c \u800c\u4e0d\u662fz=x*x*x\u5173\u4e8ex\u7684\u504f\u5bfc\u6570\u3002</p> PYTORCHTENSORFLOW <pre><code>x.grad.zero_()\ny = x * x\nu = y.detach()\nz = u * x\n\nz.sum().backward()\nx.grad == u\n</code></pre> <pre><code>tensor([True, True, True, True])\n</code></pre> <pre><code>with tf.GradientTape() as t:\n    y = x * x\n    u = tf.stop_gradient(y)\n    z = u * x\nt.gradient(z, x) == u\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(4,), dtype=bool, numpy=array([ True,  True,  True,  True])&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#254-python","title":"2.5.4 Python\u63a7\u5236\u6d41\u7684\u68af\u5ea6\u8ba1\u7b97","text":"<p>\u4f7f\u7528\u81ea\u52a8\u5fae\u5206\u7684\u4e00\u4e2a\u597d\u5904\u662f\uff1a \u5373\u4f7f\u6784\u5efa\u51fd\u6570\u7684\u8ba1\u7b97\u56fe\u9700\u8981\u901a\u8fc7Python\u63a7\u5236\u6d41\uff08\u4f8b\u5982\uff0c\u6761\u4ef6\u3001\u5faa\u73af\u6216\u4efb\u610f\u51fd\u6570\u8c03\u7528\uff09\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230\u7684\u53d8\u91cf\u7684\u68af\u5ea6\u3002 \u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0cwhile\u5faa\u73af\u7684\u8fed\u4ee3\u6b21\u6570\u548cif\u8bed\u53e5\u7684\u7ed3\u679c\u90fd\u53d6\u51b3\u4e8e\u8f93\u5165a\u7684\u503c\u3002</p> PYTORCHTENSORFLOW <pre><code>def f(a):\n    b = a * 2\n    while b.norm() &lt; 1000:\n        b = b * 2\n    if b.sum() &gt; 0:\n        c = b\n    else:\n        c = 100 * b\n    return c\n</code></pre> <p>```python def f(a):     b = a * 2     while tf.norm(b) &lt; 1000:         b = b * 2     if tf.reduce_sum(b) &gt; 0:         c = b     else:         c = 100 * b     return c</p> <p>\u8ba9\u6211\u4eec\u8ba1\u7b97\u68af\u5ea6</p> PYTORCHTENSORFLOW <pre><code>a = torch.randn(size=(), requires_grad=True)\nd = f(a)\nd.backward()\n</code></pre> <pre><code>a = tf.Variable(tf.random.normal(shape=()))\nwith tf.GradientTape() as t:\n    d = f(a)\nd_grad = t.gradient(d, a)\nd_grad\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=float32, numpy=51200.0&gt;\n</code></pre> <p>\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5206\u6790\u4e0a\u9762\u5b9a\u4e49\u7684f\u51fd\u6570\u3002 \u8bf7\u6ce8\u610f\uff0c\u5b83\u5728\u5176\u8f93\u5165a\u4e2d\u662f\u5206\u6bb5\u7ebf\u6027\u7684\u3002 \u6362\u8a00\u4e4b\uff0c\u5bf9\u4e8e\u4efb\u4f55a\uff0c\u5b58\u5728\u67d0\u4e2a\u5e38\u91cf\u6807\u91cfk\uff0c\u4f7f\u5f97f(a)=k*a\uff0c\u5176\u4e2dk\u7684\u503c\u53d6\u51b3\u4e8e\u8f93\u5165a\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528d/a\u9a8c\u8bc1\u68af\u5ea6\u662f\u5426\u6b63\u786e\u3002</p> PYTORCHTENSORFLOW <pre><code>a.grad == d / a\n</code></pre> <pre><code>tensor(True)\n</code></pre> <pre><code>d_grad == d / a\n</code></pre> <pre><code>&lt;tf.Tensor: shape=(), dtype=bool, numpy=True&gt;\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#255","title":"2.5.5 \u5c0f\u7ed3","text":"<p>\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u53ef\u4ee5\u81ea\u52a8\u8ba1\u7b97\u5bfc\u6570\uff1a\u6211\u4eec\u9996\u5148\u5c06\u68af\u5ea6\u9644\u52a0\u5230\u60f3\u8981\u5bf9\u5176\u8ba1\u7b97\u504f\u5bfc\u6570\u7684\u53d8\u91cf\u4e0a\uff0c\u7136\u540e\u8bb0\u5f55\u76ee\u6807\u503c\u7684\u8ba1\u7b97\uff0c\u6267\u884c\u5b83\u7684\u53cd\u5411\u4f20\u64ad\u51fd\u6570\uff0c\u5e76\u8bbf\u95ee\u5f97\u5230\u7684\u68af\u5ea6\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#26","title":"2.6 \u6982\u7387\u4e0e\u7edf\u8ba1","text":"<p>\u7b80\u5355\u5730\u8bf4\uff0c\u673a\u5668\u5b66\u4e60\u5c31\u662f\u505a\u51fa\u9884\u6d4b\u3002</p> <p>\u6839\u636e\u75c5\u4eba\u7684\u4e34\u5e8a\u75c5\u53f2\uff0c\u6211\u4eec\u53ef\u80fd\u60f3\u9884\u6d4b\u4ed6\u4eec\u5728\u4e0b\u4e00\u5e74\u5fc3\u810f\u75c5\u53d1\u4f5c\u7684\u6982\u7387\u3002 \u5728\u98de\u673a\u55b7\u6c14\u53d1\u52a8\u673a\u7684\u5f02\u5e38\u68c0\u6d4b\u4e2d\uff0c\u6211\u4eec\u60f3\u8981\u8bc4\u4f30\u4e00\u7ec4\u53d1\u52a8\u673a\u8bfb\u6570\u4e3a\u6b63\u5e38\u8fd0\u884c\u60c5\u51b5\u7684\u6982\u7387\u6709\u591a\u5927\u3002 \u5728\u5f3a\u5316\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u667a\u80fd\u4f53\uff08agent\uff09\u80fd\u5728\u4e00\u4e2a\u73af\u5883\u4e2d\u667a\u80fd\u5730\u884c\u52a8\u3002 \u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u8003\u8651\u5728\u6bcf\u79cd\u53ef\u884c\u7684\u884c\u4e3a\u4e0b\u83b7\u5f97\u9ad8\u5956\u52b1\u7684\u6982\u7387\u3002 \u5f53\u6211\u4eec\u5efa\u7acb\u63a8\u8350\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u8003\u8651\u6982\u7387\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u4e3a\u4e00\u5bb6\u5927\u578b\u5728\u7ebf\u4e66\u5e97\u5de5\u4f5c\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u4f30\u8ba1\u67d0\u4e9b\u7528\u6237\u8d2d\u4e70\u7279\u5b9a\u56fe\u4e66\u7684\u6982\u7387\u3002 \u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6982\u7387\u5b66\u3002 \u6709\u5b8c\u6574\u7684\u8bfe\u7a0b\u3001\u4e13\u4e1a\u3001\u8bba\u6587\u3001\u804c\u4e1a\u3001\u751a\u81f3\u9662\u7cfb\uff0c\u90fd\u81f4\u529b\u4e8e\u6982\u7387\u5b66\u7684\u5de5\u4f5c\u3002 \u6240\u4ee5\u5f88\u81ea\u7136\u5730\uff0c\u6211\u4eec\u5728\u8fd9\u90e8\u5206\u7684\u76ee\u6807\u4e0d\u662f\u6559\u6388\u6574\u4e2a\u79d1\u76ee\u3002 \u76f8\u53cd\uff0c\u6211\u4eec\u5e0c\u671b\u6559\u7ed9\u8bfb\u8005\u57fa\u7840\u7684\u6982\u7387\u77e5\u8bc6\uff0c\u4f7f\u8bfb\u8005\u80fd\u591f\u5f00\u59cb\u6784\u5efa\u7b2c\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c \u4ee5\u4fbf\u8bfb\u8005\u53ef\u4ee5\u5f00\u59cb\u81ea\u5df1\u63a2\u7d22\u5b83\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#261","title":"2.6.1 \u57fa\u672c\u6982\u7387\u8bba","text":"<p>\u5728\u7edf\u8ba1\u5b66\u4e2d\uff0c\u6211\u4eec\u628a\u4ece\u6982\u7387\u5206\u5e03\u4e2d\u62bd\u53d6\u6837\u672c\u7684\u8fc7\u7a0b\u79f0\u4e3a\u62bd\u6837\uff08sampling\uff09\u3002 \u7b3c\u7edf\u6765\u8bf4\uff0c\u53ef\u4ee5\u628a\u5206\u5e03\uff08distribution\uff09\u770b\u4f5c\u5bf9\u4e8b\u4ef6\u7684\u6982\u7387\u5206\u914d\uff0c \u7a0d\u540e\u6211\u4eec\u5c06\u7ed9\u51fa\u7684\u66f4\u6b63\u5f0f\u5b9a\u4e49\u3002 \u5c06\u6982\u7387\u5206\u914d\u7ed9\u4e00\u4e9b\u79bb\u6563\u9009\u62e9\u7684\u5206\u5e03\u79f0\u4e3a\u591a\u9879\u5206\u5e03\uff08multinomial distribution\uff09\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2611","title":"2.6.1.1 \u6982\u7387\u8bba\u516c\u7406","text":""},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2612","title":"2.6.1.2 \u968f\u673a\u53d8\u91cf","text":""},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#262","title":"2.6.2 \u5904\u7406\u591a\u4e2a\u968f\u673a\u53d8\u91cf","text":""},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2621","title":"2.6.2.1 \u8054\u5408\u6982\u7387","text":""},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2622","title":"2.6.2.2 \u6761\u4ef6\u6982\u7387","text":""},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2623","title":"2.6.2.3 \u8d1d\u53f6\u65af\u5b9a\u7406","text":"<p>\u4f7f\u7528\u6761\u4ef6\u6982\u7387\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u7edf\u8ba1\u5b66\u4e2d\u6700\u6709\u7528\u7684\u65b9\u7a0b\u4e4b\u4e00\uff1a Bayes\u5b9a\u7406\uff08Bayes\u2019 theorem\uff09\u3002  \u6839\u636e**\u4e58\u6cd5\u6cd5\u5219**\uff08multiplication rule \uff09\u53ef\u5f97\u5230 \\(P(A, B) =  P(B \\mid A) P(A)\\)\u3002 \u6839\u636e**\u5bf9\u79f0\u6027**\uff0c\\(P(A, B) = P(A \\mid B) P(B)\\)\u3002 \u56e0\u6b64\uff0c\\(P(A \\mid B) P(B) = P(B \\mid A) P(A)\\)\u3002  \u901a\u8fc7\u91cd\u65b0\u6392\u5217\uff0c\u6211\u4eec\u5f97\u5230**\u8d1d\u53f6\u65af\u5b9a\u7406**\uff1a $$ P(A \\mid B) = \\frac{P(B \\mid A) P(A)}{P(B)} $$</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2624","title":"2.6.2.4 \u8fb9\u9645\u5316 \uff08\u8fb9\u9645\u6982\u7387\uff0c\u8fb9\u9645\u5206\u5e03\uff09","text":"<p>\u6c42\u548c\u6cd5\u5219</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2625","title":"2.6.2.5 \u72ec\u7acb\u6027","text":"<p>\u53e6\u4e00\u4e2a\u6709\u7528\u5c5e\u6027\u662f\u4f9d\u8d56\uff08dependence\uff09\u4e0e\u72ec\u7acb\uff08independence\uff09\u3002 \u5982\u679c\u4e24\u4e2a\u968f\u673a\u53d8\u91cfA \u548cB\u662f\u72ec\u7acb\u7684\uff0c\u610f\u5473\u7740\u4e8b\u4ef6A\u7684\u53d1\u751f\u8ddfB\u4e8b\u4ef6\u7684\u53d1\u751f\u65e0\u5173\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#2626","title":"2.6.2.6 \u5e94\u7528","text":""},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#263","title":"2.6.3 \u671f\u671b\u548c\u65b9\u5dee","text":""},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#264","title":"2.6.4 \u5c0f\u7ed3","text":"<ul> <li> <p>\u6211\u4eec\u53ef\u4ee5\u4ece\u6982\u7387\u5206\u5e03\u4e2d\u91c7\u6837\u3002</p> </li> <li> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8054\u5408\u5206\u5e03\u3001\u6761\u4ef6\u5206\u5e03\u3001Bayes\u5b9a\u7406\u3001\u8fb9\u7f18\u5316\u548c\u72ec\u7acb\u6027\u5047\u8bbe\u6765\u5206\u6790\u591a\u4e2a\u968f\u673a\u53d8\u91cf\u3002</p> </li> <li> <p>\u671f\u671b\u548c\u65b9\u5dee\u4e3a\u6982\u7387\u5206\u5e03\u7684\u5173\u952e\u7279\u5f81\u7684\u6982\u62ec\u63d0\u4f9b\u4e86\u5b9e\u7528\u7684\u5ea6\u91cf\u5f62\u5f0f\u3002</p> </li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#27","title":"2.7 \u6587\u6863","text":"<p>\u7531\u4e8e\u7bc7\u5e45\u9650\u5236\uff0c\u672c\u4e66\u4e0d\u53ef\u80fd\u4ecb\u7ecd\u6bcf\u4e00\u4e2aPyTorch\u51fd\u6570\u548c\u7c7b\u3002 API\u6587\u6863\u3001\u5176\u4ed6\u6559\u7a0b\u548c\u793a\u4f8b\u63d0\u4f9b\u4e86\u672c\u4e66\u4e4b\u5916\u7684\u5927\u91cf\u6587\u6863\u3002 \u672c\u8282\u63d0\u4f9b\u4e86\u4e00\u4e9b\u67e5\u770bPyTorch API\u7684\u6307\u5bfc\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#271","title":"2.7.1 \u67e5\u627e\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u548c\u7c7b","text":"<p>\u8981\u67e5\u627e\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\u548c\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>dir</code>\u51fd\u6570\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u8be2\u968f\u673a\u6570\u751f\u6210\u6a21\u5757\u4e2d\u7684\u6240\u6709\u5c5e\u6027\uff1a</p> PYTORCHTENSORFLOW <pre><code>import torch\n</code></pre> <pre><code>dir(torch.distributions)\n</code></pre> <pre><code>['Bernoulli',\n'Beta',\n'Binomial',\n'Categorical',\n'Cauchy',\n'Chi2',\n'Dirichlet',\n'Distribution',\n'Exponential',\n'ExponentialFamily',\n'FisherSnedecor',\n'Gamma',\n'Geometric',\n'Gumbel',\n'HalfCauchy',\n'HalfNormal',\n'Independent',\n'KLDivLoss',\n'LKJCholesky',\n'Laplace',\n'LowRankMultivariateNormal',\n'MixtureSameFamily',\n'Multinomial',\n'MultivariateNormal',\n'NegativeBinomial',\n'Normal',\n'OneHotCategorical',\n'Pareto',\n'Poisson',\n'RelaxedBernoulli',\n'RelaxedOneHotCategorical',\n'StudentT',\n'TransformedDistribution',\n'Uniform',\n'VonMises',\n'Weibull',\n'Zipf',\n'__builtins__',\n'__cached__',\n'__doc__',\n'__file__',\n'__loader__',\n'__name__',\n'__package__',\n'__path__',\n'__spec__',\n'_lazy_init',\n'_standard_gamma',\n'constraints',\n'functional',\n'kl_divergence',\n'lazy_property',\n'register_kl',\n'transform_to',\n'utils']\n</code></pre> <pre><code>import tensorflow as tf\n</code></pre> <pre><code>dir(tf.distributions)\n</code></pre> <pre><code>    ['Bernoulli',\n'Beta',\n'Binomial',\n'Categorical',\n'Cauchy',\n'Chi2',\n'Dirichlet',\n'Distribution',\n'Exponential',\n'ExponentialFamily',\n'FisherSnedecor',\n'Gamma',\n'Geometric',\n'Gumbel',\n'HalfCauchy',\n'HalfNormal',\n'Independent',\n'KLDivLoss',\n'LKJCholesky',\n'Laplace',\n'LowRankMultivariateNormal',\n'MixtureSameFamily',\n'Multinomial',\n'MultivariateNormal',\n'NegativeBinomial',\n'Normal',\n'OneHotCategorical',\n'Pareto',\n'Poisson',\n'RelaxedBernoulli',\n'RelaxedOneHotCategorical',\n'StudentT',\n'TransformedDistribution',\n'Uniform',\n'VonMises',\n'Weibull',\n'Zipf',\n'__builtins__',\n'__cached__',\n'__doc__',\n'__file__',\n'__loader__',\n'__name__',\n'__package__',\n'__path__',\n'__spec__',\n'_lazy_init',\n'_standard_gamma',\n'constraints',\n'functional',\n'kl_divergence',\n'lazy_property',\n'register_kl',\n'transform_to',\n'utils']\n</code></pre> <p>\u901a\u5e38\u53ef\u4ee5\u5ffd\u7565\u4ee5\u201c__\u201d\uff08\u53cc\u4e0b\u5212\u7ebf\uff09\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u51fd\u6570\uff0c\u5b83\u4eec\u662fPython\u4e2d\u7684\u7279\u6b8a\u5bf9\u8c61\uff0c \u6216\u4ee5\u5355\u4e2a\u201c_\u201d\uff08\u5355\u4e0b\u5212\u7ebf\uff09\u5f00\u59cb\u7684\u51fd\u6570\uff0c\u5b83\u4eec\u901a\u5e38\u662f\u5185\u90e8\u51fd\u6570\u3002 \u6839\u636e\u5269\u4f59\u7684\u51fd\u6570\u540d\u6216\u5c5e\u6027\u540d\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u731c\u6d4b\u8fd9\u4e2a\u6a21\u5757\u63d0\u4f9b\u4e86\u5404\u79cd\u751f\u6210\u968f\u673a\u6570\u7684\u65b9\u6cd5\uff0c \u5305\u62ec\u4ece\u5747\u5300\u5206\u5e03\uff08uniform\uff09\u3001\u6b63\u6001\u5206\u5e03\uff08normal\uff09\u548c\u591a\u9879\u5206\u5e03\uff08multinomial\uff09\u4e2d\u91c7\u6837\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#272","title":"2.7.2 \u67e5\u627e\u7279\u5b9a\u51fd\u6570\u548c\u7c7b\u7684\u6240\u6709\u6210\u5458","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>help</code>\u51fd\u6570\u6765\u67e5\u627e\u7279\u5b9a\u51fd\u6570\u6216\u7c7b\u7684\u6240\u6709\u6210\u5458\u3002 \u8ba9\u6211\u4eec\u4ece<code>torch.randn</code>\u51fd\u6570\u5f00\u59cb\u3002 \u5982\u679c\u6211\u4eec\u4e0d\u77e5\u9053\u5982\u4f55\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u5b83\u5e76\u4f7f\u7528<code>help</code>\u51fd\u6570\u6765\u67e5\u627e\u7528\u6cd5\u3002</p> PYTORCHTENSORFLOW <pre><code>help(torch.randn)\n</code></pre> <pre><code>Help on built-in function randn:\n\nrandn(...)\n    randn(*size, out=None, dtype=None, layout=torch.strided, device=None, requires_grad=False) -&gt; Tensor\n\n    Returns a tensor filled with random numbers from a normal distribution\n    with mean `0` and variance `1` (also called the standard normal\n    distribution).\n\n    .. math::\n        \\text{{out}}_{{i}} \\sim \\mathcal{{N}}(0, 1)\n\n    The shape of the tensor is defined by the variable argument `size`.\n\n    Args:\n        {input}\n\n    Example::\n\n        &gt;&gt;&gt; torch.randn(4)\n        tensor([-2.1436,  0.9966,  0.6479, -0.4219])\n        &gt;&gt;&gt; torch.randn(2, 3)\n        tensor([[ 1.2074, -0.9477, -0.1569],\n                [ 0.1886, -0.3753, -0.1837]])\n    \"\"\"\n    return torch._C._VariableFunctions.randn(size, dtype=dtype, layout=layout, device=device, requires_grad=requires_grad)\n</code></pre> <pre><code>help(tf.random.normal)\n</code></pre> <pre><code>Help on built-in function randn:\n\nrandn(...)\n    randn(*size, out=None, dtype=None, layout=torch.strided, device=None, requires_grad=False) -&gt; Tensor\n\n    Returns a tensor filled with random numbers from a normal distribution\n    with mean `0` and variance `1` (also called the standard normal\n    distribution).\n\n    .. math::\n        \\text{{out}}_{{i}} \\sim \\mathcal{{N}}(0, 1)\n\n    The shape of the tensor is defined by the variable argument `size`.\n\n    Args:\n        {input}\n\n    Example::\n\n        &gt;&gt;&gt; torch.randn(4)\n        tensor([-2.1436,  0.9966,  0.6479, -0.4219])\n        &gt;&gt;&gt; torch.randn(2, 3)\n        tensor([[ 1.2074, -0.9477, -0.1569],\n                [ 0.1886, -0.3753, -0.1837]])\n    \"\"\"\n    return torch._C._VariableFunctions.randn(size, dtype=dtype, layout=layout, device=device, requires_grad=requires_grad)\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH2-PRE/ch2-pre/#273","title":"2.7.3 \u5c0f\u7ed3","text":"<ul> <li> <p>\u5b98\u65b9\u6587\u6863\u63d0\u4f9b\u4e86\u672c\u4e66\u4e4b\u5916\u7684\u5927\u91cf\u63cf\u8ff0\u548c\u793a\u4f8b\u3002</p> </li> <li> <p>\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528dir\u548chelp\u51fd\u6570\u6216\u5728Jupyter\u8bb0\u4e8b\u672c\u4e2d\u4f7f\u7528?\u548c??\u67e5\u770bAPI\u7684\u7528\u6cd5\u6587\u6863\u3002</p> </li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/","title":"CH03 - \u7ebf\u6027\u795e\u7ecf\u7f51\u7edc","text":"<p>\u5728\u4ecb\u7ecd\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u7684\u57fa\u7840\u77e5\u8bc6\u3002 \u672c\u7ae0\u6211\u4eec\u5c06\u4ecb\u7ecd\u795e\u7ecf\u7f51\u7edc\u7684\u6574\u4e2a\u8bad\u7ec3\u8fc7\u7a0b\uff0c \u5305\u62ec\uff1a\u5b9a\u4e49\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\u3001\u6570\u636e\u5904\u7406\u3001\u6307\u5b9a\u635f\u5931\u51fd\u6570\u548c\u5982\u4f55\u8bad\u7ec3\u6a21\u578b\u3002 \u4e3a\u4e86\u66f4\u5bb9\u6613\u5b66\u4e60\uff0c\u6211\u4eec\u5c06\u4ece\u7ecf\u5178\u7b97\u6cd5\u2014\u2014\u2014\u2014\u7ebf\u6027\u795e\u7ecf\u7f51\u7edc\u5f00\u59cb\uff0c\u4ecb\u7ecd\u795e\u7ecf\u7f51\u7edc\u7684\u57fa\u7840\u77e5\u8bc6\u3002 \u7ecf\u5178\u7edf\u8ba1\u5b66\u4e60\u6280\u672f\u4e2d\u7684\u7ebf\u6027\u56de\u5f52\u548csoftmax\u56de\u5f52\u53ef\u4ee5\u89c6\u4e3a\u7ebf\u6027\u795e\u7ecf\u7f51\u7edc\uff0c \u8fd9\u4e9b\u77e5\u8bc6\u5c06\u4e3a\u672c\u4e66\u5176\u4ed6\u90e8\u5206\u4e2d\u66f4\u590d\u6742\u7684\u6280\u672f\u5960\u5b9a\u57fa\u7840\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#31","title":"3.1. \u7ebf\u6027\u56de\u5f52","text":"<p>\u56de\u5f52\uff08regression\uff09\u662f\u80fd\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u81ea\u53d8\u91cf\u4e0e\u56e0\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb\u5efa\u6a21\u7684\u4e00\u7c7b\u65b9\u6cd5\u3002 \u5728\u81ea\u7136\u79d1\u5b66\u548c\u793e\u4f1a\u79d1\u5b66\u9886\u57df\uff0c\u56de\u5f52\u7ecf\u5e38\u7528\u6765\u8868\u793a\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p>\u5728\u673a\u5668\u5b66\u4e60\u9886\u57df\u4e2d\u7684\u5927\u591a\u6570\u4efb\u52a1\u901a\u5e38\u90fd\u4e0e**\u9884\u6d4b**\uff08prediction\uff09\u6709\u5173\u3002 \u5f53\u6211\u4eec\u60f3\u9884\u6d4b\u4e00\u4e2a\u6570\u503c\u65f6\uff0c\u5c31\u4f1a\u6d89\u53ca\u5230\u56de\u5f52\u95ee\u9898\u3002 \u5e38\u89c1\u7684\u4f8b\u5b50\u5305\u62ec\uff1a\u9884\u6d4b\u4ef7\u683c\uff08\u623f\u5c4b\u3001\u80a1\u7968\u7b49\uff09\u3001\u9884\u6d4b\u4f4f\u9662\u65f6\u95f4\uff08\u9488\u5bf9\u4f4f\u9662\u75c5\u4eba\u7b49\uff09\u3001 \u9884\u6d4b\u9700\u6c42\uff08\u96f6\u552e\u9500\u91cf\u7b49\uff09\u3002 \u4f46\u4e0d\u662f\u6240\u6709\u7684\u9884\u6d4b\u90fd\u662f\u56de\u5f52\u95ee\u9898\u3002 \u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5206\u7c7b\u95ee\u9898\u3002**\u5206\u7c7b**\u95ee\u9898\u7684\u76ee\u6807\u662f\u9884\u6d4b\u6570\u636e\u5c5e\u4e8e\u4e00\u7ec4\u7c7b\u522b\u4e2d\u7684\u54ea\u4e00\u4e2a\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#311","title":"3.1.1. \u7ebf\u6027\u56de\u5f52\u7684\u57fa\u672c\u5143\u7d20","text":"<p>\u7ebf\u6027\u56de\u5f52\uff08linear regression\uff09\u53ef\u4ee5\u8ffd\u6eaf\u523019\u4e16\u7eaa\u521d\uff0c \u5b83\u5728\u56de\u5f52\u7684\u5404\u79cd\u6807\u51c6\u5de5\u5177\u4e2d\u6700\u7b80\u5355\u800c\u4e14\u6700\u6d41\u884c\u3002 \u7ebf\u6027\u56de\u5f52\u57fa\u4e8e\u51e0\u4e2a\u7b80\u5355\u7684\u5047\u8bbe\uff1a \u9996\u5148\uff0c\u5047\u8bbe\u81ea\u53d8\u91cf\\(x\\)\u548c\u56e0\u53d8\u91cf\\(y\\)\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u7ebf\u6027\u7684\uff0c \u5373\\(y\\)\u53ef\u4ee5\u8868\u793a\u4e3a\\(x\\)\u4e2d\u5143\u7d20\u7684\u52a0\u6743\u548c\uff0c\u8fd9\u91cc\u901a\u5e38\u5141\u8bb8\u5305\u542b\u89c2\u6d4b\u503c\u7684\u4e00\u4e9b\u566a\u58f0\uff1b \u5176\u6b21\uff0c\u6211\u4eec\u5047\u8bbe\u4efb\u4f55\u566a\u58f0\u90fd\u6bd4\u8f83\u6b63\u5e38\uff0c\u5982\u566a\u58f0\u9075\u5faa\u6b63\u6001\u5206\u5e03\u3002</p> <p>\u4e3a\u4e86\u89e3\u91ca\u7ebf\u6027\u56de\u5f52\uff0c\u6211\u4eec\u4e3e\u4e00\u4e2a\u5b9e\u9645\u7684\u4f8b\u5b50\uff1a \u6211\u4eec\u5e0c\u671b\u6839\u636e\u623f\u5c4b\u7684\u9762\u79ef\uff08\u5e73\u65b9\u82f1\u5c3a\uff09\u548c\u623f\u9f84\uff08\u5e74\uff09\u6765\u4f30\u7b97\u623f\u5c4b\u4ef7\u683c\uff08\u7f8e\u5143\uff09\u3002 \u4e3a\u4e86\u5f00\u53d1\u4e00\u4e2a\u80fd\u9884\u6d4b\u623f\u4ef7\u7684\u6a21\u578b\uff0c\u6211\u4eec\u9700\u8981\u6536\u96c6\u4e00\u4e2a\u771f\u5b9e\u7684\u6570\u636e\u96c6\u3002 \u8fd9\u4e2a\u6570\u636e\u96c6\u5305\u62ec\u4e86\u623f\u5c4b\u7684\u9500\u552e\u4ef7\u683c\u3001\u9762\u79ef\u548c\u623f\u9f84\u3002 \u5728\u673a\u5668\u5b66\u4e60\u7684\u672f\u8bed\u4e2d\uff0c\u8be5\u6570\u636e\u96c6\u79f0\u4e3a\u8bad\u7ec3\u6570\u636e\u96c6\uff08training data set\uff09 \u6216\u8bad\u7ec3\u96c6\uff08training set\uff09\u3002 \u6bcf\u884c\u6570\u636e\uff08\u6bd4\u5982\u4e00\u6b21\u623f\u5c4b\u4ea4\u6613\u76f8\u5bf9\u5e94\u7684\u6570\u636e\uff09\u79f0\u4e3a\u6837\u672c\uff08sample\uff09\uff0c \u4e5f\u53ef\u4ee5\u79f0\u4e3a\u6570\u636e\u70b9\uff08data point\uff09\u6216\u6570\u636e\u6837\u672c\uff08data instance\uff09\u3002 \u6211\u4eec\u628a\u8bd5\u56fe\u9884\u6d4b\u7684\u76ee\u6807\uff08\u6bd4\u5982\u9884\u6d4b\u623f\u5c4b\u4ef7\u683c\uff09\u79f0\u4e3a\u6807\u7b7e\uff08label\uff09\u6216\u76ee\u6807\uff08target\uff09\u3002 \u9884\u6d4b\u6240\u4f9d\u636e\u7684\u81ea\u53d8\u91cf\uff08\u9762\u79ef\u548c\u623f\u9f84\uff09\u79f0\u4e3a\u7279\u5f81\uff08feature\uff09\u6216\u534f\u53d8\u91cf\uff08covariate\uff09\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3111","title":"3.1.1.1. \u7ebf\u6027\u6a21\u578b","text":"<p>\u7ebf\u6027\u5047\u8bbe\u662f\u6307\u76ee\u6807\uff08\u623f\u5c4b\u4ef7\u683c\uff09\u53ef\u4ee5\u8868\u793a\u4e3a\u7279\u5f81\uff08\u9762\u79ef\u548c\u623f\u9f84\uff09\u7684\u52a0\u6743\u548c,\u6743\u91cd\u51b3\u5b9a\u4e86\u6bcf\u4e2a\u7279\u5f81\u5bf9\u6211\u4eec\u9884\u6d4b\u503c\u7684\u5f71\u54cd. \u5e26\u6743\u91cd\u7684\u7ebf\u6027\u56de\u5f52\u662f\u8f93\u5165\u7279\u5f81\u7684\u4e00\u4e2a \u4eff\u5c04\u53d8\u6362\uff08affine transformation\uff09\u3002 \u4eff\u5c04\u53d8\u6362\u7684\u7279\u70b9\u662f\u901a\u8fc7\u52a0\u6743\u548c\u5bf9\u7279\u5f81\u8fdb\u884c\u7ebf\u6027\u53d8\u6362\uff08linear transformation\uff09\uff0c \u5e76\u901a\u8fc7\u504f\u7f6e\u9879\u6765\u8fdb\u884c\u5e73\u79fb\uff08translation\uff09\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u5bfb\u627e\u6a21\u578b\u7684\u6743\u91cd\\(w\\)\u548c\u504f\u7f6e\\(b\\)\uff0c \u4f7f\u5f97\u6839\u636e\u6a21\u578b\u505a\u51fa\u7684\u9884\u6d4b\u5927\u4f53\u7b26\u5408\u6570\u636e\u91cc\u7684\u771f\u5b9e\u4ef7\u683c\u3002 \u8f93\u51fa\u7684\u9884\u6d4b\u503c\u7531\u8f93\u5165\u7279\u5f81\u901a\u8fc7\u7ebf\u6027\u6a21\u578b\u7684\u4eff\u5c04\u53d8\u6362\u51b3\u5b9a\uff0c\u4eff\u5c04\u53d8\u6362\u7531\u6240\u9009\u6743\u91cd\u548c\u504f\u7f6e\u786e\u5b9a\u3002</p> <p>\u800c\u5728\u673a\u5668\u5b66\u4e60\u9886\u57df\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u7684\u662f\u9ad8\u7ef4\u6570\u636e\u96c6\uff0c\u5efa\u6a21\u65f6\u91c7\u7528\u7ebf\u6027\u4ee3\u6570\u8868\u793a\u6cd5\u4f1a\u6bd4\u8f83\u65b9\u4fbf\u3002 \u5f53\u6211\u4eec\u7684\u8f93\u5165\u5305\u542b\\(d\\)\u4e2a\u7279\u5f81\u65f6\uff0c\u6211\u4eec\u5c06\u9884\u6d4b\u7ed3\u679c\\(\\hat{y}\\)\u8868\u793a\u4e3a\uff1a</p> \\[\\hat{y} = w_1 x_1 + w_2 x_2 + \\cdots + w_d x_d + b\\] <p>\u7528\u5411\u91cf\u8868\u793a\uff0c\u53ef\u4ee5\u66f4\u7b80\u6d01\u5730\u8868\u8fbe\u4e3a\uff1a</p> \\[\\hat{y} = \\mathbf{w}^\\top \\mathbf{x} + b\\] <p>\u5176\u4e2d\uff0c\\(\\mathbf{w}\\)\u662f\u6743\u91cd\u5411\u91cf\uff0c\\(\\mathbf{x}\\)\u662f\u8f93\u5165\u5411\u91cf\uff0c\\(b\\)\u662f\u504f\u7f6e\u3002</p> <p>\u5728\u5f00\u59cb\u5bfb\u627e\u6700\u597d\u7684\u6a21\u578b\u53c2\u6570\uff08model parameters\uff09\\(w\\)\u548c\\(bb\\)\u4e4b\u524d\uff0c \u6211\u4eec\u8fd8\u9700\u8981\u4e24\u4e2a\u4e1c\u897f\uff1a \uff081\uff09\u4e00\u79cd\u6a21\u578b\u8d28\u91cf\u7684\u5ea6\u91cf\u65b9\u5f0f\uff1b \uff082\uff09\u4e00\u79cd\u80fd\u591f\u66f4\u65b0\u6a21\u578b\u4ee5\u63d0\u9ad8\u6a21\u578b\u9884\u6d4b\u8d28\u91cf\u7684\u65b9\u6cd5\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3112","title":"3.1.1.2 \u635f\u5931\u51fd\u6570","text":"<p>\u5728\u6211\u4eec\u5f00\u59cb\u8003\u8651\u5982\u4f55\u7528\u6a21\u578b\u62df\u5408\uff08fit\uff09\u6570\u636e\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u786e\u5b9a\u4e00\u4e2a\u62df\u5408\u7a0b\u5ea6\u7684\u5ea6\u91cf\u3002 \u635f\u5931\u51fd\u6570\uff08loss function\uff09\u80fd\u591f\u91cf\u5316\u76ee\u6807\u7684\u5b9e\u9645\u503c\u4e0e\u9884\u6d4b\u503c\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002 \u901a\u5e38\u6211\u4eec\u4f1a\u9009\u62e9\u975e\u8d1f\u6570\u4f5c\u4e3a\u635f\u5931\uff0c\u4e14\u6570\u503c\u8d8a\u5c0f\u8868\u793a\u635f\u5931\u8d8a\u5c0f\uff0c\u5b8c\u7f8e\u9884\u6d4b\u65f6\u7684\u635f\u5931\u4e3a0\u3002 \u56de\u5f52\u95ee\u9898\u4e2d\u6700\u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\u662f\u5e73\u65b9\u8bef\u5dee\u51fd\u6570\u3002</p> <p>\u5f53\u6837\u672c\\(i\\)\u7684\u9884\u6d4b\u503c\u4e3a\\(\\hat{y}^{(i)}\\)\uff0c\u771f\u5b9e\u6807\u7b7e\u4e3a\\(y^{(i)}\\)\u65f6\uff0c\u5e73\u65b9\u8bef\u5dee\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[\\mathcal{L}(\\mathbf{w},b) = \\frac{1}{n} \\sum_{i=1}^n \\left(\\hat{y}^{(i)} - y^{(i)}\\right)^2\\] <p>\u5e38\u6570\\(\\frac{1}{2}\\)\u4f7f\u5bf9\u5e73\u65b9\u9879\u6c42\u5bfc\u540e\u7684\u5e38\u6570\u7cfb\u6570\u4e3a1\uff0c\u8fd9\u6837\u5728\u5f62\u5f0f\u4e0a\u7a0d\u5fae\u7b80\u5355\u4e00\u4e9b\u3002 \u4f46\u8fd9\u6837\u4e0d\u4f1a\u5e26\u6765\u672c\u8d28\u7684\u5dee\u522b\u3002</p> <p>\u7531\u4e8e\u5e73\u65b9\u8bef\u5dee\u51fd\u6570\u4e2d\u7684\u4e8c\u6b21\u65b9\u9879\uff0c \u4f30\u8ba1\u503c\\(\\hat{y}^{(i)}\\)\u548c\u89c2\u6d4b\u503c\\(y^{(i)}\\)\u4e4b\u95f4\u8f83\u5927\u7684\u5dee\u5f02\u5c06\u5bfc\u81f4\u66f4\u5927\u7684\u635f\u5931\u3002 \u4e3a\u4e86\u5ea6\u91cf\u6a21\u578b\u5728\u6574\u4e2a\u6570\u636e\u96c6\u4e0a\u7684\u8d28\u91cf\uff0c\u6211\u4eec\u9700\u8ba1\u7b97\u5728\u8bad\u7ec3\u96c6\u4e2a\u6837\u672c\u4e0a\u7684\u635f\u5931\u5747\u503c\uff08\u4e5f\u7b49\u4ef7\u4e8e\u6c42\u548c\uff09\u3002</p> \\[ \\mathcal{L}(\\mathbf{w},b) = \\frac{1}{n} \\sum_{i=1}^n \\left(\\mathbf{w}^\\top \\mathbf{x}^{(i)} + b - y^{(i)}\\right)^2 \\] <p>\u5728\u8bad\u7ec3\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u5bfb\u627e\u4e00\u7ec4\u6a21\u578b\u53c2\u6570\uff0c\u8bb0\u4e3a\\(\\mathbf{w}^*,b^*\\)\uff0c\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u6700\u5c0f\uff1a</p> \\[\\mathcal{L}(\\mathbf{w}^*,b^*) = \\min_{\\mathbf{w},b} \\mathcal{L}(\\mathbf{w},b)\\]"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3113","title":"3.1.1.3 \u89e3\u6790\u89e3","text":"<p>\u7ebf\u6027\u56de\u5f52\u521a\u597d\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f18\u5316\u95ee\u9898\u3002 \u4e0e\u6211\u4eec\u5c06\u5728\u672c\u4e66\u4e2d\u6240\u8bb2\u5230\u7684\u5176\u4ed6\u5927\u90e8\u5206\u6a21\u578b\u4e0d\u540c\uff0c\u7ebf\u6027\u56de\u5f52\u7684\u89e3\u53ef\u4ee5\u7528\u4e00\u4e2a\u516c\u5f0f\u7b80\u5355\u5730\u8868\u8fbe\u51fa\u6765\uff0c \u8fd9\u7c7b\u89e3\u53eb\u4f5c\u89e3\u6790\u89e3\uff08analytical solution\uff09\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u504f\u7f6e\\(b\\)\u5408\u5e76\u5230\u53c2\u6570\\(\\mathbf{w}\\)\u4e2d\u3002 \u5408\u5e76\u65b9\u6cd5\u662f\u5728\u6240\u6709\u6837\u672c\u4e0a\u6dfb\u52a0\u4e00\u5217\uff0c\u8be5\u5217\u6052\u7b49\u4e8e1\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8003\u8651\u4e00\u4e2a\u6743\u91cd\u5411\u91cf\\(\\mathbf{w}\\)\uff0c\u4e14\u6570\u636e\u6837\u672c\u4e3a\\(\\mathbf{x} \\in \\mathbb{R}^{d+1}\\)\u3002 \u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6a21\u578b\u53c2\u6570\\(\\mathbf{w}\\)\u6c42\u5bfc\u5e76\u4ee4\u5bfc\u6570\u7b49\u4e8e0\u6765\u627e\u5230\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u7684\u53c2\u6570\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6c42\u89e3\u4ee5\u4e0b\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff1a</p> \\[\\mathbf{X}^\\top \\mathbf{X} \\mathbf{w} = \\mathbf{X}^\\top \\mathbf{y}\\] <p>\u5f97\u5230\u7684\u89e3\u6790\u89e3\u4e3a\uff1a</p> \\[\\mathbf{w} = (\\mathbf{X}^\\top \\mathbf{X})^{-1} \\mathbf{X}^\\top \\mathbf{y}\\] <p>\u50cf\u7ebf\u6027\u56de\u5f52\u8fd9\u6837\u7684\u7b80\u5355\u95ee\u9898\u5b58\u5728\u89e3\u6790\u89e3\uff0c\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u7684\u95ee\u9898\u90fd\u5b58\u5728\u89e3\u6790\u89e3\u3002 \u89e3\u6790\u89e3\u53ef\u4ee5\u8fdb\u884c\u5f88\u597d\u7684\u6570\u5b66\u5206\u6790\uff0c\u4f46\u89e3\u6790\u89e3\u5bf9\u95ee\u9898\u7684\u9650\u5236\u5f88\u4e25\u683c\uff0c\u5bfc\u81f4\u5b83\u65e0\u6cd5\u5e7f\u6cdb\u5e94\u7528\u5728\u6df1\u5ea6\u5b66\u4e60\u91cc\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3114","title":"3.1.1.4 \u968f\u673a\u68af\u5ea6\u4e0b\u964d","text":"<p>\u5373\u4f7f\u5728\u6211\u4eec\u65e0\u6cd5\u5f97\u5230\u89e3\u6790\u89e3\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u6709\u6548\u5730\u8bad\u7ec3\u6a21\u578b\u3002 \u5728\u8bb8\u591a\u4efb\u52a1\u4e0a\uff0c\u90a3\u4e9b\u96be\u4ee5\u4f18\u5316\u7684\u6a21\u578b\u6548\u679c\u8981\u66f4\u597d\u3002 \u56e0\u6b64\uff0c\u5f04\u6e05\u695a\u5982\u4f55\u8bad\u7ec3\u8fd9\u4e9b\u96be\u4ee5\u4f18\u5316\u7684\u6a21\u578b\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002</p> <p>\u672c\u4e66\u4e2d\u6211\u4eec\u7528\u5230\u4e00\u79cd\u540d\u4e3a**\u68af\u5ea6\u4e0b\u964d**\uff08gradient descent\uff09\u7684\u65b9\u6cd5\uff0c \u8fd9\u79cd\u65b9\u6cd5\u51e0\u4e4e\u53ef\u4ee5\u4f18\u5316\u6240\u6709\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u3002 \u5b83\u901a\u8fc7\u4e0d\u65ad\u5730\u5728\u635f\u5931\u51fd\u6570\u9012\u51cf\u7684\u65b9\u5411\u4e0a\u66f4\u65b0\u53c2\u6570\u6765\u964d\u4f4e\u8bef\u5dee\u3002</p> <p>\u68af\u5ea6\u4e0b\u964d\u6700\u7b80\u5355\u7684\u7528\u6cd5\u662f**\u8ba1\u7b97\u635f\u5931\u51fd\u6570\uff08\u6570\u636e\u96c6\u4e2d\u6240\u6709\u6837\u672c\u7684\u635f\u5931\u5747\u503c\uff09 \u5173\u4e8e\u6a21\u578b\u53c2\u6570\u7684\u5bfc\u6570\uff08\u5728\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u68af\u5ea6\uff09\u3002** \u4f46\u5b9e\u9645\u4e2d\u7684\u6267\u884c\u53ef\u80fd\u4f1a\u975e\u5e38\u6162\uff1a\u56e0\u4e3a\u5728\u6bcf\u4e00\u6b21\u66f4\u65b0\u53c2\u6570\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u904d\u5386\u6574\u4e2a\u6570\u636e\u96c6\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5728\u6bcf\u6b21\u9700\u8981\u8ba1\u7b97\u66f4\u65b0\u7684\u65f6\u5019\u968f\u673a\u62bd\u53d6\u4e00\u5c0f\u6279\u6837\u672c\uff0c \u8fd9\u79cd\u53d8\u4f53\u53eb\u505a\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08minibatch stochastic gradient descent\uff09\u3002</p> <p>\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u968f\u673a\u62bd\u6837\u4e00\u4e2a\u5c0f\u6279\u91cf\\(\\mathcal{B}\\)\uff0c\u5b83\u5305\u542b\u4e86\\(\\mathcal{B}\\)\u4e2a\u6570\u636e\u6837\u672c\u3002 \u6211\u4eec\u7528\\(\\mathcal{L}(\\mathbf{w},b;\\mathcal{B})\\)\u6765\u8868\u793a\u5c0f\u6279\u91cf\\(\\mathcal{B}\\)\u4e0a\u7684\u635f\u5931\uff0c \u5e76\u4e14\u7528\\(\\mathbf{w}\\)\u548c\\(b\\)\u8868\u793a\u53c2\u6570\u3002 \u5728\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u4e2d\uff0c\u6a21\u578b\u53c2\u6570\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\u7684\u66f4\u65b0\u91cf\u4e3a\uff1a</p> \\[\\mathbf{w} \\leftarrow \\mathbf{w} - \\frac{\\eta}{|\\mathcal{B}|} \\sum_{i \\in \\mathcal{B}} \\nabla_{\\mathbf{w}} \\mathcal{L}^{(i)}(\\mathbf{w},b)\\] \\[b \\leftarrow b - \\frac{\\eta}{|\\mathcal{B}|} \\sum_{i \\in \\mathcal{B}} \\nabla_{b} \\mathcal{L}^{(i)}(\\mathbf{w},b)\\] <p>\u5728\u4e0a\u5f0f\u4e2d\uff0c\\(\\eta\\)\uff08\u53d6\u6b63\u6570\uff09\u53eb\u4f5c**\u5b66\u4e60\u7387**\uff08learning rate\uff09\u3002 \u7531\u4e8e\\(\\mathcal{L}(\\mathbf{w},b;\\mathcal{B})\\)\u662f\u5173\u4e8e\u5355\u4e2a\u6837\u672c\u7684\u635f\u5931\u51fd\u6570\uff0c \u56e0\u6b64\u4e0a\u5f0f\u4e2d\u7684\u68af\u5ea6\u4e5f\u662f\u57fa\u4e8e\u5355\u4e2a\u6837\u672c\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u7684\u7d2f\u52a0\u3002 \u7ed9\u5b9a\u5b66\u4e60\u7387\\(\\eta\\)\u548c\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6240\u4f7f\u7528\u7684\u6279\u91cf\u5927\u5c0f\uff0c \u6a21\u578b\u53c2\u6570\u5c06\u5982\u4f55\u66f4\u65b0\u53d6\u51b3\u4e8e\u635f\u5931\u66f2\u7ebf\u7684\u5f62\u72b6\u3002</p> <p>\u6211\u4eec\u7528\u4e0b\u9762\u7684\u6570\u5b66\u516c\u5f0f\u6765\u8868\u793a\u8fd9\u4e00\u66f4\u65b0\u8fc7\u7a0b\uff08\\(\\partial\\)\u7b26\u53f7\u8868\u793a\u504f\u5bfc\u6570\uff09\uff1a</p> \\[\\left( \\mathbf{w}, b \\right) \\leftarrow \\left( \\mathbf{w}, b \\right) - \\eta \\left( \\frac{\\partial \\mathcal{L}}{\\partial \\mathbf{w}}, \\frac{\\partial \\mathcal{L}}{\\partial b} \\right)\\] <p>\u603b\u7ed3\u4e00\u4e0b\uff0c\u7b97\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a \uff081\uff09\u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570\u7684\u503c\uff0c\u5982\u968f\u673a\u521d\u59cb\u5316\uff1b \uff082\uff09\u4ece\u6570\u636e\u96c6\u4e2d\u968f\u673a\u62bd\u53d6\u5c0f\u6279\u91cf\u6837\u672c\u4e14\u5728\u8d1f\u68af\u5ea6\u7684\u65b9\u5411\u4e0a\u66f4\u65b0\u53c2\u6570\uff0c\u5e76\u4e0d\u65ad\u8fed\u4ee3\u8fd9\u4e00\u6b65\u9aa4\u3002</p> <p>\\({|\\mathcal{B}|}\\) \u662f\u6279\u91cf\u5927\u5c0f\uff0c\u4e5f\u662f\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6bcf\u6b21\u8fed\u4ee3\u7684\u6837\u672c\u6570\uff0c \u901a\u5e38\u53d6\u51e0\u5341\u6216\u51e0\u767e\u3002\u5b66\u4e60\u7387\\(\\eta\\)\u901a\u5e38\u53d60.01\u30010.1\u30011\u6216\u800510\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u6279\u91cf\u5927\u5c0f\u4e3a1\u65f6\uff0c\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u9000\u5316\u4e3a\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u3002</p> <p>\u6279\u91cf\u5927\u5c0f\u548c\u5b66\u4e60\u7387\u7684\u503c\u901a\u5e38\u662f\u624b\u52a8\u9884\u5148\u6307\u5b9a\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u6a21\u578b\u8bad\u7ec3\u5f97\u5230\u7684\u3002 \u8fd9\u4e9b\u53ef\u4ee5\u8c03\u6574\u4f46\u4e0d\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u66f4\u65b0\u7684\u53c2\u6570\u79f0\u4e3a\u8d85\u53c2\u6570\uff08hyperparameter\uff09\u3002 \u8c03\u53c2\uff08hyperparameter tuning\uff09\u662f\u9009\u62e9\u8d85\u53c2\u6570\u7684\u8fc7\u7a0b\u3002 \u8d85\u53c2\u6570\u901a\u5e38\u662f\u6211\u4eec\u6839\u636e\u8bad\u7ec3\u8fed\u4ee3\u7ed3\u679c\u6765\u8c03\u6574\u7684\uff0c \u800c\u8bad\u7ec3\u8fed\u4ee3\u7ed3\u679c\u662f\u5728\u72ec\u7acb\u7684\u9a8c\u8bc1\u6570\u636e\u96c6\uff08validation dataset\uff09\u4e0a\u8bc4\u4f30\u5f97\u5230\u7684\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u6211\u4eec\u7684\u51fd\u6570\u786e\u5b9e\u662f\u7ebf\u6027\u7684\u4e14\u65e0\u566a\u58f0\uff0c\u8fd9\u4e9b\u4f30\u8ba1\u503c\u4e5f\u4e0d\u4f1a\u4f7f\u635f\u5931\u51fd\u6570\u771f\u6b63\u5730\u8fbe\u5230\u6700\u5c0f\u503c\u3002 \u56e0\u4e3a\u7b97\u6cd5\u4f1a\u4f7f\u5f97\u635f\u5931\u5411\u6700\u5c0f\u503c\u7f13\u6162\u6536\u655b\uff0c\u4f46\u5374\u4e0d\u80fd\u5728\u6709\u9650\u7684\u6b65\u6570\u5185\u975e\u5e38\u7cbe\u786e\u5730\u8fbe\u5230\u6700\u5c0f\u503c\u3002</p> <p>\u7ebf\u6027\u56de\u5f52\u6070\u597d\u662f\u4e00\u4e2a\u5728\u6574\u4e2a\u57df\u4e2d\u53ea\u6709\u4e00\u4e2a\u6700\u5c0f\u503c\u7684\u5b66\u4e60\u95ee\u9898\u3002 \u4f46\u662f\u5bf9\u50cf\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8fd9\u6837\u590d\u6742\u7684\u6a21\u578b\u6765\u8bf4\uff0c\u635f\u5931\u5e73\u9762\u4e0a\u901a\u5e38\u5305\u542b\u591a\u4e2a\u6700\u5c0f\u503c\u3002 \u6df1\u5ea6\u5b66\u4e60\u5b9e\u8df5\u8005\u5f88\u5c11\u4f1a\u53bb\u82b1\u8d39\u5927\u529b\u6c14\u5bfb\u627e\u8fd9\u6837\u4e00\u7ec4\u53c2\u6570\uff0c\u4f7f\u5f97\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u635f\u5931\u8fbe\u5230\u6700\u5c0f\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u66f4\u96be\u505a\u5230\u7684\u662f\u627e\u5230\u4e00\u7ec4\u53c2\u6570\uff0c\u8fd9\u7ec4\u53c2\u6570\u80fd\u591f\u5728\u6211\u4eec\u4ece\u672a\u89c1\u8fc7\u7684\u6570\u636e\u4e0a\u5b9e\u73b0\u8f83\u4f4e\u7684\u635f\u5931\uff0c \u8fd9\u4e00\u6311\u6218\u88ab\u79f0\u4e3a**\u6cdb\u5316\uff08generalization\uff09\u3002**</p>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3115","title":"3.1.1.5. \u7528\u6a21\u578b\u8fdb\u884c\u9884\u6d4b","text":"<p>\u7ed9\u5b9a\u7279\u5f81\u4f30\u8ba1\u76ee\u6807\u7684\u8fc7\u7a0b\u901a\u5e38\u79f0\u4e3a**\u9884\u6d4b**\uff08prediction\uff09\u6216**\u63a8\u65ad**\uff08inference\uff09\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#312","title":"3.1.2. \u77e2\u91cf\u5316\u52a0\u901f","text":"<p>\u5728\u8bad\u7ec3\u6211\u4eec\u7684\u6a21\u578b\u65f6\uff0c\u6211\u4eec\u7ecf\u5e38\u5e0c\u671b\u80fd\u591f\u540c\u65f6\u5904\u7406\u6574\u4e2a\u5c0f\u6279\u91cf\u7684\u6837\u672c\u3002 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u9700\u8981\u6211\u4eec\u5bf9\u8ba1\u7b97\u8fdb\u884c\u77e2\u91cf\u5316\uff0c \u4ece\u800c\u5229\u7528\u7ebf\u6027\u4ee3\u6570\u5e93\uff0c\u800c\u4e0d\u662f\u5728Python\u4e2d\u7f16\u5199\u5f00\u9500\u9ad8\u6602\u7684for\u5faa\u73af\u3002</p> PYTORCHTENSORFLOW <pre><code>%matplotlib inline\nimport math\nimport time\nimport numpy as np\nimport torch\nfrom d2l import torch as d2l\n</code></pre> <pre><code>%matplotlib inline\nimport math\nimport time\nimport numpy as np\nimport tensorflow as tf\nfrom d2l import tensorflow as d2l\n</code></pre>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#313","title":"3.1.3. \u6b63\u6001\u5206\u5e03\u4e0e\u5e73\u65b9\u635f\u5931","text":"<p>\u6b63\u6001\u5206\u5e03\u548c\u7ebf\u6027\u56de\u5f52\u4e4b\u95f4\u7684\u5173\u7cfb\u5f88\u5bc6\u5207\u3002 \u6b63\u6001\u5206\u5e03\uff08normal distribution\uff09\uff0c\u4e5f\u79f0\u4e3a\u9ad8\u65af\u5206\u5e03\uff08Gaussian distribution\uff09\uff0c \u6700\u65e9\u7531\u5fb7\u56fd\u6570\u5b66\u5bb6\u9ad8\u65af\uff08Gauss\uff09\u5e94\u7528\u4e8e\u5929\u6587\u5b66\u7814\u7a76\u3002 \u7b80\u5355\u7684\u8bf4\uff0c\u82e5\u968f\u673a\u53d8\u91cf\\(x\\)\u670d\u4ece\u5747\u503c\u4e3a\\(\\mu\\)\u3001\u65b9\u5dee\u4e3a\\(\\sigma^2\\)\u7684\u6b63\u6001\u5206\u5e03\uff0c\u8bb0\u4e3a\\(x \\sim \\mathcal{N}(\\mu,\\sigma^2)\\)\uff0c\u5176\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a</p> \\[p(x) = \\frac{1}{\\sqrt{2 \\pi \\sigma^2}} \\exp\\left(-\\frac{1}{2 \\sigma^2} (x - \\mu)^2\\right)\\] <p>\u6b63\u6001\u5206\u5e03\u7684\u5747\u503c\u4e3a\\(\\mu\\)\uff0c\u65b9\u5dee\u4e3a\\(\\sigma^2\\)\u3002 \u5f53\\(\\mu = 0, \\sigma = 1\\)\u65f6\u7684\u6b63\u6001\u5206\u5e03\u79f0\u4e3a\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff08standard normal distribution\uff09\u3002 \u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7b80\u5316\u4e3a\uff1a</p> \\[\\phi(x) = \\frac{1}{\\sqrt{2 \\pi}} \\exp\\left(-\\frac{1}{2} x^2\\right)\\] <p>\u6b63\u6001\u5206\u5e03\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u5c06\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u770b\u5230\uff0c\u6b63\u6001\u5206\u5e03\u5047\u8bbe\u4e86\u566a\u58f0\u7684\u5206\u5e03\uff0c\u800c\u566a\u58f0\u53c8\u5f71\u54cd\u4e86\u6570\u636e\u7684\u6807\u7b7e\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u5c06\u770b\u5230\u8bb8\u591a\u6709\u7528\u7684\u7b97\u6cd5\u90fd\u5047\u8bbe\u4e86\u566a\u58f0\u670d\u4ece\u6b63\u6001\u5206\u5e03\u3002</p> <p>\u5747\u65b9\u8bef\u5dee\u635f\u5931\u51fd\u6570\uff08\u7b80\u79f0\u5747\u65b9\u635f\u5931\uff09\u53ef\u4ee5\u7528\u4e8e\u7ebf\u6027\u56de\u5f52\u7684\u4e00\u4e2a\u539f\u56e0\u662f\uff1a \u6211\u4eec\u5047\u8bbe\u4e86\u89c2\u6d4b\u4e2d\u5305\u542b\u566a\u58f0\uff0c\u5176\u4e2d\u566a\u58f0\u670d\u4ece\u6b63\u6001\u5206\u5e03\u3002\u566a\u58f0\u6b63\u6001\u5206\u5e03\u5982\u4e0b\u5f0f:</p> \\[ y = \\mathbf{w}^\\top \\mathbf{x} + b + \\epsilon \\text{ where } \\epsilon \\sim \\mathcal{N}(0,\\sigma^2)\\] <p>\u56e0\u6b64\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5199\u51fa\u901a\u8fc7\u7ed9\u5b9a\u7684\\(x\\)\u89c2\u6d4b\u5230\u7279\u5b9a\\(y\\)\u7684\u4f3c\u7136\uff1a</p> \\[P(y \\mid \\mathbf{x}) = \\frac{1}{\\sqrt{2 \\pi \\sigma^2}} \\exp\\left(-\\frac{1}{2 \\sigma^2} (y - \\mathbf{w}^\\top \\mathbf{x} - b)^2\\right)\\] <p>\u73b0\u5728\uff0c\u6839\u636e\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u6cd5\uff0c\u53c2\u6570\\(\\mathbf{w}\\)\u548c\\(b\\)\u7684\u6700\u4f18\u503c\u662f\u4f7f\u6574\u4e2a\u6570\u636e\u96c6\u4f3c\u7136\u6700\u5927\u7684\u503c\u3002</p> <p>\u6839\u636e\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u6cd5\u9009\u62e9\u7684\u4f30\u8ba1\u91cf\u79f0\u4e3a\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u91cf\u3002\u867d\u7136\u4f7f\u8bb8\u591a\u6307\u6570\u51fd\u6570\u7684\u4e58\u79ef\u6700\u5927\u5316\u770b\u8d77\u6765\u5f88\u56f0\u96be\uff0c \u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u6539\u53d8\u76ee\u6807\u7684\u524d\u63d0\u4e0b\uff0c\u901a\u8fc7\u6700\u5927\u5316\u4f3c\u7136\u5bf9\u6570\u6765\u7b80\u5316\u3002\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u4f18\u5316\u901a\u5e38\u662f\u8bf4\u6700\u5c0f\u5316\u800c\u4e0d\u662f\u6700\u5927\u5316\u3002 \u6211\u4eec\u53ef\u4ee5\u6539\u4e3a\u6700\u5c0f\u5316\u8d1f\u5bf9\u6570\u4f3c\u7136\\(-\\log P(y \\mid \\mathbf{x})\\)\u3002\u7531\u6b64\u53ef\u4ee5\u5f97\u5230\u7684\u6570\u5b66\u516c\u5f0f\u662f\uff1a</p> \\[-\\log P(y \\mid \\mathbf{x}) = \\frac{1}{2 \\sigma^2} (y - \\mathbf{w}^\\top \\mathbf{x} - b)^2 + \\frac{1}{2} \\log(2 \\pi \\sigma^2)\\] <p>\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u5047\u8bbe\\(\\sigma\\)\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u5c31\u53ef\u4ee5\u5ffd\u7565\u6389\u6700\u540e\u4e00\u9879\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5e38\u6570\u4e0d\u4f1a\u5f71\u54cd\\(\\mathbf{w}\\)\u548c\\(b\\)\u7684\u9009\u62e9\u3002\u73b0\u5728\uff0c\u6211\u4eec\u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u95ee\u9898\u8f6c\u5316\u4e3a\u6700\u5c0f\u5316\u5747\u65b9\u8bef\u5dee\u3002\u56e0\u6b64\uff0c\u5728\u9ad8\u65af\u566a\u58f0\u7684\u5047\u8bbe\u4e0b\uff0c\u6700\u5c0f\u5316\u5747\u65b9\u8bef\u5dee\u7b49\u4ef7\u4e8e\u5bf9\u7ebf\u6027\u6a21\u578b\u7684\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#314","title":"3.1.4. \u4ece\u7ebf\u6027\u56de\u5f52\u5230\u6df1\u5ea6\u7f51\u7edc","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u8c08\u8bba\u4e86\u7ebf\u6027\u6a21\u578b\u3002 \u5c3d\u7ba1\u795e\u7ecf\u7f51\u7edc\u6db5\u76d6\u4e86\u66f4\u591a\u66f4\u4e3a\u4e30\u5bcc\u7684\u6a21\u578b\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u7528\u63cf\u8ff0\u795e\u7ecf\u7f51\u7edc\u7684\u65b9\u5f0f\u6765\u63cf\u8ff0\u7ebf\u6027\u6a21\u578b\uff0c \u4ece\u800c\u628a\u7ebf\u6027\u6a21\u578b\u770b\u4f5c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u3002 \u9996\u5148\uff0c\u6211\u4eec\u7528\u201c\u5c42\u201d\u7b26\u53f7\u6765\u91cd\u5199\u8fd9\u4e2a\u6a21\u578b\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3141","title":"3.1.4.1. \u795e\u7ecf\u7f51\u7edc\u56fe","text":"<p>\u6df1\u5ea6\u5b66\u4e60\u4ece\u4e1a\u8005\u559c\u6b22\u7ed8\u5236\u56fe\u8868\u6765\u53ef\u89c6\u5316\u6a21\u578b\u4e2d\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u5bf9\u4e8e\u7ebf\u6027\u56de\u5f52\uff0c\u6bcf\u4e2a\u8f93\u5165\u90fd\u4e0e\u6bcf\u4e2a\u8f93\u51fa\uff08\u5728\u672c\u4f8b\u4e2d\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\uff09\u76f8\u8fde\uff0c \u6211\u4eec\u5c06\u8fd9\u79cd\u53d8\u6362\u79f0\u4e3a\u5168\u8fde\u63a5\u5c42\uff08fully-connected layer\uff09\u6216\u79f0\u4e3a\u7a20\u5bc6\u5c42\uff08dense layer\uff09\u3002 \u4e0b\u4e00\u7ae0\u5c06\u8be6\u7ec6\u8ba8\u8bba\u7531\u8fd9\u4e9b\u5c42\u7ec4\u6210\u7684\u7f51\u7edc\u3002</p>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#3142","title":"3.1.4.2. \u751f\u7269\u5b66","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#315","title":"3.1.5. \u5c0f\u7ed3","text":"<ul> <li> <p>\u673a\u5668\u5b66\u4e60\u6a21\u578b\u4e2d\u7684\u5173\u952e\u8981\u7d20\u662f\u8bad\u7ec3\u6570\u636e\u3001\u6a21\u578b\u3001\u635f\u5931\u51fd\u6570\uff0c\u4ee5\u53ca\u4f18\u5316\u7b97\u6cd5\u3002</p> </li> <li> <p>\u77e2\u91cf\u5316\u4f7f\u6570\u5b66\u8868\u8fbe\u4e0a\u66f4\u7b80\u6d01\uff0c\u540c\u65f6\u8fd0\u884c\u7684\u66f4\u5feb\u3002</p> </li> <li> <p>\u6700\u5c0f\u5316\u76ee\u6807\u51fd\u6570\u548c\u6267\u884c\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u7b49\u4ef7\u3002</p> </li> <li> <p>\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4e5f\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\u3002</p> </li> </ul>"},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#32","title":"3.2. \u7ebf\u6027\u56de\u5f52\u7684\u4ece\u96f6\u5f00\u59cb\u5b9e\u73b0","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#321","title":"3.2.1. \u751f\u6210\u6570\u636e\u96c6","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#322","title":"3.2.2. \u8bfb\u53d6\u6570\u636e\u96c6","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#323","title":"3.2.3. \u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#324","title":"3.2.4. \u5b9a\u4e49\u6a21\u578b","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#325","title":"3.2.5. \u5b9a\u4e49\u635f\u5931\u51fd\u6570","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#326","title":"3.2.6. \u5b9a\u4e49\u4f18\u5316\u7b97\u6cd5","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#327","title":"3.2.7. \u8bad\u7ec3","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#328","title":"3.2.8. \u5c0f\u7ed3","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#33","title":"3.3. \u7ebf\u6027\u56de\u5f52\u7684\u7b80\u6d01\u5b9e\u73b0","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#331","title":"3.3.1. \u751f\u6210\u6570\u636e\u96c6","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#332","title":"3.3.2. \u8bfb\u53d6\u6570\u636e\u96c6","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#333","title":"3.3.3. \u5b9a\u4e49\u6a21\u578b","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#334","title":"3.3.4. \u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#335","title":"3.3.5. \u5b9a\u4e49\u635f\u5931\u51fd\u6570","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#336","title":"3.3.6. \u5b9a\u4e49\u4f18\u5316\u7b97\u6cd5","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#337","title":"3.3.7. \u8bad\u7ec3","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#338","title":"3.3.8. \u5c0f\u7ed3","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#34-softmax","title":"3.4. softmax\u56de\u5f52","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#341","title":"3.4.1. \u5206\u7c7b\u95ee\u9898","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#342","title":"3.4.2. \u7f51\u7edc\u67b6\u6784","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#343","title":"3.4.3. \u5168\u8fde\u63a5\u5c42\u7684\u53c2\u6570\u5f00\u9500","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#344-softmax","title":"3.4.4. softmax\u8fd0\u7b97","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#345","title":"3.4.5. \u5c0f\u6279\u91cf\u6837\u672c\u7684\u77e2\u91cf\u5316","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#346","title":"3.4.6. \u635f\u5931\u51fd\u6570","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#347","title":"3.4.7. \u4fe1\u606f\u8bba\u57fa\u7840","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#348","title":"3.4.8. \u6a21\u578b\u9884\u6d4b\u548c\u8bc4\u4f30","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#349","title":"3.4.9. \u5c0f\u7ed3","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#35","title":"3.5. \u56fe\u50cf\u5206\u7c7b\u6570\u636e\u96c6","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#351","title":"3.5.1. \u8bfb\u53d6\u6570\u636e\u96c6","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#352","title":"3.5.2. \u8bfb\u53d6\u5c0f\u6279\u91cf","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#353","title":"3.5.3. \u6574\u5408\u6240\u6709\u7ec4\u4ef6","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#354","title":"3.5.4. \u5c0f\u7ed3","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#36-softmax","title":"3.6. softmax\u56de\u5f52\u7684\u4ece\u96f6\u5f00\u59cb\u5b9e\u73b0","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#361","title":"3.6.1. \u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#362-softmax","title":"3.6.2. \u5b9a\u4e49softmax\u64cd\u4f5c","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#363","title":"3.6.3. \u5b9a\u4e49\u6a21\u578b","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#364","title":"3.6.4. \u5b9a\u4e49\u635f\u5931\u51fd\u6570","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#365","title":"3.6.5. \u5206\u7c7b\u7cbe\u5ea6","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#366","title":"3.6.6. \u8bad\u7ec3","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#367","title":"3.6.7. \u9884\u6d4b","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#368","title":"3.6.8. \u5c0f\u7ed3","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#37-softmax","title":"3.7. softmax\u56de\u5f52\u7684\u7b80\u6d01\u5b9e\u73b0","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#371","title":"3.7.1. \u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#372-softmax","title":"3.7.2. \u91cd\u65b0\u5ba1\u89c6Softmax\u7684\u5b9e\u73b0","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#373","title":"3.7.3. \u4f18\u5316\u7b97\u6cd5","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#374","title":"3.7.4. \u8bad\u7ec3","text":""},{"location":"zh/AI/NOTE-D2L/CH3-LNN/ch3-lnn/#375","title":"3.7.5. \u5c0f\u7ed3","text":""},{"location":"zh/AI/RL/rl/","title":"\u5f3a\u5316\u5b66\u4e60","text":""},{"location":"zh/AI/RNN/rnn/","title":"\u5faa\u73af\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"zh/CLOUD/cloud/","title":"\u4e91","text":""},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/","title":"\u83b7\u53d6\u4e91\u670d\u52a1\u5668","text":""},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_2","title":"\u4ec0\u4e48\u662f\u4e91\u670d\u52a1\u5668","text":"<p>\u4e91\u670d\u52a1\u5668\u662f\u5728\u4e91\u8ba1\u7b97\u73af\u5883\u4e2d\u8fd0\u884c\u7684\u865a\u62df\u670d\u52a1\u5668\uff08\u800c\u4e0d\u662f\u7269\u7406\u670d\u52a1\u5668\uff09\u3002\u5b83\u901a\u8fc7\u4e92\u8054\u7f51\u6784\u5efa\u3001\u6258\u7ba1\u548c\u4f20\u9012\uff0c\u53ef\u4ee5\u8fdc\u7a0b\u8bbf\u95ee\u3002\u5b83\u4eec\u4e5f\u88ab\u79f0\u4e3a\u865a\u62df\u670d\u52a1\u5668\u3002\u7b80\u5355\u7406\u89e3\uff0c\u5c31\u662f\u4e00\u53f0\u79bb\u4f60\u5f88\u8fdc\u4f46\u662f\u4f60\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u63a7\u5236\u7684\u7535\u8111\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_3","title":"\u4e91\u670d\u52a1\u5668\u63d0\u4f9b\u5546","text":"<p>\u4e91\u670d\u52a1\u5668\u6709\u8bb8\u591a\u9009\u62e9\uff0c\u6bd4\u8f83\u51fa\u540d\u7684\u51e0\u5bb6\u6709\uff1a</p> <ul> <li> <p>\u4e9a\u9a6c\u900a\u4e91\u670d\u52a1 (Amazon Web Services)</p> </li> <li> <p>\u5fae\u8f6f\u4e91 (Microsoft Azure)</p> </li> <li> <p>\u8c37\u6b4c\u4e91 (Google Cloud)</p> </li> <li> <p>\u963f\u91cc\u4e91 (Alibaba Cloud) [\u6211\u7684\u670d\u52a1\u5668\u4f7f\u7528\u7684\u5c31\u662f\u963f\u91cc\u4e91]</p> </li> <li> <p>\u817e\u8baf\u4e91 (Tencent Cloud)</p> </li> <li> <p>\u534e\u4e3a\u4e91 (Huawei Cloud)</p> </li> </ul> <p>\u53ef\u4ee5\u591a\u6d4f\u89c8\u4e00\u4e0b\u8fd9\u4e9b\u63d0\u4f9b\u5546\u7684\u7f51\u7ad9\uff0c\u9009\u62e9\u6700\u9002\u5408\u4f60\u7684\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_4","title":"\u5982\u4f55\u786e\u5b9a\u4e91\u670d\u52a1\u5668\u7684\u914d\u7f6e","text":"<p>\u5728\u9009\u62e9\u4e91\u670d\u52a1\u5668\u7684\u914d\u7f6e\u65f6\uff0c\u9700\u8981\u8003\u8651\u7684\u5173\u952e\u56e0\u7d20\u6709\uff1a</p> <ul> <li> <p>CPU - \u51b3\u5b9a\u4e91\u670d\u52a1\u5668\u7684\u8ba1\u7b97\u80fd\u529b\u3002</p> </li> <li> <p>\u5185\u5b58 - \u51b3\u5b9a\u4e91\u670d\u52a1\u5668\u7684\u5185\u5b58\u91cf\u3002</p> </li> <li> <p>\u5b58\u50a8 - \u51b3\u5b9a\u4e91\u670d\u52a1\u5668\u7684\u5b58\u50a8\u91cf\u3002</p> </li> <li> <p>\u5e26\u5bbd - \u4e0e\u4e91\u670d\u52a1\u5668\u7684\u7f51\u7edc\u901f\u5ea6\u6709\u5173\u3002</p> </li> <li> <p>\u4f4d\u7f6e - \u51b3\u5b9a\u4e91\u670d\u52a1\u5668\u7684\u4f4d\u7f6e\u3002\u4f4d\u7f6e\u8d8a\u63a5\u8fd1\u4f60\uff0c\u7f51\u7edc\u901f\u5ea6\u8d8a\u5feb\u3002</p> </li> <li> <p>\u4ef7\u683c - \u4e0d\u7528\u591a\u8bf4\u4e86\uff0c\u6709\u591a\u5c11\u94b1\uff0c\u5e72\u591a\u5c11\u4e8b\u3002</p> </li> <li> <p>\u7528\u9014 - \u7528\u9014\u51b3\u5b9a\u670d\u52a1\u5668\u914d\u7f6e\u7684\u5e95\u7ebf\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u6253\u7b97\u4f7f\u7528\u4e91\u670d\u52a1\u5668\u8fd0\u884c\u7f51\u7ad9\uff0c\u9700\u8981\u786e\u4fdd\u914d\u7f6e\u8db3\u591f\u987a\u7545\u8fd0\u884c\u7f51\u7ad9\u3002</p> </li> </ul>"},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_5","title":"\u63a2\u7d22\u4e91\u670d\u52a1\u5668\u63d0\u4f9b\u5546\u7684\u7f51\u7ad9","text":"<p>\u67e5\u770b\u4e91\u670d\u52a1\u5668\u63d0\u4f9b\u5546\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u786e\u5b9a\u81ea\u5df1\u7684\u9009\u62e9\u3002\u4f8b\u5982\uff0c\u6211\u9009\u62e9\u4e86\u963f\u91cc\u4e91\u7684\u5f39\u6027\u4e91\u670d\u52a1\u5668\uff08Elastic Cloud Server\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ef\u7528\u4e8e\u6258\u7ba1\u7f51\u7ad9\u3001\u8fd0\u884c\u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f\u6216\u521b\u5efa\u5f00\u53d1\u73af\u5883\u7684\u865a\u62df\u670d\u52a1\u5668\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_6","title":"\u521b\u5efa\u8d26\u6237","text":"<p>\u901a\u5e38\uff0c\u63d0\u4f9b\u5546\u8981\u6c42\u4f60\u5728\u4f7f\u7528\u4ed6\u4eec\u7684\u670d\u52a1\u4e4b\u524d\u521b\u5efa\u4e00\u4e2a\u8d26\u6237\u3002\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u8d26\u6237\u4e2d\u7ba1\u7406\u6240\u6709\u4e91\u670d\u52a1\u5668\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_7","title":"\u521b\u5efa\u5b9e\u4f8b","text":"<p>\u5728\u652f\u4ed8\u4e91\u670d\u52a1\u5668\u8d39\u7528\u540e\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u3002\u5b9e\u4f8b\u662f\u4e00\u4e2a\u53ef\u7528\u4e8e\u6258\u7ba1\u7f51\u7ad9\u3001\u8fd0\u884c\u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f\u6216\u521b\u5efa\u5f00\u53d1\u73af\u5883\u7684\u865a\u62df\u670d\u52a1\u5668\u3002\u4f60\u53ef\u4ee5\u5728\u4e91\u670d\u52a1\u5668\u63d0\u4f9b\u5546\u7684\u7f51\u7ad9\u4e0a\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u3002\u901a\u5e38\uff0c\u63d0\u4f9b\u5546\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u5411\u5bfc\u7a0b\u5e8f\u6765\u5e2e\u52a9\u4f60\u521b\u5efa\u5b9e\u4f8b\u3002\u521b\u5efa\u5b9e\u4f8b\u540e\uff0c\u4f60\u5c06\u80fd\u5728\u4f60\u7684\u8d26\u6237\u4e2d\u770b\u5230\u4f60\u7684\u5b9e\u4f8b\u3002\u4f60\u53ef\u4ee5\u5728\u8d26\u6237\u4e2d\u8bbf\u95ee\u5b9e\u4f8b\u7684\u5fc5\u8981\u4fe1\u606f\uff0c\u5982IP\u5730\u5740\u3001\u7528\u6237\u540d\u548c\u5bc6\u7801\u7b49\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_8","title":"\u9009\u62e9\u548c\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u4f60\u53ef\u4ee5\u5728\u521b\u5efa\u5b9e\u4f8b\u65f6\u786e\u5b9a\u5b9e\u4f8b\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e5f\u53ef\u4ee5\u5728\u521b\u5efa\u5b9e\u4f8b\u540e\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf\u3002\u901a\u5e38\uff0c\u63d0\u4f9b\u5546\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u5411\u5bfc\u6765\u5e2e\u52a9\u4f60\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf\u3002\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5e02\u573a\u4e0a\u6709\u4e24\u79cd\u4e91\u670d\u52a1\u5668\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0cWindows\u548cLinux\u3002\u5927\u591a\u6570\u4e91\u670d\u52a1\u5668\u63d0\u4f9b\u5546\u90fd\u63d0\u4f9bWindows\u548cLinux\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u6700\u9002\u5408\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <ul> <li> <p>Windows - Windows\u662f\u7531\u5fae\u8f6f\u5f00\u53d1\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u7cfb\u7edf\u3002Windows\u662f\u4e16\u754c\u4e0a\u6700\u6d41\u884c\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002Windows\u6613\u4e8e\u4f7f\u7528\uff0c\u9002\u5408\u521d\u5b66\u8005\u3002\u7136\u800c\uff0cWindows\u4e0d\u662f\u514d\u8d39\u7684\uff0c\u4e5f\u4e0d\u662f\u5f00\u6e90\u7684\u3002</p> </li> <li> <p>Linux - Linux\u662f\u4e00\u7cfb\u5217\u57fa\u4e8eLinux\u5185\u6838\u7684\u5f00\u6e90\u7c7bUnix\u64cd\u4f5c\u7cfb\u7edf\uff0c\u7531Linus Torvalds\u4e8e1991\u5e749\u670817\u65e5\u9996\u6b21\u53d1\u5e03\u3002Linux\u662f\u514d\u8d39\u7684\uff0c\u4e5f\u662f\u5f00\u6e90\u7684\u3002Linux\u9002\u5408\u9ad8\u7ea7\u7528\u6237\u3002\u6709\u8bb8\u591aLinux\u53d1\u884c\u7248\uff0c\u5982Ubuntu\u3001CentOS\u3001Debian\u7b49\u3002</p> </li> </ul> <p>\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e91\u670d\u52a1\u5668\u4e0a\u4f60\u4f1a\u9009\u62e9Linux\u3002\u5e38\u89c1\u7684\u9009\u62e9\u662fUbuntu\u548cCentOS\u3002\u6211\u9009\u62e9\u4e86Ubuntu\u3002</p> <ul> <li> <p>Ubuntu - Ubuntu\u662f\u57fa\u4e8eDebian\u7684\u514d\u8d39\u5f00\u6e90Linux\u53d1\u884c\u7248\u3002Ubuntu\u6b63\u5f0f\u53d1\u5e03\u4e86\u4e09\u4e2a\u7248\u672c\uff1a\u684c\u9762\u7248\u3001\u670d\u52a1\u5668\u7248\u548c\u7528\u4e8e\u7269\u8054\u7f51\u8bbe\u5907\u548c\u673a\u5668\u4eba\u7684Core\u7248\u3002\u6240\u6709\u7248\u672c\u90fd\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u5728\u8ba1\u7b97\u673a\u4e0a\uff0c\u6216\u5728\u865a\u62df\u673a\u4e2d\u8fd0\u884c\u3002Ubuntu\u662f\u4e91\u670d\u52a1\u5668\u7684\u6d41\u884c\u64cd\u4f5c\u7cfb\u7edf\u3002</p> </li> <li> <p>CentOS - CentOS\u662f\u4e00\u4e2a\u63d0\u4f9b\u514d\u8d39\u3001\u793e\u533a\u652f\u6301\u7684\u8ba1\u7b97\u5e73\u53f0\uff0c\u4e0e\u5176\u4e0a\u6e38\u6e90Red Hat Enterprise Linux\uff08RHEL\uff09\u529f\u80fd\u517c\u5bb9\u3002CentOS\u662f\u4e91\u670d\u52a1\u5668\u7684\u6d41\u884c\u64cd\u4f5c\u7cfb\u7edf\u3002</p> </li> </ul>"},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_9","title":"\u8fde\u63a5\u5230\u4e91\u670d\u52a1\u5668","text":"<p>\u5728\u521b\u5efa\u5b9e\u4f8b\u540e\uff0c\u4f60\u53ef\u4ee5\u8fde\u63a5\u5230\u4e91\u670d\u52a1\u5668\u3002\u901a\u5e38\uff0c\u63d0\u4f9b\u5546\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u5411\u5bfc\u7a0b\u5e8f\u6765\u5e2e\u52a9\u4f60\u8fde\u63a5\u5230\u4e91\u670d\u52a1\u5668\u3002\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5df1\u8fde\u63a5\u5230\u4e91\u670d\u52a1\u5668\u3002</p> <p>\u5982\u679c\u4f60\u4e5f\u548c\u6211\u4e00\u6837\u4f7f\u7528\u963f\u91cc\u4e91\uff0c\u4f60\u9700\u8981\u73b0\u5728\u5b9e\u4f8b\u7684\u7ba1\u7406\u9875\u9762\u91cc\u9762\u8bbe\u7f6e\u5bc6\u7801\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7ssh\u8fde\u63a5\u5230\u4e91\u670d\u52a1\u5668\u4e86\u3002</p> <p>Tip</p> <p>\u5bf9\u4e8e\u7ec8\u7aef\u5de5\u5177\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u63d0\u4f9b\u5546\u63d0\u4f9b\u7684\u57fa\u4e8eWeb\u7684SSH\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177\u3002\u5728Windows\u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 PuTTY \u6216 MobaXterm\uff08\u6211\u6700\u559c\u6b22\u7684\uff01\uff09\u3002\u5728Mac\u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177\uff0c\u5982 Termius\u3002\u5b83\u4eec\u53ef\u4ee5\u5e2e\u52a9\u4f60\u8bb0\u4f4f\u4e91\u670d\u52a1\u5668\u7684IP\u5730\u5740\u3001\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e00\u952e\u8fde\u63a5\u5230\u4e91\u670d\u52a1\u5668\u3002\u6b64\u5916\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u5728\u672c\u5730\u8ba1\u7b97\u673a\u548c\u4e91\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u8f93\u6587\u4ef6\u3002\u5927\u591a\u6570\u8fd9\u4e9b\u5de5\u5177\u90fd\u662f\u514d\u8d39\u7684\u6216\u6709\u514d\u8d39\u7684\u8ba1\u5212\u3002</p> <p>\u8981\u8fde\u63a5\u5230\u4e91\u670d\u52a1\u5668\uff0c\u4f60\u9700\u8981\u77e5\u9053\u4e91\u670d\u52a1\u5668\u7684IP\u5730\u5740\u3001\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u8d26\u6237\u4e2d\u627e\u5230\u5b83\u4eec\u3002</p> <p>\u8981\u4f7f\u7528ssh\u8fde\u63a5\u5230\u4e91\u670d\u52a1\u5668\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>ssh username@ip_address\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_10","title":"\u5b89\u88c5\u5fc5\u8981\u7684\u8f6f\u4ef6","text":"<p>\u8fde\u63a5\u5230\u4e91\u670d\u52a1\u5668\u540e\uff0c\u4f60\u53ef\u4ee5\u5b89\u88c5\u5fc5\u8981\u7684\u8f6f\u4ef6\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5b89\u88c5 Docker \u6765\u8fd0\u884c\u5bb9\u5668\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u5b89\u88c5 Nginx \u6765\u8fd0\u884c\u7f51\u7ad9\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_11","title":"\u5c06\u6587\u4ef6\u4e0a\u4f20\u5230\u4e91\u670d\u52a1\u5668","text":"<p>\u8fde\u63a5\u5230\u4e91\u670d\u52a1\u5668\u540e\uff0c\u4f60\u53ef\u4ee5\u5c06\u6587\u4ef6\u4e0a\u4f20\u5230\u4e91\u670d\u52a1\u5668\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u4e0a\u4f20\u6587\u4ef6\u6765\u8fd0\u884c\u4e00\u4e2a\u7f51\u7ad9\u3002</p> <p>Tip</p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177\uff0c\u5982 WinSCP\uff0c\u5c06\u6587\u4ef6\u4e0a\u4f20\u5230\u4e91\u670d\u52a1\u5668\u3002</p> <p>\u6b64\u5916\uff0c\u4f7f\u7528git\u548cGitHub\uff0c\u4f60\u53ef\u4ee5\u5c06\u4f60\u7684\u4ed3\u5e93\u514b\u9686\u5230\u4f60\u7684\u4e91\u670d\u52a1\u5668\uff0c\u5e76\u5c06\u6700\u65b0\u7684\u66f4\u6539\u4ece\u4f60\u7684\u4ed3\u5e93\u62c9\u5230\u4f60\u7684\u4e91\u670d\u52a1\u5668\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_12","title":"\u4f7f\u7528\u4e91\u670d\u52a1\u5668","text":"<p>\u8fd9\u90e8\u5206\u53d6\u51b3\u4e8e\u4f60\u7684\u5b9e\u9645\u9700\u6c42\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e91\u670d\u52a1\u5668\u6765\u8fd0\u884c\u7f51\u7ad9\uff0c\u6216\u8005\u5c06\u5176\u7528\u4f5c\u7269\u8054\u7f51\u8bbe\u5907\u7684\u4e2d\u4ecb\uff0c\u6216\u8005\u7528\u4f5c\u5f00\u53d1\u73af\u5883\uff0c\u7b49\u7b49\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server/#_13","title":"\u7ed3\u8bed","text":"<p>\u8fd9\u5c31\u662f\u672c\u6587\u7684\u5168\u90e8\u5185\u5bb9\u3002\u5e0c\u671b\u4f60\u559c\u6b22\uff01</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/","title":"\u914d\u7f6e\u670d\u52a1\u5668","text":""},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#_2","title":"\u901a\u7528\u6027\u914d\u7f6e","text":""},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#docker_1","title":"\u4ec0\u4e48\u662f Docker\uff1f","text":"<p>Docker \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5e94\u7528\u5bb9\u5668\u5f15\u64ce\uff0c\u57fa\u4e8e Go \u8bed\u8a00 \u5e76\u9075\u4ece Apache2.0 \u534f\u8bae\u5f00\u6e90\u3002\u5b83\u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u6253\u5305\u4ed6\u4eec\u7684\u5e94\u7528\u4ee5\u53ca\u4f9d\u8d56\u5305\u5230\u4e00\u4e2a\u53ef\u79fb\u690d\u7684\u955c\u50cf\u4e2d\uff0c\u7136\u540e\u53d1\u5e03\u5230\u4efb\u4f55\u6d41\u884c\u7684 Linux \u6216 Windows \u673a\u5668\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u865a\u62df\u5316\u3002\u5bb9\u5668\u662f\u5b8c\u5168\u4f7f\u7528\u6c99\u7bb1\u673a\u5236\uff0c\u76f8\u4e92\u4e4b\u95f4\u4e0d\u4f1a\u6709\u4efb\u4f55\u63a5\u53e3\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#docker-linux","title":"\u5982\u4f55\u5b89\u88c5 Docker\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 Docker\uff1a</p> <pre><code>sudo apt-get install docker\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#git_1","title":"\u4ec0\u4e48\u662f Git\uff1f","text":"<p>Git \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u53ef\u4ee5\u8ba9\u4f60\u8ddf\u8e2a\u6587\u4ef6\u7684\u53d8\u5316\uff0c\u5e76\u534f\u8c03\u591a\u4eba\u548c\u591a\u673a\u5668\u4e0a\u7684\u6587\u4ef6\u5de5\u4f5c\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u6e90\u4ee3\u7801\u7ba1\u7406\uff0c\u4f46\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ddf\u8e2a\u4efb\u4f55\u6587\u4ef6\u7684\u53d8\u5316\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#git-linux","title":"\u5982\u4f55\u5b89\u88c5 Git\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 Git\uff1a</p> <pre><code>sudo apt-get install git\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#nginx_1","title":"\u4ec0\u4e48\u662f Nginx\uff1f","text":"<p>Nginx \u662f\u4e00\u4e2a Web \u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u4ee5\u7528\u4f5c\u53cd\u5411\u4ee3\u7406\u3001\u8d1f\u8f7d\u5747\u8861\u5668\u3001\u90ae\u4ef6\u4ee3\u7406\u548c HTTP \u7f13\u5b58\u3002\u5b83\u662f\u514d\u8d39\u5f00\u6e90\u7684\u8f6f\u4ef6\uff0c\u6839\u636e 2 \u6761\u6b3e BSD \u8bb8\u53ef\u8bc1\u7684\u6761\u6b3e\u53d1\u5e03\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#nginx-linux","title":"\u5982\u4f55\u5b89\u88c5 Nginx\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 Nginx\uff1a</p> <pre><code>sudo apt-get install nginx\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#nodejs_1","title":"\u4ec0\u4e48\u662f Node.js\uff1f","text":"<p>Node.js \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u8de8\u5e73\u53f0 JavaScript \u8fd0\u884c\u65f6\u73af\u5883\uff0c\u7528\u4e8e\u5728\u6d4f\u89c8\u5668\u4e4b\u5916\u6267\u884c JavaScript \u4ee3\u7801\u3002Node.js \u8ba9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528 JavaScript \u6765\u7f16\u5199\u547d\u4ee4\u884c\u5de5\u5177\u548c\u670d\u52a1\u5668\u7aef\u811a\u672c\uff0c\u4ee5\u5728\u5c06\u9875\u9762\u53d1\u9001\u5230\u7528\u6237\u7684 Web \u6d4f\u89c8\u5668\u4e4b\u524d\u5728\u670d\u52a1\u5668\u7aef\u8fd0\u884c\u811a\u672c\u6765\u751f\u6210\u52a8\u6001\u7f51\u9875\u5185\u5bb9\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#nodejs-linux","title":"\u5982\u4f55\u5b89\u88c5 Node.js\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 Node.js\uff1a</p> <pre><code>sudo apt-get install nodejs\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#npm","title":"\u4ec0\u4e48\u662f npm\uff1f","text":"<p>npm \u662f JavaScript \u7f16\u7a0b\u8bed\u8a00\u7684\u5305\u7ba1\u7406\u5668\u3002\u5b83\u662f JavaScript \u8fd0\u884c\u65f6\u73af\u5883 Node.js \u7684\u9ed8\u8ba4\u5305\u7ba1\u7406\u5668\u3002\u5b83\u7531\u4e00\u4e2a\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\uff08\u4e5f\u79f0\u4e3a npm\uff09\u548c\u4e00\u4e2a\u5728\u7ebf\u6570\u636e\u5e93\u7ec4\u6210\uff0c\u5176\u4e2d\u5305\u542b\u516c\u5171\u548c\u4ed8\u8d39\u7684\u79c1\u6709\u5305\uff0c\u79f0\u4e3a npm \u6ce8\u518c\u8868\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#npm-linux","title":"\u5982\u4f55\u5b89\u88c5 npm\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 npm\uff1a</p> <pre><code>sudo apt-get install npm\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#python_1","title":"\u4ec0\u4e48\u662f Python\uff1f","text":"<p>Python \u662f\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u3001\u89e3\u91ca\u578b\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u7531 Guido van Rossum \u4e8e 1989 \u5e74\u5e95\u53d1\u660e\uff0c\u7b2c\u4e00\u4e2a\u516c\u5f00\u53d1\u884c\u7248\u53d1\u884c\u4e8e 1991 \u5e74\u3002Python \u8bed\u6cd5\u7b80\u6d01\u6e05\u6670\uff0c\u7279\u8272\u4e4b\u4e00\u662f\u5f3a\u5236\u7528\u7a7a\u767d\u7b26\uff08\u5982\u7a7a\u683c\uff09\u4f5c\u4e3a\u8bed\u53e5\u7f29\u8fdb\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#python-linux","title":"\u5982\u4f55\u5b89\u88c5 Python\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 Python\uff1a</p> <pre><code>sudo apt-get install python\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#pip","title":"\u4ec0\u4e48\u662f pip\uff1f","text":"<p>pip \u662f Python \u7f16\u7a0b\u8bed\u8a00\u7684\u5305\u7ba1\u7406\u5668\u3002\u5b83\u662f Python \u8fd0\u884c\u65f6\u73af\u5883\u7684\u9ed8\u8ba4\u5305\u7ba1\u7406\u5668\u3002\u5b83\u7531\u4e00\u4e2a\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\uff08\u4e5f\u79f0\u4e3a pip\uff09\u548c\u4e00\u4e2a\u5728\u7ebf\u6570\u636e\u5e93\u7ec4\u6210\uff0c\u5176\u4e2d\u5305\u542b\u516c\u5171\u548c\u4ed8\u8d39\u7684\u79c1\u6709\u5305\uff0c\u79f0\u4e3a pip \u6ce8\u518c\u8868\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#pip-linux","title":"\u5982\u4f55\u5b89\u88c5 pip\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 pip\uff1a</p> <pre><code>sudo apt-get install pip\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#venv","title":"\u4ec0\u4e48\u662f venv\uff1f","text":"<p>venv \u662f\u4e00\u4e2a\u5de5\u5177\uff0c\u53ef\u4ee5\u8ba9\u4f60\u521b\u5efa\u72ec\u7acb\u7684 Python \u73af\u5883\u3002\u5b83\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5176\u4e2d\u5305\u542b\u4f7f\u7528 Python \u9879\u76ee\u6240\u9700\u7684\u6240\u6709\u53ef\u6267\u884c\u6587\u4ef6\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#venv-linux","title":"\u5982\u4f55\u5b89\u88c5 venv\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 venv\uff1a</p> <pre><code>sudo apt-get install venv\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#_3","title":"\u4e13\u7528\u6027\u914d\u7f6e","text":""},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#anaconda","title":"Anaconda","text":""},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#anaconda_1","title":"\u4ec0\u4e48\u662f Anaconda\uff1f","text":"<p>Anaconda \u662f\u4e00\u4e2a\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u7684 Python \u53d1\u884c\u7248\uff0c\u652f\u6301 Linux\u3001Mac\u3001Windows \u7cfb\u7edf\uff0c\u63d0\u4f9b\u4e86\u5305\u7ba1\u7406\u4e0e\u73af\u5883\u7ba1\u7406\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u89e3\u51b3\u591a\u7248\u672c Python \u5e76\u5b58\u3001\u5207\u6362\u4ee5\u53ca\u5404\u79cd\u7b2c\u4e09\u65b9\u5305\u5b89\u88c5\u95ee\u9898\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#anaconda-linux","title":"\u5982\u4f55\u5b89\u88c5 Anaconda\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 Anaconda\uff1a</p> <pre><code>sudo apt-get install anaconda\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#anaconda-virtual-environment-conda","title":"Anaconda Virtual Environment (conda)","text":""},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#conda","title":"\u4ec0\u4e48\u662f conda\uff1f","text":"<p>conda \u662f\u4e00\u4e2a\u5de5\u5177\uff0c\u53ef\u4ee5\u8ba9\u4f60\u521b\u5efa\u72ec\u7acb\u7684 Python \u73af\u5883\u3002\u5b83\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5176\u4e2d\u5305\u542b\u4f7f\u7528 Python \u9879\u76ee\u6240\u9700\u7684\u6240\u6709\u53ef\u6267\u884c\u6587\u4ef6\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#conda-linux","title":"\u5982\u4f55\u5b89\u88c5 conda\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 conda\uff1a</p> <pre><code>sudo apt-get install conda\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#uwf","title":"\u4ec0\u4e48\u662f UWF\uff1f","text":"<p>UWF \u662f\u4e00\u4e2a\u9632\u706b\u5899\uff0c\u53ef\u4ee5\u8ba9\u4f60\u4fdd\u62a4\u4f60\u7684\u670d\u52a1\u5668\u514d\u53d7\u6076\u610f\u653b\u51fb\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#uwf-linux","title":"\u5982\u4f55\u5b89\u88c5 UWF\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 UWF\uff1a</p> <pre><code>sudo apt-get install uwf\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#uwf-linux_1","title":"\u5982\u4f55\u4f7f\u7528 UWF \u68c0\u67e5\u7aef\u53e3\u72b6\u6001\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4f7f\u7528 UWF \u68c0\u67e5\u7aef\u53e3\u72b6\u6001\uff1a</p> <pre><code>sudo uwf status\n</code></pre> <p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u68c0\u67e5\u54ea\u4e9b\u7aef\u53e3\u662f\u5f00\u653e\u7684\uff1a</p> <pre><code>sudo uwf status verbose\n</code></pre> <p>\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 netstat \u68c0\u67e5\u7aef\u53e3\u72b6\u6001\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>sudo netstat -tulpn\n</code></pre> <p>\u6216\u8005</p> <pre><code>sudo ss -tulpn\n</code></pre> <p>\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 iptables \u68c0\u67e5\u7aef\u53e3\u72b6\u6001\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>sudo iptables -L\n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config/#uwf-linux_2","title":"\u5982\u4f55\u4f7f\u7528 UWF \u542f\u7528\u7aef\u53e3\uff1f\uff08\u4ee5 Linux \u4e3a\u4f8b\uff09","text":"<p>\u9996\u5148\uff0c\u4f60\u9700\u8981\u5728\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u9632\u706b\u5899\u4e2d\u542f\u7528\u7aef\u53e3\uff0c\u7136\u540e\u4f60\u9700\u8981\u5728 UWF \u4e2d\u542f\u7528\u7aef\u53e3\u3002</p> <p>\u5728 Linux \u4e0a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u4f7f\u7528 UWF \u542f\u7528\u7aef\u53e3\uff1a</p> <pre><code>sudo uwf allow &lt;port&gt;/&lt;protocol&gt;\n</code></pre> <p>\u6216\u8005\u66f4\u7b80\u5355\u4e00\u70b9\uff0c\u4e0d\u9700\u8981\u8f93\u5165\u534f\u8bae\uff1a</p> <pre><code>sudo uwf allow &lt;port&gt;\n</code></pre> <p>\u4f8b\u5982\uff0c\u7aef\u53e3 80 \u7528\u4e8e http\uff0c\u8fd9\u901a\u5e38\u662f http \u7684\u9ed8\u8ba4\u7aef\u53e3\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>sudo uwf allow 80/tcp \n</code></pre>"},{"location":"zh/CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/","title":"\u4e3a\u4f60\u7684\u7f51\u9875\u83b7\u53d6\u4e00\u4e2a\u57df\u540d","text":""},{"location":"zh/CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#ip-vs","title":"IP \u5730\u5740 vs. \u57df\u540d","text":"<p>IP \u5730\u5740\u662f\u7528\u4e8e\u5728\u7f51\u7edc\u4e0a\u6807\u8bc6\u8ba1\u7b97\u673a\u7684\u4e00\u7ec4\u552f\u4e00\u6570\u5b57\uff0c\u56e0\u6b64 IP \u5730\u5740\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7528\u4e8e\u786e\u5b9a\u4e92\u8054\u7f51\u4e0a\u8bbe\u5907\u7684\u4f4d\u7f6e\u3002\u76ee\u524d\u6709 IPv4 \u548c IPv6 \u4e24\u79cd IP \u5730\u5740\u3002IPv4 \u5730\u5740\u662f 32 \u4f4d\u6570\u5b57\uff0cIPv6 \u5730\u5740\u662f 128 \u4f4d\u6570\u5b57\u3002IPv4 \u5730\u5740\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f xxx.xxx.xxx.xxx\uff0cIPv6 \u5730\u5740\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx\u3002**\u4f46\u662f\uff0c\u4eba\u4eec\u5f88\u96be\u8bb0\u4f4f\u8fd9\u4e9b\u6570\u5b57\uff0c\u56e0\u6b64\u4f7f\u7528\u57df\u540d\u6765\u4ee3\u66ff IP \u5730\u5740\u6765\u6807\u8bc6\u7f51\u7ad9\u3002\u57df\u540d\u662f\u7528\u4e8e\u6807\u8bc6\u7f51\u7ad9\u7684\u552f\u4e00\u540d\u79f0\u3002**\u4f8b\u5982\uff0cGoogle \u7684\u57df\u540d\u662f google.com\u3002\u57df\u540d\u6bd4 IP \u5730\u5740\u66f4\u5bb9\u6613\u8bb0\u4f4f\uff0c\u56e0\u6b64\u5b83\u4eec\u7528\u4e8e\u6807\u8bc6\u7f51\u7ad9\u800c\u4e0d\u662f IP \u5730\u5740\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#_2","title":"\u57df\u540d\u7ed3\u6784","text":"<p>\u57df\u540d\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a\u9876\u7ea7\u57df\u540d\uff08TLD\uff09\u548c\u4e8c\u7ea7\u57df\u540d\uff08SLD\uff09\u3002TLD \u662f\u57df\u540d\u7684\u6700\u540e\u4e00\u90e8\u5206\uff0cSLD \u662f TLD \u4e4b\u524d\u7684\u90e8\u5206\u3002\u4f8b\u5982\uff0c\u5728\u57df\u540d google.com \u4e2d\uff0cTLD \u662f .com\uff0cSLD \u662f google\u3002TLD \u4e5f\u79f0\u4e3a\u57df\u540d\u6269\u5c55\u540d\u3002\u6709\u8bb8\u591a\u4e0d\u540c\u7684 TLD\uff0c\u6bcf\u4e2a TLD \u90fd\u6709\u81ea\u5df1\u7684\u542b\u4e49\u3002\u4f8b\u5982\uff0c.com \u7528\u4e8e\u5546\u4e1a\u7f51\u7ad9\uff0c.org \u7528\u4e8e\u975e\u8425\u5229\u7ec4\u7ec7\uff0c.edu \u7528\u4e8e\u6559\u80b2\u673a\u6784\uff0c.gov \u7528\u4e8e\u653f\u5e9c\u7f51\u7ad9\uff0c.net \u7528\u4e8e\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u7f51\u7ad9\u3002\u8fd8\u6709\u7528\u4e8e\u7279\u5b9a\u76ee\u7684\u7684 sTLD\u3002\u4f8b\u5982\uff0c.gov \u7528\u4e8e\u653f\u5e9c\u7f51\u7ad9\uff0c.edu \u7528\u4e8e\u6559\u80b2\u673a\u6784\uff0c.mil \u7528\u4e8e\u7f8e\u56fd\u519b\u65b9\u3002\u8fd8\u6709\u7528\u4e8e\u7279\u5b9a\u56fd\u5bb6\u7684\u56fd\u9645\u5316\u56fd\u5bb6\u4ee3\u7801\u9876\u7ea7\u57df\u540d\uff08IDN ccTLD\uff09\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#_3","title":"\u57df\u540d\u6ce8\u518c","text":"<p>\u57df\u540d\u662f\u901a\u8fc7\u57df\u540d\u6ce8\u518c\u5546\u6ce8\u518c\u7684\u3002\u57df\u540d\u6ce8\u518c\u5546\u662f\u4e3a\u4eba\u4eec\u548c\u4f01\u4e1a\u6ce8\u518c\u57df\u540d\u7684\u516c\u53f8\u3002\u57df\u540d\u6ce8\u518c\u5546\u7531\u4e92\u8054\u7f51\u540d\u79f0\u4e0e\u6570\u5b57\u5730\u5740\u5206\u914d\u673a\u6784\uff08ICANN\uff09\u8ba4\u8bc1\u3002ICANN \u662f\u7ba1\u7406\u57df\u540d\u7cfb\u7edf\uff08DNS\uff09\u7684\u975e\u8425\u5229\u7ec4\u7ec7\u3002DNS \u662f\u4e00\u79cd\u5206\u5c42\u547d\u540d\u7cfb\u7edf\uff0c\u7528\u4e8e\u6807\u8bc6\u7f51\u7ad9\u3002**DNS \u7528\u4e8e\u5c06\u57df\u540d\u8f6c\u6362\u4e3a IP \u5730\u5740\u3002**\u57df\u540d\u6ce8\u518c\u7684\u65f6\u95f4\u6bb5\uff0c\u57df\u540d\u5728\u5230\u671f\u524d\u53ef\u4ee5\u7eed\u8ba2\u3002\u57df\u540d\u4e5f\u53ef\u4ee5\u8f6c\u79fb\u5230\u5176\u4ed6\u57df\u540d\u6ce8\u518c\u5546\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#_4","title":"\u57df\u540d\u63d0\u4f9b\u5546","text":"<p>\u6709\u51e0\u4e2a\u57df\u540d\u63d0\u4f9b\u5546\u63d0\u4f9b\u57df\u540d\u6ce8\u518c\u670d\u52a1\u3002\u4e00\u4e9b\u6700\u53d7\u6b22\u8fce\u7684\u57df\u540d\u63d0\u4f9b\u5546\u662f GoDaddy\u3001Namecheap \u548c Namesilo\u3002\u901a\u5e38\uff0c\u57df\u540d\u662f\u6309\u5e74\u4ed8\u8d39\u7684\uff0c\u57df\u540d\u53ef\u4ee5\u5728\u5230\u671f\u524d\u7eed\u8ba2\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#_5","title":"\u5c06\u57df\u540d\u94fe\u63a5\u5230\u7f51\u7ad9","text":"<p>\u8981\u5c06\u57df\u540d\u94fe\u63a5\u5230\u7f51\u7ad9\uff0c\u5fc5\u987b\u5c06\u57df\u540d\u6307\u5411\u7f51\u7ad9\u7684 IP \u5730\u5740\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539\u57df\u540d\u7684 DNS \u8bb0\u5f55\u6765\u5b8c\u6210\u3002\u4e00\u4e9b\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u63d0\u4f9b\u57df\u540d\u6ce8\u518c\u548c DNS \u7ba1\u7406\u670d\u52a1\u3002\u4f8b\u5982\uff0c\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\uff08AWS\uff09\u63d0\u4f9b Route 53\uff0c\u8c37\u6b4c\u4e91\u5e73\u53f0\uff08GCP\uff09\u63d0\u4f9b Cloud DNS\uff0c\u5fae\u8f6f Azure \u63d0\u4f9b Azure DNS\u3002</p>"},{"location":"zh/CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name/#_6","title":"\u7ed3\u675f","text":"<p>\u5c06\u57df\u540d\u94fe\u63a5\uff08\u89e3\u6790\uff09\u5230\u7f51\u7ad9\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u57df\u540d\u800c\u4e0d\u662f IP \u5730\u5740\u8bbf\u95ee\u7f51\u7ad9\u3002\u4f8b\u5982\uff0c\u6211\u7684\u7f51\u7ad9 IP \u662f \ud83c\udf10 8.214.19.225\uff0c\u89e3\u6790\u4ee5\u540e\uff0c \u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\ud83c\udf10 https://www.cuishuaiwen.com\u6765\u8fdb\u884c\u67e5\u770b\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u6280\u672f\u535a\u5ba2\uff0c\u5728\u89e3\u6790\u4e4b\u524d\uff0c\u53ef\u4ee5\u901a\u8fc7\ud83c\udf10 8.214.19.225:8000\uff0c\u800c\u89e3\u6790\u4ee5\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\ud83c\udf10 https://www.cuishuaiwen.com:8000\u6765\u8fdb\u884c\u67e5\u770b\u3002</p>"},{"location":"zh/CODING/coding/","title":"\u7f16\u7a0b","text":"<p>Quote</p> <p>Talk is cheap. Show me the code. \u2014\u2014 Linus Torvalds</p>"},{"location":"zh/CODING/C-C%2B%2B/C/c/","title":"C\u8bed\u8a00","text":"<p>Note</p> <p>C\u8bed\u8a00\u7684\u7ecf\u5178\u4e66\u7c4d\u662fBrian W. Kernighan\u548cDennis M. Ritchie\u7684\u300aC\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u300b\u3002\u8fd9\u662fC\u8bed\u8a00\u521d\u5b66\u8005\u5fc5\u8bfb\u7684\u4e66\u7c4d\u3002</p> <ul> <li> <p> C\u8bed\u8a00\ud83c\udfaf</p> <p>\u4f5c\u8005: Brian W. Kernighan &amp; Dennis M. Ritchie</p> <p>\u9605\u8bfb\u8fdb\u5ea6: [2/8]</p> <p>  Download PDF </p> </li> </ul>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/","title":"C \u8bed\u8a00\u5b66\u4e60\u7b14\u8bb0","text":""},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#_1","title":"\u76ee\u5f55","text":"<p>CH1 - \u5bfc\u8a00 CH2 - \u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u4e0e\u8868\u8fbe\u5f0f CH3 - \u63a7\u5236\u6d41 CH4 - \u51fd\u6570\u4e0e\u7a0b\u5e8f\u7ed3\u6784 CH5 - \u6307\u9488\u4e0e\u6570\u7ec4 CH6 - \u7ed3\u6784 CH7 - \u8f93\u5165\u4e0e\u8f93\u51fa CH8 - UNIX \u7cfb\u7edf\u63a5\u53e3</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#ch1-","title":"CH1 - \u5bfc\u8a00","text":"<p>\u4e00\u4e9b\u7b80\u5355\u6848\u4f8b\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#ch2-","title":"CH2 - \u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u4e0e\u8868\u8fbe\u5f0f","text":"<ul> <li>**\u53d8\u91cf**\u548c**\u5e38\u91cf**\u662f\u7a0b\u5e8f\u5904\u7406\u7684\u4e24\u79cd\u57fa\u672c\u6570\u636e\u5bf9\u8c61\u3002</li> <li>**\u58f0\u660e\u8bed\u53e5**\u8bf4\u660e\u53d8\u91cf\u7684\u540d\u5b57\u53ca\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u53d8\u91cf\u7684\u521d\u503c\u3002</li> <li>**\u8fd0\u7b97\u7b26**\u6307\u5b9a\u5c06\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\u3002</li> <li>**\u8868\u8fbe\u5f0f**\u5219\u628a\u53d8\u91cf\u4e0e\u5e38\u91cf\u7ec4\u5408\u8d77\u6765\u751f\u6210\u65b0\u7684\u503c\u3002</li> <li>\u5bf9\u8c61\u7684**\u7c7b\u578b**\u51b3\u5b9a\u8be5\u5bf9\u8c61\u53ef\u53d6\u503c\u7684\u96c6\u5408\u4ee5\u53ca\u53ef\u4ee5\u5bf9\u8be5\u5bf9\u8c61\u6267\u884c\u7684\u64cd\u4f5c\u3002</li> </ul>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#21","title":"2.1 \u53d8\u91cf\u540d","text":"<p>\u5bf9\u53d8\u91cf\u7684\u547d\u540d\u4e0e\u7b26\u53f7\u5e38\u91cf\u7684\u547d\u540d\u5b58\u5728\u4e00\u4e9b\u9650\u5236\u6761\u4ef6\uff1a - \u540d\u5b57\u662f\u7531\u5b57\u6bcd\u548c\u6570\u5b57\u7ec4\u6210\u7684\u5e8f\u5217\uff0c\u4f46\u5176\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u4e3a\u5b57\u6bcd   - \u4e0b\u5212\u7ebf\u201c_\u201d\u88ab\u770b\u505a\u662f\u5b57\u6bcd\uff0c\u901a\u5e38\u7528\u4e8e\u547d\u540d\u8f83\u957f\u7684\u53d8\u91cf\u540d\uff0c\u4ee5\u63d0\u9ad8\u5176\u53ef\u8bfb\u6027   - \u7531\u4e8e\u4f8b\u7a0b\u7684\u540d\u5b57\u901a\u5e38\u4ee5\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u56e0\u6b64\u53d8\u91cf\u540d\u4e0d\u8981\u4ee5\u4e0b\u5212\u7ebf\u5f00\u5934 - \u5927\u5199\u5b57\u6bcd\u4e0e\u5c0f\u5199\u5b57\u6bcd\u662f\u6709\u533a\u522b\u7684   - \u901a\u5e38\uff0c\u53d8\u91cf\u540d\u7528\u5c0f\u5199\u5b57\u6bcd\uff0c\u7b26\u53f7\u5e38\u91cf\u7528\u5927\u5199\u5b57\u6bcd - \u9009\u62e9\u7684\u53d8\u91cf\u540d\u8981\u80fd\u591f\u5c3d\u91cf\u4ece\u5b57\u9762\u4e0a\u8868\u8fbe\u53d8\u91cf\u7684\u7528\u9014\uff0c\u8fd9\u6837\u505a\u4e0d\u5bb9\u6613\u5f15\u8d77\u6df7\u6dc6\u3002   - \u5c40\u90e8\u53d8\u91cf\u4e00\u822c\u4f7f\u7528\u8f83\u77ed\u7684\u53d8\u91cf\u540d\uff08\u5c24\u5176\u662f\u5faa\u73af\u63a7\u5236\u53d8\u91cf\uff09   - \u5916\u90e8\u53d8\u91cf\u4f7f\u7528\u8f83\u957f\u7684\u540d\u5b57</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#22","title":"2.2 \u6570\u636e\u7c7b\u578b\u53ca\u957f\u5ea6","text":"<p>C \u8bed\u8a00\u53ea\u63d0\u4f9b\u4e86\u4e0b\u5217\u51e0\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1a</p> <ul> <li>char \u5b57\u7b26\u578b\uff0c\u4e00\u4e2a\u5b57\u8282, \u53ef\u4ee5\u5b58\u653e\u672c\u5730\u5b57\u7b26\u96c6\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26</li> <li>int \u6574\u578b\uff0c\u901a\u5e38\u53cd\u6620\u4e86\u6240\u7528\u673a\u5668\u4e2d\u6574\u6570\u7684\u6700\u81ea\u7136\u957f\u5ea6 </li> <li>float \u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b</li> <li>double \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b</li> </ul> <p>\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e9b\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u524d\u9762\u52a0\u4e0a\u4e00\u4e9b\u9650\u5b9a\u7b26\u3002short \u4e0e long \u4e24\u4e2a\u9650\u5b9a\u7b26\u7528\u4e8e\u9650\u5b9a\u6574\u578b\uff1a</p> <p>short int sh; long int counter;</p> <p>\u5728\u4e0a\u8ff0\u8fd9\u79cd\u7c7b\u578b\u7684\u58f0\u660e\u4e2d\uff0c\u5173\u952e\u5b57 int \u53ef\u4ee5\u7701\u7565\u3002\u901a\u5e38\u5f88\u591a\u4eba\u4e5f\u4e60\u60ef\u8fd9\u4e48\u505a\u3002</p> <p>short \u4e0e long \u4e24\u4e2a\u9650\u5b9a\u7b26\u7684\u5f15\u5165\u53ef\u4ee5\u4e3a\u6211\u4eec\u63d0\u4f9b\u6ee1\u8db3\u5b9e\u9645\u9700\u8981\u7684\u4e0d\u540c\u957f\u5ea6\u7684\u6574\u578b\u6570\u3002int \u901a\u5e38\u4ee3\u8868\u7279\u5b9a\u673a\u5668\u4e2d\u6574\u6570\u7684\u81ea\u7136\u957f\u5ea6\u3002short \u7c7b\u578b\u901a\u5e38\u4e3a 16 \u4f4d\uff0c1ong \u7c7b\u578b\u901a\u5e38\u4e3a 32\u4f4d\uff0cint \u7c7b\u578b\u53ef\u4ee5\u4e3a 16 \u4f4d\u6216 32 \u4f4d\u3002\u5404\u7f16\u8bd1\u5668\u53ef\u4ee5\u6839\u636e\u786c\u4ef6\u7279\u6027\u81ea\u4e3b\u9009\u62e9\u5408\u9002\u7684\u7c7b\u578b\u957f\u5ea6\uff0c\u4f46\u8981\u9075\u5faa\u4e0b\u5217\u9650\u5236\uff1ashort \u4e0e int \u7c7b\u578b\u81f3\u5c11\u4e3a 16 \u4f4d\uff0c\u800c long \u7c7b\u578b\u81f3\u5c11\u4e3a 32 \u4f4d\uff0c\u5e76\u4e14 short\u7c7b\u578b\u4e0d\u5f97\u957f\u4e8e int \u7c7b\u578b\uff0c\u800c int \u7c7b\u578b\u4e0d\u5f97\u957f\u4e8e long \u7c7b\u578b\u3002</p> <p>\u7c7b\u578b\u9650\u5b9a\u7b26 signed \u4e0e unsigned \u53ef\u7528\u4e8e\u9650\u5b9a char \u7c7b\u578b\u6216\u4efb\u4f55\u6574\u578b\u3002unsigned \u7c7b\u578b\u7684\u6570\u603b\u662f\u6b63\u503c\u6216 0\uff0c\u5e76\u9075\u5b88\u7b97\u672f\u6a21 2^n\u5b9a\u5f8b\uff0c\u5176\u4e2d n \u662f\u8be5\u7c7b\u578b\u5360\u7528\u7684\u4f4d\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679c char \u5bf9\u8c61\u5360\u7528 8 \u4f4d\uff0c\u90a3\u4e48 unsigned char \u7c7b\u578b\u53d8\u91cf\u7684\u53d6\u503c\u8303\u56f4\u4e3a 0\uff5e255\uff0c\u800c signed char \u7c7b\u578b\u53d8\u91cf\u7684\u53d6\u503c\u8303\u56f4\u5219\u4e3a-128\uff5e127\uff08\u5728\u91c7\u7528\u5bf9\u4e8c\u7684\u8865\u7801\u7684\u673a\u5668\u4e0a\uff09\u3002\u4e0d\u5e26\u9650\u5b9a\u7b26\u7684 char \u7c7b\u578b\u5bf9\u8c61\u662f\u5426\u5e26\u7b26\u53f7\u5219\u53d6\u51b3\u4e8e\u5177\u4f53\u673a\u5668\uff0c\u4f46\u53ef\u6253\u5370\u5b57\u7b26\u603b\u662f\u6b63\u503c\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#23","title":"2.3 \u5e38\u91cf","text":""},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#_2","title":"\u6574\u6570\u5e38\u91cf","text":"<p>\u6574\u6570\u5e38\u91cf\u5c5e\u4e8e int \u7c7b\u578b\u3002long \u7c7b\u578b\u7684\u5e38\u91cf\u4ee5\u5b57\u6bcd l \u6216 L \u7ed3\u5c3e\uff0c\u5982123456789L\u3002\u5982\u679c\u4e00\u4e2a\u6574\u6570\u592a\u5927\u4ee5\u81f3\u4e8e\u65e0\u6cd5\u7528 int \u7c7b\u578b\u8868\u793a\u65f6\uff0c\u4e5f\u5c06\u88ab\u5f53\u4f5c long \u7c7b\u578b\u5904\u7406\u3002\u65e0\u7b26\u53f7\u5e38\u91cf\u4ee5\u5b57\u6bcd u \u6216 U \u7ed3\u5c3e\u3002\u540e\u7f00 ul \u6216 UL \u8868\u660e\u662f unsigned long \u7c7b\u578b\u3002</p> <p>\u6574\u578b\u6570\u9664\u4e86\u7528\u5341\u8fdb\u5236\u8868\u793a\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u516b\u8fdb\u5236\u6216\u5341\u516d\u8fdb\u5236\u8868\u793a\u3002\u5e26\u524d\u7f00 0 \u7684\u6574\u578b\u5e38\u91cf\u8868\u793a\u5b83\u4e3a\u516b\u8fdb\u5236\u5f62\u5f0f\uff1b\u524d\u7f00\u4e3a 0x \u6216 0X\uff0c\u5219\u8868\u793a\u5b83\u4e3a\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#_3","title":"\u6d6e\u70b9\u6570\u5e38\u91cf","text":"<p>\u6d6e\u70b9\u6570\u5e38\u91cf\u4e2d\u5305\u542b\u4e00\u4e2a\u5c0f\u6570\u70b9\uff08\u5982 123.4\uff09\u6216\u4e00\u4e2a\u6307\u6570\uff08\u5982 1e-2\uff09\uff0c\u4e5f\u53ef\u4ee5\u4e24\u8005\u90fd\u6709\u3002\u6ca1\u6709\u540e\u7f00\u7684\u6d6e\u70b9\u6570\u5e38\u91cf\u4e3a double \u7c7b\u578b\u3002\u540e\u7f00 f \u6216 F \u8868\u793a float \u7c7b\u578b\uff0c\u800c\u540e\u7f00 l \u6216 L \u5219\u8868\u793a long double \u7c7b\u578b\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#_4","title":"\u5b57\u7b26\u5e38\u91cf","text":"<p>\u4e00\u4e2a\u5b57\u7b26\u5e38\u91cf\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u4e66\u5199\u65f6\u5c06\u4e00\u4e2a\u5b57\u7b26\u62ec\u5728\u5355\u5f15\u53f7\u4e2d\u3002\u5982\u679c\u7528\u5b57\u7b26'0'\u4ee3\u66ff\u8fd9\u4e2a\u4e0e\u5177\u4f53\u5b57\u7b26\u96c6\u6709\u5173\u7684\u503c\uff08\u6bd4\u5982 48\uff09\uff0c\u90a3\u4e48\uff0c\u7a0b\u5e8f\u5c31\u65e0\u9700\u5173\u5fc3\u8be5\u5b57\u7b26\u5bf9\u5e94\u7684\u5177\u4f53\u503c\uff0c\u589e\u52a0\u4e86\u7a0b\u5e8f\u7684\u6613\u8bfb\u6027\u3002\u5b57\u7b26\u5e38\u91cf\u4e00\u822c\u7528\u6765\u4e0e\u5176\u5b83\u5b57\u7b26\u8fdb\u884c\u6bd4\u8f83\uff0c\u4f46\u4e5f\u53ef\u4ee5\u50cf\u5176\u5b83\u6574\u6570\u4e00\u6837\u53c2\u4e0e\u6570\u503c\u8fd0\u7b97\u3002</p> <p>\u8f6c\u4e49\u5b57\u7b26</p> <p>ANSI C \u8bed\u8a00\u4e2d\u7684\u5168\u90e8\u8f6c\u4e49\u5b57\u7b26\u5e8f\u5217\u5982\u4e0b\u6240\u793a\uff1a</p> <p>\\a \u54cd\u94c3\u7b26       \\\\ \u53cd\u659c\u6760</p> <p>\\b \u56de\u9000\u7b26       \\? \u95ee\u53f7</p> <p>\\f \u6362\u9875\u7b26       \\' \u5355\u5f15\u53f7</p> <p>\\n \u6362\u884c\u7b26       \\\" \u53cc\u5f15\u53f7</p> <p>\\r \u56de\u8f66\u7b26       \\ooo \u516b\u8fdb\u5236\u6570</p> <p>\\t \u6a2a\u5411\u5236\u8868\u7b26   \\xhh \u5341\u516d\u8fdb\u5236\u6570</p> <p>\\v \u7eb5\u5411\u5236\u8868\u7b26</p> <p>\u5b57\u7b26\u5e38\u91cf'\\0'\u8868\u793a\u503c\u4e3a 0 \u7684\u5b57\u7b26\uff0c\u4e5f\u5c31\u662f\u7a7a\u5b57\u7b26\uff08null\uff09\u3002\u6211\u4eec\u901a\u5e38\u7528'\\0'\u7684\u5f62\u5f0f\u4ee3\u66ff 0\uff0c\u4ee5\u5f3a\u8c03\u67d0\u4e9b\u8868\u8fbe\u5f0f\u7684\u5b57\u7b26\u5c5e\u6027\uff0c\u4f46\u5176\u6570\u5b57\u503c\u4e3a 0\u3002</p> <p>\u5e38\u91cf\u8868\u8fbe\u5f0f\u662f\u4ec5\u4ec5\u53ea\u5305\u542b\u5e38\u91cf\u7684\u8868\u8fbe\u5f0f\u3002\u8fd9\u79cd\u8868\u8fbe\u5f0f\u5728\u7f16\u8bd1\u65f6\u6c42\u503c\uff0c\u800c\u4e0d\u5728\u8fd0\u884c\u65f6\u6c42\u503c\u3002\u5b83\u53ef\u4ee5\u51fa\u73b0\u5728\u5e38\u91cf\u53ef\u4ee5\u51fa\u73b0\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#_5","title":"\u5b57\u7b26\u4e32\u5e38\u91cf","text":"<p>\u5b57\u7b26\u4e32\u5e38\u91cf\u6216\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4ee5\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u5e8f\u5217\u8868\u793a\u3002\u5b57\u7b26\u4e32\u5e38\u91cf\u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u3002\u5b57\u7b26\u4e32\u7684\u5185\u90e8\u8868\u793a\u5728\u672b\u5c3e\u6709\u4e00\u4e2a\u7a7a\u5b57\u7b26'\\0'\uff0c\u56e0\u6b64\u6240\u9700\u7684\u7269\u7406\u5b58\u50a8\u6bd4\u5f15\u53f7\u4e4b\u95f4\u5199\u5165\u7684\u5b57\u7b26\u6570\u591a\u4e00\u4e2a\u3002\u8fd9\u79cd\u8868\u793a\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6ca1\u6709\u9650\u5236\uff1b\u7a0b\u5e8f\u53ea\u9700\u8981\u626b\u63cf\u5185\u5b58\uff0c\u76f4\u5230\u627e\u5230'\\0'\u6765\u786e\u5b9a\u957f\u5ea6\u3002\u6807\u51c6\u5e93\u51fd\u6570strlen(s)\u8fd4\u56de\u5176\u5b57\u7b26\u4e32\u53c2\u6570\u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u62ec'\\0'\u3002</p> <p>\u6211\u4eec\u5e94\u8be5\u641e\u6e05\u695a\u5b57\u7b26\u5e38\u91cf\u4e0e\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u533a\u522b\uff1a'x'\u4e0e\"x\"\u662f\u4e0d\u540c\u7684\u3002\u524d\u8005\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u5176\u503c\u662f\u5b57\u6bcd x \u5728\u673a\u5668\u5b57\u7b26\u96c6\u4e2d\u5bf9\u5e94\u7684\u6570\u503c\uff08\u5185\u90e8\u8868\u793a\u503c\uff09\uff1b\u540e\u8005\u662f\u4e00\u4e2a\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\uff08\u5373\u5b57\u6bcd x\uff09\u4ee5\u53ca\u4e00\u4e2a\u7ed3\u675f\u7b26'\\0'\u7684\u5b57\u7b26\u6570\u7ec4\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#_6","title":"\u679a\u4e3e\u5e38\u91cf","text":"<p>\u679a\u4e3e\u5e38\u91cf\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6574\u578b\u5e38\u91cf\u3002\u679a\u4e3e\u5e38\u91cf\u662f\u7531\u7528\u6237\u5b9a\u4e49\u7684\u6807\u8bc6\u7b26\u7684\u5217\u8868\u3002\u5173\u952e\u5b57 enum \u8bf4\u660e\u7b26\u7528\u4e8e\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\uff0c\u5176\u5f62\u5f0f\u4e3a\uff1a</p> <p>enum \u679a\u4e3e\u540d {\u679a\u4e3e\u5e38\u91cf\u8868}\uff1b</p> <p>\u679a\u4e3e\u5e38\u91cf\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u679a\u4e3e\u5e38\u91cf\u7684\u9ed8\u8ba4\u503c\u4e3a 0\uff0c\u540e\u7eed\u679a\u4e3e\u5e38\u91cf\u7684\u503c\u4f9d\u6b21\u52a0 1\u3002\u679a\u4e3e\u5e38\u91cf\u7684\u503c\u53ef\u4ee5\u5728\u5b9a\u4e49\u65f6\u663e\u5f0f\u5730\u8d4b\u503c\u3002\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u5730\u8d4b\u503c\uff0c\u90a3\u4e48\u679a\u4e3e\u5e38\u91cf\u7684\u503c\u5c06\u6bd4\u524d\u4e00\u4e2a\u679a\u4e3e\u5e38\u91cf\u7684\u503c\u5927 1\u3002\u679a\u4e3e\u5e38\u91cf\u7684\u503c\u5fc5\u987b\u662f\u6574\u578b\u5e38\u91cf\uff0c\u4e14\u4e0d\u80fd\u91cd\u590d\u3002</p> <p>\u679a\u4e3e\u5e38\u91cf\u7684\u4f5c\u7528\u57df\u4e0e\u5176\u5b83\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u76f8\u540c\uff0c\u5373\u4ece\u5b9a\u4e49\u5904\u5230\u8be5\u679a\u4e3e\u5e38\u91cf\u6240\u5728\u7684\u5757\u7684\u7ed3\u675f\u5904\u3002\u679a\u4e3e\u5e38\u91cf\u7684\u7c7b\u578b\u4e3a int\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#24","title":"2.4 \u58f0\u660e","text":"<p>\u6240\u6709\u53d8\u91cf\u90fd\u5fc5\u987b\u5148\u58f0\u660e\u540e\u4f7f\u7528\uff0c\u5c3d\u7ba1\u67d0\u4e9b\u53d8\u91cf\u53ef\u4ee5\u901a\u8fc7\u4e0a\u4e0b\u6587\u9690\u5f0f\u5730\u58f0\u660e\u3002\u4e00\u4e2a\u58f0\u660e\u6307\u5b9a\u4e00\u79cd\u53d8\u91cf\u7c7b\u578b\uff0c\u540e\u9762\u6240\u5e26\u7684\u53d8\u91cf\u8868\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u8be5\u7c7b\u578b\u7684\u53d8\u91cf\u3002</p> <p>\u4e00\u4e2a\u58f0\u660e\u8bed\u53e5\u4e2d\u7684\u591a\u4e2a\u53d8\u91cf\u53ef\u4ee5\u62c6\u5f00\u5728\u591a\u4e2a\u58f0\u660e\u8bed\u53e5\u4e2d\u58f0\u660e\u3002\u6309\u7167\u8fd9\u79cd\u5f62\u5f0f\u4e66\u5199\u4ee3\u7801\u9700\u8981\u5360\u7528\u8f83\u591a\u7684\u7a7a\u95f4\uff0c\u4f46\u4fbf\u4e8e\u5411\u5404\u58f0\u660e\u8bed\u53e5\u4e2d\u6dfb\u52a0\u6ce8\u91ca\uff0c\u4e5f\u4fbf\u4e8e\u4ee5\u540e\u4fee\u6539\u3002</p> <p>\u8fd8\u53ef\u4ee5\u5728\u58f0\u660e\u7684\u540c\u65f6\u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5728\u58f0\u660e\u4e2d\uff0c\u5982\u679c\u53d8\u91cf\u540d\u7684\u540e\u9762\u7d27\u8ddf\u4e00\u4e2a\u7b49\u53f7\u4ee5\u53ca\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8be5\u8868\u8fbe\u5f0f\u5c31\u5145\u5f53\u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u3002</p> <p>\u5982\u679c\u53d8\u91cf\u4e0d\u662f\u81ea\u52a8\u53d8\u91cf\uff0c\u5219\u53ea\u80fd\u8fdb\u884c\u4e00\u6b21\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u5e94\u8be5\u662f\u5728\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4e4b\u524d\u8fdb\u884c\uff0c\u5e76\u4e14\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u5fc5\u987b\u4e3a\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002\u6bcf\u6b21\u8fdb\u5165\u51fd\u6570\u6216\u7a0b\u5e8f\u5757\u65f6\uff0c\u663e\u5f0f\u521d\u59cb\u5316\u7684\u81ea\u52a8\u53d8\u91cf\u90fd\u5c06\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u5176\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u4efb\u4f55\u8868\u8fbe\u5f0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5916\u90e8\u53d8\u91cf\u4e0e\u9759\u6001\u53d8\u91cf\u5c06\u88ab\u521d\u59cb\u5316\u4e3a 0\u3002\u672a\u7ecf\u663e\u5f0f\u521d\u59cb\u5316\u7684\u81ea\u52a8\u53d8\u91cf\u7684\u503c\u4e3a\u672a\u5b9a\u4e49\u503c\uff08\u5373\u65e0\u6548\u503c\uff09\u3002</p> <p>\u4efb\u4f55\u53d8\u91cf\u7684\u58f0\u660e\u90fd\u53ef\u4ee5\u4f7f\u7528 const \u9650\u5b9a\u7b26\u9650\u5b9a\u3002\u8be5\u9650\u5b9a\u7b26\u6307\u5b9a\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u5bf9\u6570\u7ec4\u800c\u8a00\uff0cconst \u9650\u5b9a\u7b26\u6307\u5b9a\u6570\u7ec4\u6240\u6709\u5143\u7d20\u7684\u503c\u90fd\u4e0d\u80fd\u88ab\u4fee\u6539\u3002const \u9650\u5b9a\u7b26\u7684\u4f7f\u7528\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\uff0c\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u7f16\u8bd1\u5668\u68c0\u67e5\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#25","title":"2.5 \u7b97\u672f\u8fd0\u7b97\u7b26","text":"<p>\u4e8c\u5143\u7b97\u672f\u8fd0\u7b97\u7b26\u5305\u62ec\uff1a+\u3001-\u3001*\u3001/\u3001%\uff08\u53d6\u6a21\u8fd0\u7b97\u7b26\uff09\u3002\u6574\u6570\u9664\u6cd5\u4f1a\u622a\u65ad\u7ed3\u679c\u4e2d\u7684\u5c0f\u6570\u90e8\u5206\u3002\u8868\u8fbe\u5f0f x % y \u7684\u7ed3\u679c\u662f x \u9664\u4ee5 y \u7684\u4f59\u6570\uff0c\u5f53 x \u80fd\u88ab y \u6574\u9664\u65f6\uff0c\u5176\u503c\u4e3a 0\u3002</p> <p>\u53d6\u6a21\u8fd0\u7b97\u7b26%\u4e0d\u80fd\u5e94\u7528\u4e8e float \u6216 double \u7c7b\u578b\u3002\u5728\u6709\u8d1f\u64cd\u4f5c\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u6574\u6570\u9664\u6cd5\u622a\u53d6\u7684\u65b9\u5411\u4ee5\u53ca\u53d6\u6a21\u8fd0\u7b97\u7ed3\u679c\u7684\u7b26\u53f7\u53d6\u51b3\u4e8e\u5177\u4f53\u673a\u5668\u7684\u5b9e\u73b0\uff0c\u8fd9\u548c\u5904\u7406\u4e0a\u6ea2\u6216\u4e0b\u6ea2\u7684\u60c5\u51b5\u662f\u4e00\u6837\u7684\u3002</p> <p>\u4e8c\u5143\u8fd0\u7b97\u7b26+\u548c-\u5177\u6709\u76f8\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u5b83\u4eec\u7684\u4f18\u5148\u7ea7\u6bd4\u8fd0\u7b97\u7b26*\u3001/\u548c%\u7684\u4f18\u5148\u7ea7\u4f4e\uff0c\u800c\u8fd0\u7b97\u7b26*\u3001/\u548c%\u7684\u4f18\u5148\u7ea7\u53c8\u6bd4\u4e00\u5143\u8fd0\u7b97\u7b26+\u548c-\u7684\u4f18\u5148\u7ea7\u4f4e\u3002\u7b97\u672f\u8fd0\u7b97\u7b26\u91c7\u7528\u4ece\u5de6\u5230\u53f3\u7684\u7ed3\u5408\u89c4\u5219\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#26","title":"2.6 \u5173\u7cfb\u8fd0\u7b97\u7b26\u4e0e\u903b\u8f91\u8fd0\u7b97\u7b26","text":"<p>\u5173\u7cfb\u8fd0\u7b97\u7b26\u5305\u62ec\u4e0b\u5217\u51e0\u4e2a\u8fd0\u7b97\u7b26\uff1a &gt; &gt;= &lt; &lt;=  \u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u4f18\u5148\u7ea7\u3002\u4f18\u5148\u7ea7\u4ec5\u6b21\u4e8e\u5b83\u4eec\u7684\u662f\u76f8\u7b49\u6027\u8fd0\u7b97\u7b26\uff1a == !=  \u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u6bd4\u7b97\u672f\u8fd0\u7b97\u7b26\u4f4e\u3002</p> <p>\u903b\u8f91\u8fd0\u7b97\u7b26&amp;&amp;\u4e0e||\u6709\u4e00\u4e9b\u8f83\u4e3a\u7279\u6b8a\u7684\u5c5e\u6027\uff0c\u7531&amp;&amp;\u4e0e||\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u6309\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8fdb\u884c\u6c42\u503c\uff0c\u5e76\u4e14\uff0c\u5728\u77e5\u9053\u7ed3\u679c\u503c\u4e3a\u771f\u6216\u5047\u540e\u7acb\u5373\u505c\u6b62\u8ba1\u7b97\u3002\u7edd\u5927\u591a\u6570 C \u8bed\u8a00\u7a0b\u5e8f\u8fd0\u7528\u4e86\u8fd9\u4e9b\u5c5e\u6027\u3002</p> <p>\u6839\u636e\u5b9a\u4e49\uff0c\u5728\u5173\u7cfb\u8868\u8fbe\u5f0f\u6216\u903b\u8f91\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5982\u679c\u5173\u7cfb\u4e3a\u771f\uff0c\u5219\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u503c\u4e3a\u6570\u503c 1\uff1b\u5982\u679c\u4e3a\u5047\uff0c\u5219\u7ed3\u679c\u503c\u4e3a\u6570\u503c 0\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#27","title":"2.7 \u7c7b\u578b\u8f6c\u6362","text":"<p>\u5f53\u4e00\u4e2a\u8fd0\u7b97\u7b26\u7684\u51e0\u4e2a\u64cd\u4f5c\u6570\u7c7b\u578b\u4e0d\u540c\u65f6\uff0c\u5c31\u9700\u8981\u901a\u8fc7\u4e00\u4e9b\u89c4\u5219\u628a\u5b83\u4eec\u8f6c\u6362\u4e3a\u67d0\u79cd\u5171\u540c\u7684\u7c7b\u578b\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u81ea\u52a8\u8f6c\u6362\u662f\u6307\u628a\u201c\u6bd4\u8f83\u7a84\u7684\u201d\u64cd\u4f5c\u6570\u8f6c\u6362\u4e3a\u201c\u6bd4\u8f83\u5bbd\u7684\u201d\u64cd\u4f5c\u6570\uff0c\u5e76\u4e14\u4e0d\u4e22\u5931\u4fe1\u606f\u7684\u8f6c\u6362\u3002\u4e0d\u5141\u8bb8\u4f7f\u7528\u65e0\u610f\u4e49\u7684\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982\uff0c\u4e0d\u5141\u8bb8\u628a float \u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u4e0b\u6807\u3002\u9488\u5bf9\u53ef\u80fd\u5bfc\u81f4\u4fe1\u606f\u4e22\u5931\u7684\u8868\u8fbe\u5f0f\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u7ed9\u51fa\u8b66\u544a\u4fe1\u606f\uff0c\u6bd4\u5982\u628a\u8f83\u957f\u7684\u6574\u578b\u503c\u8d4b\u7ed9\u8f83\u77ed\u7684\u6574\u578b\u53d8\u91cf\uff0c\u628a\u6d6e\u70b9\u578b\u503c\u8d4b\u503c\u7ed9\u6574\u578b\u53d8\u91cf\uff0c\u7b49\u7b49\uff0c\u4f46\u8fd9\u4e9b\u8868\u8fbe\u5f0f\u5e76\u4e0d\u975e\u6cd5\u3002</p> <p>\u7531\u4e8e char \u7c7b\u578b\u5c31\u662f\u8f83\u5c0f\u7684\u6574\u578b\uff0c\u56e0\u6b64\u5728\u7b97\u672f\u8868\u8fbe\u5f0f\u4e2d\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528 char \u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u8fd9\u5c31\u4e3a\u5b9e\u73b0\u67d0\u4e9b\u5b57\u7b26\u8f6c\u6362\u63d0\u4f9b\u4e86\u5f88\u5927\u7684\u7075\u6d3b\u6027\uff0c\u6bd4\u5982\uff0c\u4e0b\u9762\u7684\u51fd\u6570 atoi \u5c31\u662f\u4e00\u4f8b\uff0c\u5b83\u5c06\u4e00\u4e32\u6570\u5b57\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u6570\u503c\u3002</p> <p>\u5c06\u5b57\u7b26\u7c7b\u578b\u8f6c\u6362\u4e3a\u6574\u578b\u65f6\uff0c\u6211\u4eec\u9700\u8981\u6ce8\u610f\u4e00\u70b9\u3002C \u8bed\u8a00\u6ca1\u6709\u6307\u5b9a char \u7c7b\u578b\u7684\u53d8\u91cf\u662f\u65e0\u7b26\u53f7\u53d8\u91cf\uff08signed\uff09\u8fd8\u662f\u5e26\u7b26\u53f7\u53d8\u91cf\uff08unsigned\uff09\u3002\u5f53\u628a\u4e00\u4e2a char \u7c7b\u578b\u7684\u503c\u8f6c\u6362\u4e3a int \u7c7b\u578b\u7684\u503c\u65f6\uff0c\u5176\u7ed3\u679c\u6709\u6ca1\u6709\u53ef\u80fd\u4e3a\u8d1f\u6574\u6570\uff1f\u5bf9\u4e8e\u4e0d\u540c\u7684\u673a\u5668\uff0c\u5176\u7ed3\u679c\u4e5f\u4e0d\u540c\uff0c\u8fd9\u53cd\u6620\u4e86\u4e0d\u540c\u673a\u5668\u7ed3\u6784\u4e4b\u95f4\u7684\u533a\u522b\u3002\u5728\u67d0\u4e9b\u673a\u5668\u4e2d\uff0c\u5982\u679c char \u7c7b\u578b\u503c\u7684\u6700\u5de6\u4e00\u4f4d\u4e3a 1\uff0c\u5219\u8f6c\u6362\u4e3a\u8d1f\u6574\u6570\uff08\u8fdb\u884c\u201c\u7b26\u53f7\u6269\u5c55\u201d\uff09\u3002\u800c\u5728\u53e6\u4e00\u4e9b\u673a\u5668\u4e2d\uff0c\u628a char \u7c7b\u578b\u503c\u8f6c\u6362\u4e3a int \u7c7b\u578b\u65f6\uff0c\u5728 char \u7c7b\u578b\u503c\u7684\u5de6\u8fb9\u6dfb\u52a0 0\uff0c\u8fd9\u6837\u5bfc\u81f4\u7684\u8f6c\u6362\u7ed3\u679c\u503c\u603b\u662f\u6b63\u503c\u3002</p> <p>C \u8bed\u8a00\u7684\u5b9a\u4e49\u4fdd\u8bc1\u4e86\u673a\u5668\u7684\u6807\u51c6\u6253\u5370\u5b57\u7b26\u96c6\u4e2d\u7684\u5b57\u7b26\u4e0d\u4f1a\u662f\u8d1f\u503c\uff0c\u56e0\u6b64\uff0c\u5728\u8868\u8fbe\u5f0f\u4e2d\u8fd9\u4e9b\u5b57\u7b26\u603b\u662f\u6b63\u503c\u3002\u4f46\u662f\uff0c\u5b58\u50a8\u5728\u5b57\u7b26\u53d8\u91cf\u4e2d\u7684\u4f4d\u6a21\u5f0f\u5728\u67d0\u4e9b\u673a\u5668\u4e2d\u53ef\u80fd\u662f\u8d1f\u7684\uff0c\u800c\u5728\u53e6\u4e00\u4e9b\u673a\u5668\u4e0a\u53ef\u80fd\u662f\u6b63\u7684\u3002\u4e3a\u4e86\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u53ef\u79fb\u690d\u6027\uff0c\u5982\u679c\u8981\u5728 char \u7c7b\u578b\u7684\u53d8\u91cf\u4e2d\u5b58\u50a8\u975e\u5b57\u7b26\u6570\u636e\uff0c\u6700\u597d\u6307\u5b9a signed \u6216 unsigned \u9650\u5b9a\u7b26\u3002</p> <p>C \u8bed\u8a00\u4e2d\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\u4f1a\u8fdb\u884c**\u9690\u5f0f\u7684\u7b97\u672f\u7c7b\u578b\u8f6c\u6362**\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u4e8c\u5143\u8fd0\u7b97\u7b26\uff08\u5177\u6709\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u8fd0\u7b97\u7b26\u79f0\u4e3a\u4e8c\u5143\u8fd0\u7b97\u7b26\uff0c\u6bd4\u5982+\u6216*\uff09\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u5177\u6709\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u90a3\u4e48\u5728\u8fdb\u884c\u8fd0\u7b97\u4e4b\u524d\u5148\u8981\u628a\u201c\u8f83\u4f4e\u201d\u7684\u7c7b\u578b\u63d0\u5347\u4e3a\u201c\u8f83\u9ad8\u201d\u7684\u7c7b\u578b\uff0c\u8fd0\u7b97\u7684\u7ed3\u679c\u4e3a\u8f83\u9ad8\u7684\u7c7b\u578b\u3002</p> <p>\u8d4b\u503c\u65f6\u4e5f\u8981\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002\u8d4b\u503c\u8fd0\u7b97\u7b26\u53f3\u8fb9\u7684\u503c\u9700\u8981\u8f6c\u6362\u4e3a\u5de6\u8fb9\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u5de6\u8fb9\u53d8\u91cf\u7684\u7c7b\u578b\u5373\u8d4b\u503c\u8868\u8fbe\u5f0f\u7ed3\u679c\u7684\u7c7b\u578b\u3002 \u524d\u9762\u63d0\u5230\u8fc7\uff0c\u65e0\u8bba\u662f\u5426\u8fdb\u884c\u7b26\u53f7\u6269\u5c55\uff0c\u5b57\u7b26\u578b\u53d8\u91cf\u90fd\u5c06\u88ab\u8f6c\u6362\u4e3a\u6574\u578b\u53d8\u91cf\u3002\u5f53\u628a\u8f83\u957f\u7684\u6574\u6570\u8f6c\u6362\u4e3a\u8f83\u77ed\u7684\u6574\u6570\u6216 char \u7c7b\u578b\u65f6\uff0c\u8d85\u51fa\u7684\u9ad8\u4f4d\u90e8\u5206\u5c06\u88ab\u4e22\u5f03\u3002</p> <p>\u5728\u4efb\u4f55\u8868\u8fbe\u5f0f\u4e2d\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u79f0\u4e3a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u4e00\u5143\u8fd0\u7b97\u7b26\u5f3a\u5236\u8fdb\u884c\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002\u5728\u4e0b\u5217\u8bed\u53e5\u4e2d\uff0c\u8868\u8fbe\u5f0f\u5c06\u6309\u7167\u4e0a\u8ff0\u8f6c\u6362\u89c4\u5219\u88ab\u8f6c\u6362\u4e3a\u7c7b\u578b\u540d\u6307\u5b9a\u7684\u7c7b\u578b\uff1a</p> <p>(\u7c7b\u578b\u540d) \u8868\u8fbe\u5f0f</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#28","title":"2.8 \u81ea\u589e\u4e0e\u81ea\u51cf\u8fd0\u7b97\u7b26","text":"<p>C \u8bed\u8a00\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7528\u4e8e\u53d8\u91cf\u9012\u589e\u4e0e\u9012\u51cf\u7684\u7279\u6b8a\u8fd0\u7b97\u7b26\u3002\u81ea\u589e\u8fd0\u7b97\u7b26++\u4f7f\u5176\u64cd\u4f5c\u6570\u9012\u589e 1\uff0c\u81ea\u51cf\u8fd0\u7b97\u7b26\u4f7f\u5176\u64cd\u4f5c\u6570\u9012\u51cf 1\u3002</p> <p>++\u4e0e--\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\u7279\u6b8a\u7684\u5730\u65b9\u4e3b\u8981\u8868\u73b0\u5728\uff1a\u5b83\u4eec\u65e2\u53ef\u4ee5\u7528\u4f5c\u524d\u7f00\u8fd0\u7b97\u7b26\uff08\u7528\u5728\u53d8\u91cf\u524d\u9762\uff0c\u5982++n\uff09\u3002\u4e5f\u53ef\u4ee5\u7528\u4f5c\u540e\u7f00\u8fd0\u7b97\u7b26\uff08\u7528\u5728\u53d8\u91cf\u540e\u9762\uff0c\u5982 n++\uff09\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u5176\u6548\u679c\u90fd\u662f\u5c06\u53d8\u91cf n \u7684\u503c\u52a0 1\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u4e4b\u95f4\u6709\u4e00\u70b9\u4e0d\u540c\u3002\u8868\u8fbe\u5f0f++n \u5148\u5c06 n \u7684\u503c\u9012\u589e 1\uff0c\u7136\u540e\u518d\u4f7f\u7528\u53d8\u91cf n \u7684\u503c\uff0c\u800c\u8868\u8fbe\u5f0f n++\u5219\u662f\u5148\u4f7f\u7528\u53d8\u91cf n \u7684\u503c\uff0c\u7136\u540e\u518d\u5c06 n \u7684\u503c\u9012\u589e 1\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#29","title":"2.9 \u4f4d\u8fd0\u7b97\u7b26","text":"<p>C \u8bed\u8a00\u63d0\u4f9b\u4e86 6 \u4e2a\u4f4d\u64cd\u4f5c\u8fd0\u7b97\u7b26\u3002\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u53ea\u80fd\u4f5c\u7528\u4e8e\u6574\u578b\u64cd\u4f5c\u6570\uff0c\u5373\u53ea\u80fd\u4f5c\u7528\u4e8e\u5e26\u7b26\u53f7\u6216\u65e0\u7b26\u53f7 char\u3001short\u3001int\u3001long \u7c7b\u578b\uff1a</p> <ul> <li>&amp; \u6309\u4f4d\u4e0e\uff08AND\uff09</li> <li>| \u6309\u4f4d\u6216\uff08OR\uff09</li> <li>^ \u6309\u4f4d\u5f02\u6216\uff08XOR\uff09</li> <li>&lt;&lt; \u5de6\u79fb</li> <li> <p>\u53f3\u79fb</p> </li> <li>~ \u6309\u4f4d\u6c42\u53cd\uff08\u4e00\u5143\u8fd0\u7b97\u7b26\uff09</li> </ul> <p>\u6309\u4f4d\u4e0e\u8fd0\u7b97\u7b26&amp;\u7ecf\u5e38\u7528\u4e8e\u5c4f\u853d\u67d0\u4e9b\u4e8c\u8fdb\u5236\u4f4d\uff0c\u4f8b\u5982\uff1an = n &amp; 0177; \u8be5\u8bed\u53e5\u5c06 n \u4e2d\u9664 7 \u4e2a\u4f4e\u4e8c\u8fdb\u5236\u4f4d\u5916\u7684\u5176\u5b83\u5404\u4f4d\u5747\u7f6e\u4e3a 0\u3002</p> <p>\u6309\u4f4d\u6216\u8fd0\u7b97\u7b26|\u5e38\u7528\u4e8e\u5c06\u67d0\u4e9b\u4e8c\u8fdb\u5236\u4f4d\u7f6e\u4e3a 1\uff0c\u4f8b\u5982\uff1ax = x | SET_ON\uff1b \u8be5\u8bed\u53e5\u5c06 x \u4e2d\u5bf9\u5e94\u4e8e SET_ON \u4e2d\u4e3a 1 \u7684\u90a3\u4e9b\u4e8c\u8fdb\u5236\u4f4d\u7f6e\u4e3a 1\u3002</p> <p>\u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u7b26^\u5f53\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u5bf9\u5e94\u4f4d\u4e0d\u76f8\u540c\u65f6\u5c06\u8be5\u4f4d\u8bbe\u7f6e\u4e3a 1\uff0c\u5426\u5219\uff0c\u5c06\u8be5\u4f4d\u8bbe\u7f6e\u4e3a0\u3002  \u6211\u4eec\u5fc5\u987b\u5c06\u4f4d\u8fd0\u7b97\u7b26&amp;\u3001|\u540c\u903b\u8f91\u8fd0\u7b97\u7b26&amp;&amp;\u3001||\u533a\u5206\u5f00\u6765\uff0c\u540e\u8005\u7528\u4e8e\u4ece\u5de6\u81f3\u53f3\u6c42\u8868\u8fbe\u5f0f\u7684\u771f\u503c\u3002\u4f8b\u5982\uff0c\u5982\u679c x \u7684\u503c\u4e3a 1\uff0cY \u7684\u503c\u4e3a 2\uff0c\u90a3\u4e48\uff0cx &amp; y \u7684\u7ed3\u679c\u4e3a 0\uff0c\u800c x &amp;&amp; y \u7684\u503c\u4e3a 1</p> <p>\u79fb\u4f4d\u8fd0\u7b97\u7b26&lt;&lt;\u4e0e&gt;&gt;\u5206\u522b\u7528\u4e8e\u5c06\u8fd0\u7b97\u7684\u5de6\u64cd\u4f5c\u6570\u5de6\u79fb\u4e0e\u53f3\u79fb\uff0c\u79fb\u52a8\u7684\u4f4d\u6570\u5219\u7531\u53f3\u64cd\u4f5c\u6570\u6307 \u5b9a\uff08\u53f3\u64cd\u4f5c\u6570\u7684\u503c\u5fc5\u987b\u662f\u975e\u8d1f\u503c\uff09\u3002\u56e0\u6b64\uff0c\u8868\u8fbe\u5f0f x &lt;&lt; 2 \u5c06\u628a x \u7684\u503c\u5de6\u79fb 2 \u4f4d\uff0c\u53f3\u8fb9\u7a7a\u51fa\u7684 2 \u4f4d\u7528 0 \u586b\u8865\uff0c\u8be5\u8868\u8fbe\u5f0f\u7b49\u4ef7\u4e8e\u5bf9\u5de6\u64cd\u4f5c\u6570\u4e58\u4ee5 4\u3002</p> <p>\u4e00\u5143\u8fd0\u7b97\u7b26~\u7528\u4e8e\u6c42\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u53cd\u7801\uff0c\u5373\u5206\u522b\u5c06\u64cd\u4f5c\u6570\u5404\u4e8c\u8fdb\u5236\u4f4d\u4e0a\u7684 1 \u53d8\u4e3a 0\uff0c0 \u53d8\u4e3a 1\u3002</p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#210","title":"2.10 \u8d4b\u503c\u8fd0\u7b97\u7b26\u4e0e\u8868\u8fbe\u5f0f","text":"<p>\u5927\u591a\u6570\u4e8c\u5143\u8fd0\u7b97\u7b26\uff08\u5373\u6709\u5de6\u3001\u53f3\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u8fd0\u7b97\u7b26\uff0c\u6bd4\u5982+\uff09\u90fd\u6709\u4e00\u4e2a\u76f8\u5e94\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26 op=\uff0c\u5176\u4e2d\uff0cop \u53ef\u4ee5\u662f\u4e0b\u9762\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u4e4b\u4e00\uff1a</p> <p><code>+ - * / % &lt;&lt; &gt;&gt; &amp; ^ |</code></p> <p>\u5982\u679c expr1 \u548c expr2 \u662f\u8868\u8fbe\u5f0f\uff0c\u90a3\u4e48 <code>expr1 op= expr2</code> </p> <p>\u7b49\u4ef7\u4e8e\uff1a <code>expr1 = (expr1) op (expr2)</code></p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#211","title":"2.11 \u6761\u4ef6\u8868\u8fbe\u5f0f","text":"<p>\u6761\u4ef6\u8868\u8fbe\u5f0f if-else \u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a</p> <pre><code>if (\u8868\u8fbe\u5f0f 1)\n    \u8bed\u53e5 1\nelse if (\u8868\u8fbe\u5f0f 2)\n    \u8bed\u53e5 2\nelse if (\u8868\u8fbe\u5f0f 3)\n    \u8bed\u53e5 3\n</code></pre> <p>\u6761\u4ef6\u8868\u8fbe\u5f0f\u5f62\u5f0f\uff08\u4e09\u5143\uff09\uff1a</p> <p><code>expr1 ? expr2 : expr3</code></p>"},{"location":"zh/CODING/C-C%2B%2B/C-NOTES/c-notes/#212","title":"2.12 \u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u4e0e\u6c42\u503c\u6b21\u5e8f","text":"<p>\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u4e0e\u6c42\u503c\u6b21\u5e8f\u8868\uff1a</p> \u8fd0\u7b97\u7b26 \u4f18\u5148\u7ea7 () [] -&gt; . \u4ece\u5de6\u5230\u53f3 ! ~ ++ -- + - * &amp; (\u7c7b\u578b) sizeof \u4ece\u53f3\u5230\u5de6 * / % \u4ece\u5de6\u5230\u53f3 + - \u4ece\u5de6\u5230\u53f3 &lt;&lt; &gt;&gt; \u4ece\u5de6\u5230\u53f3 &lt; &lt;= &gt; &gt;= \u4ece\u5de6\u5230\u53f3 == != \u4ece\u5de6\u5230\u53f3 &amp; \u4ece\u5de6\u5230\u53f3 ^ \u4ece\u5de6\u5230\u53f3 | \u4ece\u5de6\u5230\u53f3 &amp;&amp; \u4ece\u5de6\u5230\u53f3 || \u4ece\u5de6\u5230\u53f3 ?: \u4ece\u53f3\u5230\u5de6 = += -= *= /= %= &amp;= ^= |= &lt;&lt;= &gt;&gt;= \u4ece\u53f3\u5230\u5de6 , \u4ece\u5de6\u5230\u53f3"},{"location":"zh/CODING/HTML-CSS-JS/CSS/css/","title":"\u7ea7\u8054\u6837\u5f0f\u8868 (CSS)","text":""},{"location":"zh/CODING/HTML-CSS-JS/HTML/html/","title":"\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00 (HTML)","text":""},{"location":"zh/CODING/PYTHON/python/","title":"Python","text":"<p>Tip</p> <p>\u5b66\u4e60 Python \u6709\u5f88\u591a\u9009\u62e9\uff0c\u4f46\u6700\u597d\u575a\u6301\u4e00\u4e2a\u3002\u8ba4\u51c6\u4e00\u4e2a\u52aa\u529b\u5b66\uff0c\u603b\u4f1a\u6709\u6536\u83b7\uff0c\u800c\u4e0d\u5e94\u8be5\u5728\u56e0\u4e3a\u9009\u62e9\u592a\u591a\u800c\u65e0\u6240\u9002\u4ece\u4e2d\u6d6a\u8d39\u65f6\u95f4\u3002</p> <ul> <li> <p> Python For Beginners</p> <p>\u4e2d\u6587\uff0c\u53ef\u89c6\u5316\u673a\u5668\u5b66\u4e60\u7cfb\u5217\u4e4b\u7b2c\u4e00\u90e8</p> <p>  Portal </p> </li> </ul>"},{"location":"zh/CODING/PYTHON/ROADMAP/roadmap/","title":"Python \u5b66\u4e60\u8def\u7ebf\u56fe","text":""},{"location":"zh/CONTROL/control/","title":"\u63a7\u5236","text":""},{"location":"zh/CONTROL/control/#_2","title":"\u7406\u8bba","text":"<ul> <li> <p> \u5de5\u7a0b\u8d44\u6e90\u5e93\uff08Engineering Media\uff09\ud83c\udfc6</p> <p>\u7248\u6743\u4eba: Brian Douglas</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u63a7\u5236\u7406\u8bba\u57fa\u7840 \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>\u4f5c\u8005\uff1aBrian Douglas</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u63a7\u5236\u7cfb\u7edf\u8bfe\u7a0b \ud83c\udfaf\ud83c\udfc6</p> <p>\u4f5c\u8005: Brian Douglas</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul> <p></p>"},{"location":"zh/CS/CS/#_1","title":"\u8ba1\u7b97\u673a\u79d1\u5b66","text":""},{"location":"zh/CS/CS/#_2","title":"\u8ba1\u7b97\u673a\u57fa\u7840","text":"<ul> <li> <p> CS Crash Course \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>\u975e\u5e38\u975e\u5e38\u975e\u5e38\u597d\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5165\u95e8\u89c6\u9891\u7cfb\u5217\uff0c\u5f3a\u70c8\u63a8\u8350\uff01</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/CS/CS/#_3","title":"\u8ba1\u7b97\u673a\u7406\u8bba","text":""},{"location":"zh/CS/CS/#_4","title":"\u81ea\u5b66\u6307\u5357","text":"<ul> <li> <p> Teach Yourself CS</p> <p>\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u81ea\u5b66\u6307\u5357\uff0c\u9002\u5408\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u521d\u5b66\u8005\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> CS DIY</p> <p>\u53e6\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u81ea\u5b66\u6307\u5357\uff0c\u9002\u5408\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u521d\u5b66\u8005\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Hello Algo \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>Hello Algo \u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u7b97\u6cd5\u81ea\u5b66\u6307\u5357\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/CS/CS/#_5","title":"\u7ecf\u5178\u4e66\u7c4d","text":"<ul> <li> <p> \u8ba1\u7b97\u673a\u79d1\u5b66\u57fa\u7840 \ud83c\udfaf\u2705</p> <p>\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u672c\u4e66\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u57fa\u7840\u3002\u8fd9\u662f\u4e00\u672c\u975e\u5e38\u9002\u5408\u521d\u5b66\u8005\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e66\u7c4d\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u8ba1\u7b97\u673a\u7cfb\u7edf\uff1a\u7a0b\u5e8f\u5458\u89c6\u89d2 \ud83c\udfaf\ud83c\udfc6</p> <p>Computer System: A Programmer's Perspectiv - \u8fd9\u662f\u7ecf\u5178\uff0c\u4f46\u662f\u4e0d\u5bb9\u6613\u8bfb\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u5b83\u7edd\u5bf9\u503c\u5f97\u4f60\u82b1\u65f6\u95f4\u53bb\u8bfb\u3002</p> <p>  \u4e0b\u8f7d </p> <p>  \u5b98\u65b9\u7f51\u5740 </p> <p>  \u8bfe\u7a0b\u89c6\u9891(Youtube) </p> <p>  \u4e2d\u6587\u5bfc\u8bfb </p> <p>  \u4e2d\u6587\u5bfc\u8bfb </p> </li> </ul>"},{"location":"zh/CS/CS/#_6","title":"\u5728\u7ebf\u5b66\u4e60\u5e73\u53f0","text":"<ul> <li> <p> Coursera \ud83c\udfc6</p> <p>Coursera \u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5728\u7ebf\u5b66\u4e60\u5e73\u53f0\u3002\u5b83\u63d0\u4f9b\u4e86\u5f88\u591a\u514d\u8d39\u7684\u8bfe\u7a0b\u3002\u4f60\u4e5f\u53ef\u4ee5\u4ed8\u8d39\u83b7\u5f97\u8bc1\u4e66\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> edX</p> <p>edX \u662f\u53e6\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5728\u7ebf\u5b66\u4e60\u5e73\u53f0\u3002\u5b83\u63d0\u4f9b\u4e86\u5f88\u591a\u514d\u8d39\u7684\u8bfe\u7a0b\u3002\u4f60\u4e5f\u53ef\u4ee5\u4ed8\u8d39\u83b7\u5f97\u8bc1\u4e66\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Udemy</p> <p>Udemy \u662f\u53e6\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5728\u7ebf\u5b66\u4e60\u5e73\u53f0\u3002\u5b83\u63d0\u4f9b\u4e86\u5f88\u591a\u514d\u8d39\u7684\u8bfe\u7a0b\u3002\u4f60\u4e5f\u53ef\u4ee5\u4ed8\u8d39\u83b7\u5f97\u8bc1\u4e66\u3002</p> <p>  \u4e0b\u8f7d </p> </li> </ul>"},{"location":"zh/CS/CS/#_7","title":"\u6210\u4e3a\u5f00\u53d1\u8005","text":"<ul> <li> <p> \u8def\u7ebf\u56fe \ud83c\udfc6</p> <p>\u4e00\u7ad9\u5f0f\u5b66\u4e60\u6210\u4e3a\u5f00\u53d1\u8005\u7684\u8def\u7ebf\u56fe</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u9ed1\u9a6c\u7a0b\u5e8f\u5458\u6559\u7a0b \ud83c\udfc6</p> <p>\u6210\u4e3a\u5f00\u53d1\u8005\u7684\u5b9e\u7528\u6307\u5357</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/CS/CSAPP/csapp/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\uff1a\u7a0b\u5e8f\u5458\u89c6\u89d2","text":""},{"location":"zh/DEV/dev/","title":"\u5f00\u53d1","text":""},{"location":"zh/DEV/BACK-END/back-end/","title":"\u540e\u7aef","text":""},{"location":"zh/DEV/DEVENV/devenv/","title":"\u5f00\u53d1\u73af\u5883\u642d\u5efa","text":""},{"location":"zh/DEV/DEVENV/CLOUD-SYNC/cloud-sync/","title":"\u4e91\u540c\u6b65","text":""},{"location":"zh/DEV/DEVENV/CLOUD-SYNC/cloud-sync/#_2","title":"\u6211\u7684\u8bbe\u7f6e","text":"<p>\u6211\u5728\u529e\u516c\u5ba4\u548c\u5bb6\u91cc\u90fd\u6709Windows\u548cMacOS\u7535\u8111\uff0c\u540c\u6b65\u5bf9\u6211\u6765\u8bf4\u975e\u5e38\u91cd\u8981\u3002</p>"},{"location":"zh/DEV/DEVENV/CLOUD-SYNC/cloud-sync/#icloud","title":"iCloud","text":"<p>\u5982\u4f55\u4f7f\u7528iCloud\uff1f</p> <ul> <li>iCloud</li> </ul> <p>\u4f7f\u7528iCloud\u7684\u6b65\u9aa4\uff1a</p> <ul> <li> <p>\u6b65\u9aa41\uff1a\u521b\u5efa\u4e00\u4e2aApple ID</p> </li> <li> <p>\u6b65\u9aa42\uff1a\u767b\u5f55</p> </li> <li> <p>\u6b65\u9aa43\uff1a\u6253\u5f00iCloud Drive</p> </li> <li> <p>\u6b65\u9aa44\uff1a\u6253\u5f00\u60a8\u60f3\u8981\u540c\u6b65\u7684\u9879\u76ee\u6216\u6587\u4ef6\u5939</p> </li> <li> <p>\u6b65\u9aa45\uff1a\u5b8c\u6210</p> </li> </ul>"},{"location":"zh/DEV/DEVENV/CLOUD-SYNC/cloud-sync/#onedrive","title":"OneDrive","text":"<p>\u5982\u4f55\u4f7f\u7528OneDrive\uff1f</p> <ul> <li>OneDrive</li> </ul> <p>\u4f7f\u7528OneDrive\u7684\u6b65\u9aa4\uff1a</p> <ul> <li> <p>\u6b65\u9aa41\uff1a\u521b\u5efa\u4e00\u4e2aMicrosoft\u8d26\u6237</p> </li> <li> <p>\u6b65\u9aa42\uff1a\u767b\u5f55</p> </li> <li> <p>\u6b65\u9aa43\uff1a\u6253\u5f00OneDrive</p> </li> <li> <p>\u6b65\u9aa44\uff1a\u6253\u5f00\u60a8\u60f3\u8981\u540c\u6b65\u7684\u9879\u76ee\u6216\u6587\u4ef6\u5939</p> </li> <li> <p>\u6b65\u9aa45\uff1a\u5b8c\u6210</p> </li> </ul>"},{"location":"zh/DEV/DEVENV/CLOUD-SYNC/cloud-sync/#_3","title":"\u8de8\u5e73\u53f0\u540c\u6b65","text":"<p>\u5b9e\u9645\u4e0a\uff0ciCloud\u548cOneDrive\u90fd\u53ef\u4ee5\u5728Windows\u548cMacOS\u4e0a\u4f7f\u7528\u3002</p>"},{"location":"zh/DEV/DEVENV/CLOUD-SYNC/cloud-sync/#windowsicloudmacos","title":"\u5728Windows\u4e0a\u4f7f\u7528iCloud\u4e0eMacOS\u540c\u6b65","text":"<p>\u5982\u4f55\u5728Windows\u4e0a\u4f7f\u7528iCloud\u4e0eMacOS\u540c\u6b65\uff1f</p> <ul> <li>iCloud for Windows</li> </ul> <p>\u5728Windows\u4e0a\u4f7f\u7528iCloud\u4e0eMacOS\u540c\u6b65\u7684\u6b65\u9aa4\uff1a</p> <ul> <li> <p>\u6b65\u9aa41\uff1a\u4e0b\u8f7d\u5e76\u5b89\u88c5iCloud for Windows</p> </li> <li> <p>\u6b65\u9aa42\uff1a\u767b\u5f55</p> </li> <li> <p>\u6b65\u9aa43\uff1a\u6253\u5f00iCloud Drive</p> </li> <li> <p>\u6b65\u9aa44\uff1a\u6253\u5f00\u60a8\u60f3\u8981\u540c\u6b65\u7684\u9879\u76ee\u6216\u6587\u4ef6\u5939</p> </li> <li> <p>\u6b65\u9aa45\uff1a\u5b8c\u6210</p> </li> </ul> <p>\u5b9e\u9645\u4e0a\uff0c\u60a8\u53ef\u4ee5\u5728Windows\u4e0a\u8bbf\u95eeiCloud Drive\u4e0a\u7684\u6587\u4ef6\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u6587\u4ef6\u4e0d\u4f1a\u4e0b\u8f7d\u5230\u672c\u5730\u8ba1\u7b97\u673a\u3002\u53ef\u4ee5\u53f3\u952e\u76f8\u5e94\u6587\u4ef6\u5939\uff0c\u9009\u62e9\u201c\u59cb\u7ec8\u4fdd\u7559\u5728\u6b64\u8bbe\u5907\u4e0a\u201d\u3002</p>"},{"location":"zh/DEV/DEVENV/CLOUD-SYNC/cloud-sync/#macosonedrivewindows","title":"\u5728MacOS\u4e0a\u4f7f\u7528OneDrive\u4e0eWindows\u540c\u6b65","text":"<p>\u5982\u4f55\u5728MacOS\u4e0a\u4f7f\u7528OneDrive\u4e0eWindows\u540c\u6b65\uff1f</p> <ul> <li>OneDrive for Mac</li> </ul> <p>\u5728MacOS\u4e0a\u4f7f\u7528OneDrive\u4e0eWindows\u540c\u6b65\u7684\u6b65\u9aa4\uff1a</p> <ul> <li> <p>\u6b65\u9aa41\uff1a\u4e0b\u8f7d\u5e76\u5b89\u88c5OneDrive for Mac</p> </li> <li> <p>\u6b65\u9aa42\uff1a\u767b\u5f55</p> </li> <li> <p>\u6b65\u9aa43\uff1a\u6253\u5f00OneDrive</p> </li> <li> <p>\u6b65\u9aa44\uff1a\u6253\u5f00\u60a8\u60f3\u8981\u540c\u6b65\u7684\u9879\u76ee\u6216\u6587\u4ef6\u5939</p> </li> <li> <p>\u6b65\u9aa45\uff1a\u5b8c\u6210</p> </li> </ul>"},{"location":"zh/DEV/DEVENV/LATEX/latex/#_1","title":"\u6a21\u677f","text":""},{"location":"zh/DEV/DEVENV/LATEX/latex/#elsevier","title":"Elsevier","text":"<ul> <li> <p> Latex \u6a21\u677f</p> <p>Elsevier CAS \u6a21\u677f.</p> <p>  \u4f20\u9001\u95e8 </p> <p>  \u6587\u6863 </p> </li> </ul>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/","title":"\u8fdc\u7a0b\u63a7\u5236","text":""},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#ssh","title":"SSH","text":"<p>SSH\u662f\u4e00\u79cd\u534f\u8bae\uff0c\u5141\u8bb8\u60a8\u901a\u8fc7\u7ec8\u7aef\u8fde\u63a5\u5230\u8fdc\u7a0b\u8ba1\u7b97\u673a\u5e76\u5bf9\u5176\u8fdb\u884c\u63a7\u5236\u3002</p>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#_2","title":"\u7528\u6cd5","text":"<ul> <li>\u6b65\u9aa41 - \u6253\u5f00\u7ec8\u7aef</li> <li>\u6b65\u9aa42 - \u8f93\u5165 <code>ssh \u7528\u6237\u540d@\u4e3b\u673a\u540d</code><ul> <li><code>\u7528\u6237\u540d</code> \u662f\u8fdc\u7a0b\u8ba1\u7b97\u673a\u7684\u7528\u6237\u540d</li> <li><code>\u4e3b\u673a\u540d</code> \u662f\u8fdc\u7a0b\u8ba1\u7b97\u673a\u7684\u4e3b\u673a\u540d\uff0c\u53ef\u4ee5\u662fIP\u5730\u5740\u6216\u57df\u540d</li> </ul> </li> </ul>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u5982\u679c\u8981\u4f7f\u7528SSH\u8fde\u63a5\u5230\u8fdc\u7a0b\u8ba1\u7b97\u673a\uff0c\u5fc5\u987b\u786e\u4fdd\u8fdc\u7a0b\u8ba1\u7b97\u673a\u5b89\u88c5\u5e76\u8fd0\u884c\u4e86SSH\u670d\u52a1\u5668\uff01\uff01\uff01</li> </ul>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#windows","title":"Windows","text":"<ul> <li>\u5b89\u88c5\u5e76\u8fd0\u884cOpenSSH\u670d\u52a1\u5668<ul> <li>\ud83d\udd17 \u5728Windows\u4e0a\u5f00\u59cb\u4f7f\u7528OpenSSH<ul> <li>OpenSSH\u5ba2\u6237\u7aef - \u4eceWindows\u8ba1\u7b97\u673a\u63a7\u5236\u5176\u4ed6\u8ba1\u7b97\u673a</li> <li>OpenSSH\u670d\u52a1\u5668 - \u4ece\u5176\u4ed6\u8ba1\u7b97\u673a\u63a7\u5236Windows\u8ba1\u7b97\u673a</li> </ul> </li> <li>\u786e\u4fdd\u4e24\u8005\u90fd\u5df2\u5b89\u88c5<ul> <li>\u5982\u4f55\u505a\u5230\uff1f\u8bf7\u53c2\u8003\u4e0a\u9762\u7684\u94fe\u63a5</li> </ul> </li> <li>\u786e\u4fddSSH\u670d\u52a1\u5668\u6b63\u5728\u8fd0\u884c\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728Windows\u542f\u52a8\u65f6\u81ea\u52a8\u542f\u52a8\uff1a<ul> <li>\u6b65\u9aa41 - \u6253\u5f00 <code>\u670d\u52a1</code></li> <li>\u6b65\u9aa42 - \u627e\u5230 <code>OpenSSH SSH Server</code> \u548c <code>OpenSSH Authentication Agent</code></li> <li>\u6b65\u9aa43 - \u53f3\u952e\u5355\u51fb\u5b83\u4eec\uff0c\u9009\u62e9 <code>\u542f\u52a8</code></li> <li>\u6b65\u9aa44 - \u53f3\u952e\u5355\u51fb\u5b83\u4eec\uff0c\u9009\u62e9 <code>\u5c5e\u6027</code></li> <li>\u6b65\u9aa45 - \u5728 <code>\u542f\u52a8\u7c7b\u578b</code> \u4e2d\u9009\u62e9 <code>\u81ea\u52a8</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#linux-ubuntu","title":"Linux - Ubuntu","text":"<ul> <li>step 1 - \u5b89\u88c5openssh-server</li> </ul> <pre><code>sudo apt-get install openssh-server\n</code></pre> <ul> <li>step 2 - \u542f\u7528ssh\u670d\u52a1\u5668</li> </ul> <pre><code>sudo service ssh start\n</code></pre> <ul> <li>step 3 - \u67e5\u770bssh\u670d\u52a1\u5668\u662f\u5426\u6b63\u5728\u8fd0\u884c</li> </ul> <pre><code>sudo service ssh status\n</code></pre> <ul> <li>step 4 - \u542f\u7528ssh\u670d\u52a1\u5668\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\u81ea\u52a8\u542f\u52a8</li> </ul> <pre><code>sudo systemctl enable ssh\n</code></pre> <ul> <li>step 5 - \u67e5\u770bssh\u670d\u52a1\u5668\u662f\u5426\u6b63\u5728\u8fd0\u884c\uff08\u5f00\u673a\u542f\u52a8\uff09</li> </ul> <pre><code>sudo systemctl is-enabled ssh\n</code></pre>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#_4","title":"\u8f6f\u4ef6","text":"<p>\u4e00\u4e9b\u8f6f\u4ef6\u53ef\u7528\u4e8e\u901a\u8fc7SSH\u8fde\u63a5\u5230\u8fdc\u7a0b\u8ba1\u7b97\u673a\uff0c\u4f8b\u5982\uff1a - Windows     - MobaXterm         - \u6211\u5728Windows\u4e0a\u6700\u559c\u6b22\u7684SSH\u5ba2\u6237\u7aef     - PuTTY         - Windows\u4e0a\u6700\u6d41\u884c\u7684SSH\u5ba2\u6237\u7aef - MacOS     - Termius         - \u6211\u5728MacOS\u4e0a\u6700\u559c\u6b22\u7684SSH\u5ba2\u6237\u7aef - Linux     - OpenSSH         - Linux\u4e0a\u6700\u6d41\u884c\u7684SSH\u5ba2\u6237\u7aef</p>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#vnc","title":"VNC","text":"<p>VNC\u662f\u4e00\u79cd\u534f\u8bae\uff0c\u5141\u8bb8\u60a8\u901a\u8fc7\u56fe\u5f62\u7528\u6237\u754c\u9762\u8fde\u63a5\u5230\u8fdc\u7a0b\u8ba1\u7b97\u673a\u5e76\u5bf9\u5176\u8fdb\u884c\u63a7\u5236\u3002</p>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#_5","title":"\u7528\u6cd5","text":"<ul> <li>\u6b65\u9aa41 - \u6253\u5f00VNC\u5ba2\u6237\u7aef</li> <li>\u6b65\u9aa42 - \u8f93\u5165 <code>\u4e3b\u673a\u540d:\u7aef\u53e3</code><ul> <li><code>\u4e3b\u673a\u540d</code> \u662f\u8fdc\u7a0b\u8ba1\u7b97\u673a\u7684\u4e3b\u673a\u540d\uff0c\u53ef\u4ee5\u662fIP\u5730\u5740\u6216\u57df\u540d</li> <li><code>\u7aef\u53e3</code> \u662f\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4e0aVNC\u670d\u52a1\u5668\u7684\u7aef\u53e3</li> </ul> </li> <li>\u6b65\u9aa43 - \u8f93\u5165\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4e0aVNC\u670d\u52a1\u5668\u7684\u5bc6\u7801</li> <li>\u6b65\u9aa44 - \u901a\u8fc7\u56fe\u5f62\u7528\u6237\u754c\u9762\u63a7\u5236\u8fdc\u7a0b\u8ba1\u7b97\u673a</li> <li>\u6b65\u9aa45 - \u5173\u95edVNC\u5ba2\u6237\u7aef</li> </ul>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#_6","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u5982\u679c\u8981\u4f7f\u7528VNC\u8fde\u63a5\u5230\u8fdc\u7a0b\u8ba1\u7b97\u673a\uff0c\u5fc5\u987b\u786e\u4fdd\u8fdc\u7a0b\u8ba1\u7b97\u673a\u5b89\u88c5\u5e76\u8fd0\u884c\u4e86VNC\u670d\u52a1\u5668\uff01\uff01\uff01</li> <li>\u5982\u679c\u4e0d\u77e5\u9053\u5982\u4f55\u64cd\u4f5c\uff0c\u8bf7\u641c\u7d22\u76f8\u5173\u4fe1\u606f\u3002</li> </ul>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#linux-ubuntu_1","title":"Linux - Ubuntu","text":"<p>how to enable VNC on Ubuntu LTS22</p>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#_7","title":"\u8f6f\u4ef6","text":"<p>\u4e00\u4e9b\u8f6f\u4ef6\u53ef\u7528\u4e8e\u901a\u8fc7VNC\u8fde\u63a5\u5230\u8fdc\u7a0b\u8ba1\u7b97\u673a\uff0c\u4f8b\u5982\uff1a - RealVNC     - \u6211\u6700\u559c\u6b22\u7684 - TigerVNC</p>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#_8","title":"\u8fdc\u7a0b\u684c\u9762\u8f6f\u4ef6","text":""},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#_9","title":"\u8de8\u5e73\u53f0","text":"<ul> <li> <p>RustDesk</p> <ul> <li>\u5f00\u6e90</li> <li>\u652f\u6301\u81ea\u5efa\u670d\u52a1\u5668</li> <li>\u754c\u9762\u53cb\u597d</li> <li>\u81ea\u5efa\u670d\u52a1\u5668\u7684\u5b89\u88c5\u548c\u914d\u7f6e\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u662f\u8d28\u91cf\u5f88\u597d</li> <li>\u975e\u79c1\u6709\u670d\u52a1\u5668\u901a\u9053\u8fde\u63a5\u8d28\u91cf\u8981\u5dee</li> <li>\u76ee\u524dwindows\u8fde\u63a5macos\u7684\u597d\u50cf\u4e0d\u80fd\u63a7\u5236\uff0c\u53ea\u80fd\u89c2\u770b</li> </ul> </li> <li> <p>ToDesk</p> <ul> <li>\u6211\u6700\u559c\u6b22\u7684\uff01\u51e0\u4e4e\u53ef\u4ee5\u505a\u4efb\u4f55\u4e8b\u60c5\uff01</li> <li>\u5f3a\u70c8\u63a8\u8350\uff01</li> <li>\u975e\u5e38\u7a33\u5b9a\uff0c\u652f\u6301\u9ad8\u5206\u8fa8\u7387</li> <li>\u4e2a\u4eba\u4f7f\u7528\u514d\u8d39</li> <li>\u4e3a\u4e86\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u4ed8\u8d39</li> <li>\u5bf9\u4e8e\u8de8\u56fd\u8fde\u63a5\uff0c\u6700\u597d\u8d2d\u4e70\u9002\u7528\u7684\u63d2\u4ef6</li> <li>\u4ed6\u4eec\u786e\u5b9e\u6709\u4e00\u4e2aLinux\u7248\u672c\u3002\u6211\u5c1d\u8bd5\u5728Linux\u4e0a\u4f7f\u7528\uff0c\u4f46\u5c1a\u672a\u6210\u529f\u3002</li> </ul> </li> <li> <p>Sunlogin</p> <ul> <li>\u4e5f\u8bb8\u662f\u4e2d\u56fd\u6700\u597d\u7684\u4e00\u4e2a</li> <li>\u4f3c\u4e4e\u4e0d\u80fd\u5728\u4e2d\u56fd\u4ee5\u5916\u7684\u5730\u65b9\u4f7f\u7528</li> </ul> </li> <li> <p>TeamViewer</p> <ul> <li>\u603b\u662f\u8bf4\u6211\u5728\u5546\u4e1a\u7528\u9014\u4e2d\u4f7f\u7528\uff0c\u7136\u540e\u5728\u51e0\u5206\u949f\u540e\u5c31\u4f1a\u65ad\u5f00\u8fde\u63a5</li> <li>\u6211\u4e0d\u559c\u6b22\u5b83</li> </ul> </li> <li> <p>AnyDesk</p> <ul> <li>\u6709\u65f6\u5019\u5b83\u53ea\u662f\u4e0d\u8d77\u4f5c\u7528</li> <li>\u6211\u4e0d\u559c\u6b22\u5b83</li> </ul> </li> <li> <p>Chrome Remote Desktop</p> <ul> <li>\u6211\u5c1d\u8bd5\u8fc7\u8fd9\u4e2a\uff0c\u4f46\u5c1a\u672a\u6210\u529f\u3002</li> </ul> </li> </ul>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#windows_1","title":"Windows","text":"<ul> <li>[RemoteDesktop]<ul> <li>\u5185\u7f6e\u529f\u80fd</li> </ul> </li> </ul>"},{"location":"zh/DEV/DEVENV/REMOTE-CONTROL/remote-control/#macos","title":"MacOS","text":"<ul> <li>Microsoft Remote Desktop<ul> <li>\u8fd9\u53ef\u4ee5\u7528\u6765\u63a7\u5236Windows</li> <li>\u975e\u5e38\u7a33\u5b9a\uff0c\u652f\u6301\u9ad8\u5206\u8fa8\u7387</li> </ul> </li> </ul>"},{"location":"zh/DEV/FRONT-END/front-end/","title":"\u524d\u7aef","text":""},{"location":"zh/DSP/dsp/","title":"\u6570\u5b57\u4fe1\u53f7\u5904\u7406","text":""},{"location":"zh/DSP/dsp/#_2","title":"\u7406\u8bba","text":"<ul> <li> <p> \u7406\u89e3\u6570\u5b57\u4fe1\u53f7\u5904\u7406 \ud83c\udfaf</p> <p>\u4f5c\u8005: Richard G. Lyons</p> <p>\u9605\u8bfb\u8fdb\u5ea6: [2/13]</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u6570\u5b57\u4fe1\u53f7\u5904\u7406 \ud83c\udfaf</p> <p>\u7531EPFL\u5236\u4f5c</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u4fe1\u53f7\u5904\u7406\u6709\u5173\u7684\u90a3\u4e9b\u4e1c\u4e1c \ud83c\udfaf</p> <p>\u4f5c\u8005\uff1aMr.\u770b\u6d77</p> <p>\u9605\u8bfb\u8fdb\u5ea6\uff1a</p> <pre><code>\u65f6\u9891\u57df\u5206\u6790\uff1a[6/17]    \n\u7ecf\u9a8c\u6a21\u6001\u5206\u89e3\uff1a [0/17]\n\u795e\u7ecf\u7f51\u7edc\uff1a[0/2]       \n\u6ee4\u6ce2\u964d\u566a\uff1a [0/7]\n\u65f6\u95f4\u5e8f\u5217\uff1a[0/2]       \n\u6570\u636e\u964d\u7ef4\uff1a [0/4]\n\u5269\u4f59\u5bff\u547d\u9884\u6d4b\uff1a[0/4]   \n\u6982\u5ff5\u8fa8\u6790\uff1a [0/6]\nMatlab \u5c0f\u6280\u5de7\uff1a[0/2]\n</code></pre> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/","title":"\u65f6\u57df\u5206\u6790\u2014\u2014\u6709\u91cf\u7eb2\u7279\u5f81\u503c\u542b\u4e49\u4e00\u7f51\u6253\u5c3d","text":"<p>Info</p> <p>\u539f\u6587\u5730\u5740\uff1a\ud83d\udd17 \u4e13\u680f\uff1a\u4fe1\u53f7\u5904\u7406\u6709\u5173\u7684\u90a3\u4e9b\u4e1c\u4e1c</p> <p>\u672c\u6587\u4e3a\u5b66\u4e60\u7b14\u8bb0\u3002</p> <p>\u65f6\u57df\u7279\u5f81\u503c\u662f\u8861\u91cf\u4fe1\u53f7\u7279\u5f81\u7684\u91cd\u8981\u6307\u6807\uff0c\u65f6\u57df\u7279\u5f81\u503c\u901a\u5e38\u5206\u4e3a**\u6709\u91cf\u7eb2\u53c2\u6570**\u4e0e**\u65e0\u91cf\u7eb2\u53c2\u6570**\u3002</p> <p>\u6240\u8c13\u201c\u91cf\u7eb2\u201d\uff0c\u7b80\u5355\u5730\u7406\u89e3\u5c31\u662f\u201c\u5355\u4f4d\u201d\u3002\u6709\u91cf\u7eb2\u7684\u53c2\u6570\u5c31\u662f\u6709\u5355\u4f4d\u7684\uff0c\u6bd4\u5982\u5e73\u5747\u503c\uff0c\u4e00\u6bb5\u6e29\u5ea6\u4fe1\u53f7\uff08\u5355\u4f4d\u2103\uff09\u7684\u5e73\u5747\u503c\u4f9d\u65e7\u662f\u2103\uff1b\u65e0\u91cf\u7eb2\u7684\u53c2\u6570\u6ca1\u6709\u5355\u4f4d\uff0c\u65e0\u91cf\u7eb2\u91cf\u5e38\u5199\u4f5c\u4e24\u4e2a\u6709\u91cf\u7eb2\u91cf\u4e4b\u79ef\u6216\u6bd4\uff0c\u4f46\u5176\u6700\u7ec8\u7684\u7eb2\u91cf\u4e92\u76f8\u6d88\u9664\u540e\u4f1a\u5f97\u51fa\u65e0\u91cf\u7eb2\u91cf\uff0c\u6bd4\u5982\uff0c\u5e94\u53d8\u662f\u91cf\u5ea6\u5f62\u53d8\u7684\u91cf\uff0c\u5b9a\u4e49\u4e3a\u957f\u5ea6\u5dee\u4e0e\u539f\u5148\u957f\u5ea6\u4e4b\u6bd4\u3002</p> <p>\u6709\u91cf\u7eb2\u7684\u7279\u5f81\u503c\u5f80\u5f80\u5177\u6709\u76f4\u89c2\u7684\u7269\u7406\u542b\u4e49\uff0c\u662f\u6700\u4e3a\u5e38\u7528\u7684\u7279\u5f81\u6307\u6807\u3002\u6709\u91cf\u7eb2\u7279\u5f81\u503c\u4e3b\u8981\u5305\u62ec\uff1a\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u3001\u5cf0\u5cf0\u503c\u3001\u5747\u503c\u3001\u65b9\u5dee\u3001\u6807\u51c6\u5dee\u3001\u5747\u65b9\u503c\u3001\u5747\u65b9\u6839\u503c\uff08RMS\uff09\u3001\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\u3001\u5747\u65b9\u6839\u8bef\u5dee\uff08RMSE\uff09\u3001\u65b9\u6839\u5e45\u503c\u7b49\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#1","title":"1 \u5747\u503c","text":"<p>\u5747\u503c\u3001\u65b9\u5dee\u3001\u5747\u65b9\u503c\u3001\u5747\u65b9\u6839\u503c\u4e4b\u95f4\u6709\u5185\u5728\u7684\u8054\u7cfb\u3002</p> <p>\u5747\u503c\u662f\u4fe1\u53f7\u7684\u5e73\u5747\uff0c\u662f \u4e00\u9636\u77e9 \uff0c\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[ \\mu_x(t) = \\lim_{N \\to \\infty} \\frac{1}{N} \\sum_{i=1}^{N} x_i(t) = E[X(t)] \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#2","title":"2 \u5747\u65b9\u503c","text":"<p>\u5747\u65b9\u503c\u662f\u4fe1\u53f7\u7684\u5e73\u65b9\u7684\u5e73\u5747\uff08\u4fe1\u53f7\u2192\u5e73\u65b9\u2192\u5e73\u5747\u503c\uff09\uff0c\u4ee3\u8868\u4e86 \u4fe1\u53f7\u7684\u80fd\u91cf \uff0c\u662f \u4e8c\u9636\u77e9 \uff0c\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[ \\Psi_X^2(t) = \\lim_{N \\to \\infty} \\frac{1}{N} \\sum_{i=1}^{N} X_i^2(t) = E[X^2(t)] \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#3","title":"3 \u65b9\u5dee","text":"<p>\u65b9\u5dee\u662f\u6bcf\u4e2a\u6837\u672c\u503c\u4e0e\u5168\u4f53\u6837\u672c\u503c\u7684\u5e73\u5747\u6570\u4e4b\u5dee\u7684\u5e73\u65b9\u503c\u7684\u5e73\u5747\u6570\uff0c\u4ee3\u8868\u4e86\u4fe1\u53f7\u80fd\u91cf\u7684\u52a8\u6001\u5206\u91cf\uff08\u5747\u503c\u7684\u5e73\u65b9\u662f\u9759\u6001\u5206\u91cf\uff09\uff0c\u53cd\u5e94\u6570\u636e\u95f4\u7684\u79bb\u6563\u7a0b\u5ea6\uff0c\u662f \u4e8c\u9636\u4e2d\u5fc3\u8ddd \uff0c\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[ \\sigma_X^2(t) = \\lim_{N \\to \\infty} \\frac{1}{N} \\sum_{i=1}^{N} (X_i(t) - \\mu_X(t))^2 = E[X^2(t)] - E[X(t)]^2 = \\Psi_X^2(t) - \\mu_X^2(t) \\] <p>\u65b9\u5dee\u7684\u4e0d\u540c\u8868\u8fbe\u65b9\u5f0f\uff0c\u53ef\u4ee5\u770b\u51fa\u65b9\u5dee\u7684\u51e0\u79cd\u7406\u89e3\u65b9\u5f0f\uff1a</p> <p>(1)</p> \\[ \\lim_{N \\to \\infty}\\frac{1}{N} \\sum_{i=1}^{N}[X_i(t) - \\mu_X(t)]^2 \\] <p>\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa\uff1a\u65b9\u5dee\u63cf\u8ff0\u7684\u662f\u4fe1\u53f7\u7684\u79bb\u6563\u7a0b\u5ea6\uff0c\u4e5f\u5c31\u662f\u53d8\u91cf\u79bb\u5176\u671f\u671b\u503c\u7684\u8ddd\u79bb\u3002</p> <p>(2)</p> \\[ E[X^2(t)] - E[X(t)]^2 \\] <p>\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa\uff1a\u65b9\u5dee\u5373\u5e73\u65b9\u7684\u671f\u671b\uff08\u5747\u65b9\u503c\uff09\u51cf\u6389\u671f\u671b\u7684\u5e73\u65b9\u3002</p> <p>(3)</p> <p>\u4ece\u7269\u7406\u542b\u4e49\u4e0a\u8bb2\uff0c\u5747\u65b9\u503c\u4ee3\u8868\u4fe1\u53f7\u7684\u80fd\u91cf\uff0c\u671f\u671b\u7684\u5e73\u65b9\u4ee3\u8868\u4fe1\u53f7\u7684\u76f4\u6d41\u5206\u91cf\uff0c\u800c\u65b9\u5dee\u4ee3\u8868\u4fe1\u53f7\u7684\u4ea4\u6d41\u5206\u91cf\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#4","title":"4 \u6807\u51c6\u5dee","text":"<p>\u6807\u51c6\u5dee\u53c8\u53eb\u5747\u65b9\u5dee\uff0c\u662f\u65b9\u5dee\u7684\u7b97\u6570\u5e73\u65b9\u6839\u3002\u6807\u51c6\u5dee\u53cd\u5e94\u7684\u662f\u6570\u636e\u7684\u79bb\u6563\u7a0b\u5ea6\u3002</p> <p>\u95ee\u9898\u6765\u4e86\uff0c\u65b9\u5dee\u548c\u6807\u51c6\u5dee\u90fd\u8868\u793a\u6570\u636e\u7684\u79bb\u6563\u7a0b\u5ea6\uff0c\u90a3\u4e48\u65e2\u7136\u6709\u4e86\u65b9\u5dee\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u6709\u6807\u51c6\u5dee\u5462\uff1f</p> <p>\u4e3a\u4e86\u548c\u539f\u59cb\u4fe1\u53f7 \u7edf\u4e00\u91cf\u7eb2 \u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#5","title":"5 \u5747\u65b9\u6839\u503c","text":"<p>\u5747\u65b9\u6839\uff08RMS\uff09\u53c8\u53eb\u6709\u6548\u503c\u3002\u5c06\u6240\u6709\u503c\u5e73\u65b9\u6c42\u548c\uff0c\u6c42\u5176\u5747\u503c\uff0c\u518d\u5f00\u5e73\u65b9\uff0c\u5c31\u5f97\u5230\u5747\u65b9\u6839\u503c\u3002\u6216\u8005\u8bf4\u5747\u65b9\u6839\u503c\u7b49\u4e8e\u5747\u65b9\u503c\u7684\u7b97\u6570\u5e73\u65b9\u6839\u3002</p> \\[ RMS = \\sqrt{\\frac{1}{N} \\sum_{i=1}^{N} X_i^2(t)} \\] <p>\u5176\u7269\u7406\u542b\u4e49\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a\u8ba9\u4ea4\u6d41\u7535\u4e0e\u76f4\u6d41\u7535\u5206\u522b\u901a\u8fc7\u540c\u4e00\u7535\u963b\uff0c\u82e5\u4e24\u8005\u5728\u76f8\u540c\u7684\u65f6\u95f4\u5185\u6240\u6d88\u8017\u7684\u7535\u80fd\u76f8\u7b49\uff08\u6216\u4ea7\u751f\u7684\u7126\u8033\u70ed\u76f8\u540c\uff09\uff0c\u90a3\u4e48\u8be5\u76f4\u6d41\u7535\u7684\u6570\u503c\u5c31\u53eb\u505a\u4ea4\u6d41\u7535\u7684\u6709\u6548\u503c\u3002(\u4fe1\u53f7\u529f\u7387\u7684\u6709\u6548\u503c)</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#6","title":"6 \u5747\u65b9\u8bef\u5dee","text":"<p>\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\u662f\u67d0\u79cd\u610f\u4e49\u4e0a\u7684\u65b9\u5dee\uff0c\u5747\u65b9\u8bef\u5dee\u662f\u6307\u53c2\u6570\u4f30\u8ba1\u503c\u4e0e\u53c2\u6570\u771f\u503c\u4e4b\u5dee\u5e73\u65b9\u7684\u6570\u5b66\u671f\u671b\u503c\u3002\u5982\u679c\u6211\u4eec\u628a\u968f\u673a\u53d8\u91cf\u7684\u6570\u5b66\u671f\u671bE\u8ba4\u4e3a\u662f\u53c2\u6570\u4f30\u8ba1\u503c\uff08\u672a\u6765\u7684\uff09\uff0c\u628a\u968f\u673a\u53d8\u91cf\u672c\u8eab\u4f5c\u4e3a\u53c2\u6570\u771f\u503c\uff0c\u90a3\u4e48\u5747\u65b9\u8bef\u5dee\u5c31\u662f\u666e\u901a\u65b9\u5dee\u3002</p> \\[ MSE = \\frac{1}{N} \\sum_{i=1}^{N} (observed - predicted)^2 \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#7","title":"7 \u5747\u65b9\u6839\u8bef\u5dee","text":"<p>\u5747\u65b9\u8bef\u5deeMSE\u53ef\u4ee5\u8bc4\u4ef7\u6570\u636e\u7684\u53d8\u5316\uff08\u504f\u79bb\uff09\u7a0b\u5ea6\uff0cMSE\u7684\u503c\u8d8a\u5c0f\uff08\u76f8\u4e92\u4e4b\u95f4\u7684\u6bd4\u8f83\uff0c\u800c\u4e0d\u662f\u8ddf\u53c2\u6570\u771f\u503c\u7684\u6bd4\u8f83\uff09\uff0c\u8bf4\u660e\u9884\u6d4b\u6a21\u578b\u63cf\u8ff0\u5b9e\u9a8c\u6570\u636e\u5177\u6709\u66f4\u597d\u7684\u7cbe\u786e\u5ea6\u3002</p> <p>\u5747\u65b9\u8bef\u5dee\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u5e38\u4f5c\u4e3a\u4e00\u79cd\u8bef\u5dee\u91cf\u5ea6\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH01/tf-ana-ch01/#8","title":"8 \u5747\u65b9\u6839\u8bef\u5dee","text":"<p>\u5747\u65b9\u6839\u8bef\u5dee\uff08RMSE\uff09\u5c31\u662f\u5747\u65b9\u8bef\u5dee\u7684\u7b97\u672f\u5e73\u65b9\u6839\uff1a</p> \\[ RMSE = \\sqrt{MES} \\] <p></p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/","title":"\u65f6\u57df\u5206\u6790\u2014\u2014\u65e0\u91cf\u7eb2\u7279\u5f81\u503c\u542b\u4e49\u4e00\u7f51\u6253\u5c3d","text":"<p>Info</p> <p>\u539f\u6587\u5730\u5740\uff1a\ud83d\udd17 \u4e13\u680f\uff1a\u4fe1\u53f7\u5904\u7406\u6709\u5173\u7684\u90a3\u4e9b\u4e1c\u4e1c</p> <p>\u672c\u6587\u4e3a\u5b66\u4e60\u7b14\u8bb0\u3002</p> <p>\u5728\u4fe1\u53f7\u8868\u5f81\u65f6\uff0c\u6709\u91cf\u7eb2\u6307\u6807\u867d\u7136\u5bf9\u4fe1\u53f7\u7279\u5f81\u6bd4\u8f83\u654f\u611f\uff0c\u4f46\u4e5f\u4f1a\u56e0\u5de5\u4f5c\u6761\u4ef6\uff08\u5982\u8d1f\u8f7d\uff09\u7684\u53d8\u5316\u800c\u53d8\u5316\uff0c\u5e76\u6781\u6613\u53d7\u73af\u5883\u5e72\u6270\u7684\u5f71\u54cd\uff0c\u5177\u6709\u8868\u73b0\u4e0d\u591f\u7a33\u5b9a\u7684\u7f3a\u9677\u3002\u76f8\u6bd4\u800c\u8a00\uff0c\u65e0\u91cf\u7eb2\u6307\u6807\u80fd\u591f\u6392\u9664\u8fd9\u4e9b\u6270\u52a8\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u56e0\u800c\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7279\u5f81\u63d0\u53d6\u7684\u9886\u57df\u5f53\u4e2d\u3002</p> <p>\u65e0\u91cf\u7eb2\u6307\u6807\u4e3b\u8981\u5305\u62ec\u5cf0\u503c\u56e0\u5b50\uff0c\u8109\u51b2\u56e0\u5b50\uff0c\u88d5\u5ea6\u56e0\u5b50\uff0c\u5ced\u5ea6\u56e0\u5b50\uff0c\u6ce2\u5f62\u56e0\u5b50\u4ee5\u53ca\u5ced\u5ea6\u56e0\u5b50\u548c\u504f\u5ea6\u56e0\u5b50\u7b49\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#1","title":"1 \u5cf0\u503c\u56e0\u5b50","text":"<p>\u5cf0\u503c\u56e0\u5b50\u662f\u4fe1\u53f7\u5cf0\u503c\u4e0e\u6709\u6548\u503c\uff08RMS\uff09\u7684\u6bd4\u503c\uff0c\u7528\u6765\u68c0\u6d4b\u4fe1\u53f7\u4e2d\u662f\u5426\u5b58\u5728\u51b2\u51fb\u7684\u7edf\u8ba1\u6307\u6807\u3002\u5cf0\u503c\u662f\u4e00\u4e2a\u65f6\u4e0d\u7a33\u53c2\u6570\uff0c\u4e0d\u540c\u7684\u65f6\u523b\u53d8\u52a8\u5f88\u5927\u3002\u7531\u4e8e\u5cf0\u503c\u7684\u7a33\u5b9a\u6027\u4e0d\u597d\uff0c\u5bf9\u51b2\u51fb\u7684\u654f\u611f\u5ea6\u4e5f\u8f83\u5dee\uff0c\u56e0\u6b64\u5728\u6545\u969c\u8bca\u65ad\u4e2d\uff0c\u8be5\u6307\u6807\u9010\u6e10\u88ab\u5ced\u5ea6\u6307\u6807\u53d6\u4ee3\u3002</p> \\[ \\text{\u5cf0\u503c\u56e0\u5b50} = \\frac{\\text{\u5cf0\u503c}}{\\text{\u6709\u6548\u503c}} \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#2","title":"2 \u8109\u51b2\u56e0\u5b50","text":"<p>\u8109\u51b2\u56e0\u5b50\u662f\u4fe1\u53f7\u5cf0\u503c\u4e0e\u6574\u6d41\u5e73\u5747\u503c\uff08\u7edd\u5bf9\u503c\u7684\u5e73\u5747\u503c\uff09\u7684\u6bd4\u503c\u3002\u8109\u51b2\u56e0\u5b50\u548c\u5cf0\u503c\u56e0\u5b50\u7684\u533a\u522b\u5728\u5206\u6bcd\u4e0a\uff0c\u7531\u4e8e\u5bf9\u4e8e\u540c\u4e00\u7ec4\u6570\u636e\u6574\u6d41\u5e73\u5747\u503c\u5c0f\u4e8e\u6709\u6548\u503c\uff0c\u6240\u4ee5\u8109\u51b2\u56e0\u5b50\u5927\u4e8e\u5cf0\u503c\u56e0\u5b50\u3002\u8109\u51b2\u56e0\u5b50\u4e5f\u540c\u6837\u7528\u4ee5\u68c0\u6d4b\u4fe1\u53f7\u4e2d\u662f\u5426\u5b58\u5728\u51b2\u51fb\u3002</p> \\[ \\text{\u8109\u51b2\u56e0\u5b50} = \\frac{\\text{\u5cf0\u503c}}{\\text{\u6574\u6d41\u5e73\u5747\u503c}} \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#3","title":"3 \u88d5\u5ea6\u56e0\u5b50","text":"<p>\u88d5\u5ea6\u56e0\u5b50\u662f\u4fe1\u53f7\u5cf0\u503c\u4e0e\u65b9\u6839\u5e45\u503c\u7684\u6bd4\u503c\u3002\u4e0e\u5cf0\u503c\u56e0\u5b50\u7c7b\u4f3c\uff0c\u65b9\u6839\u5e45\u503c\u548c\u5747\u65b9\u6839\u503c\uff08\u6709\u6548\u503c\uff09\u662f\u5bf9\u5e94\u7684\uff0c\u5747\u65b9\u6839\u7684\u516c\u5f0f\u662f\u4fe1\u53f7\u5e73\u65b9\u548c\u7684\u5e73\u5747\u503c\u7684\u7b97\u672f\u5e73\u65b9\u6839\uff0c\u65b9\u6839\u5e45\u503c\u662f\u7b97\u672f\u5e73\u65b9\u6839\u7684\u5e73\u5747\u503c\u7684\u5e73\u65b9\uff08\u6709\u70b9\u7ed5\uff09\u3002\u88d5\u5ea6\u56e0\u5b50\u53ef\u4ee5\u7528\u4e8e\u68c0\u6d4b\u673a\u68b0\u8bbe\u5907\u7684\u78e8\u635f\u60c5\u51b5\u3002</p> \\[ \\text{\u88d5\u5ea6\u56e0\u5b50} = \\frac{\\text{\u5cf0\u503c}}{\\text{\u65b9\u6839\u5e45\u503c}} \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#4","title":"4 \u6ce2\u5f62\u56e0\u5b50","text":"<p>\u6ce2\u578b\u56e0\u5b50\u662f\u6709\u6548\u503c\uff08RMS\uff09\u4e0e\u6574\u6d41\u5e73\u5747\u503c\u7684\u6bd4\u503c\u3002\u5728\u7535\u5b50\u9886\u57df\u5176\u7269\u7406\u542b\u4e49\u53ef\u4ee5\u7406\u89e3\u4e3a\u76f4\u6d41\u7535\u6d41\u76f8\u5bf9\u4e8e\u7b49\u529f\u7387\u7684\u4ea4\u6d41\u7535\u6d41\u7684\u6bd4\u503c\uff0c\u5176\u503c\u5927\u4e8e\u7b49\u4e8e1\u3002\u8bf4\u5230\u8fd9\u513f\u4e5f\u8bb8\u4f60\u5df2\u7ecf\u53d1\u73b0\u4e86\uff0c\u6ce2\u5f62\u56e0\u5b50=\u8109\u51b2\u56e0\u5b50/\u5cf0\u503c\u56e0\u5b50\u3002</p> \\[ \\text{\u6ce2\u5f62\u56e0\u5b50} = \\frac{\\text{\u6709\u6548\u503c}}{\\text{\u6574\u6d41\u5e73\u5747\u503c}} \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#5","title":"5 \u5ced\u5ea6\u56e0\u5b50","text":"<p>\u5ced\u5ea6\u56e0\u5b50\u662f\u8868\u793a\u6ce2\u5f62\u5e73\u7f13\u7a0b\u5ea6\u7684\uff0c\u7528\u4e8e\u63cf\u8ff0 \u53d8\u91cf\u7684\u5206\u5e03 \u3002\u6b63\u6001\u5206\u5e03\u7684\u5ced\u5ea6\u7b49\u4e8e3\uff0c\u5ced\u5ea6\u5c0f\u4e8e3\u65f6\u5206\u5e03\u7684\u66f2\u7ebf\u4f1a\u8f83\u201c\u5e73\u201d\uff0c\u5927\u4e8e3\u65f6\u5206\u5e03\u7684\u66f2\u7ebf\u8f83\u201c\u9661\u201d\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH02/tf-ana-ch02/#6","title":"6 \u504f\u5ea6\u56e0\u5b50","text":"<p>\u504f\u5ea6\u56e0\u5b50\uff1a\u504f\u5ea6\u4e5f\u53eb\u504f\u659c\u5ea6\u3001\u504f\u6001\u3002\u504f\u5ea6\u548c\u5ced\u5ea6\u662f\u6709\u4e00\u5b9a\u7684\u76f8\u5173\u6027\u7684\uff0c\u5ced\u5ea6\u56e0\u5b50\u662f\u56db\u9636\u4e2d\u5fc3\u77e9\u548c\u6807\u51c6\u5dee\u7684\u56db\u6b21\u65b9\u7684\u6bd4\u503c\uff1b\u504f\u5ea6\u56e0\u5b50\u662f\u4e09\u9636\u4e2d\u5fc3\u77e9\u548c\u6807\u51c6\u5dee\u7684\u4e09\u6b21\u65b9\u7684\u6bd4\u503c\u3002\u504f\u5ea6\u4e0e\u5ced\u5ea6\u76f8\u540c\uff0c\u63cf\u8ff0\u7684\u662f\u5206\u5e03\u3002\u7269\u7406\u542b\u4e49\u7b80\u5355\u7406\u89e3\u7684\u8bdd\uff0c\u5bf9\u4e8e\u5355\u5cf0\u5206\u5e03\uff0c\u8d1f\u504f\u5ea6\u4ee3\u8868\u5206\u5e03\u56fe\u7ebf\u7684\u201c\u5934\u201d\u5728\u53f3\u4fa7\uff0c\u201c\u5c3e\u201d\u5728\u5de6\u4fa7\uff1b\u6b63\u504f\u5ea6\u53cd\u4e4b\u3002\u53c2\u770b\u4e0b\u56fe\uff1a</p> <p></p> <p>\u7efc\u5408\u6765\u8bf4\uff1a\u5cf0\u503c\u56e0\u5b50\u3001\u8109\u51b2\u56e0\u5b50\u548c\u88d5\u5ea6\u56e0\u5b50\u7684\u7269\u7406\u610f\u4e49\u662f\u76f8\u4f3c\u7684\uff0c\u5cf0\u503c\u56e0\u5b50\u548c\u8109\u51b2\u56e0\u5b50\u90fd\u662f\u7528\u6765\u68c0\u6d4b\u4fe1\u53f7\u4e2d\u6709\u65e0\u51b2\u51fb\u7684\u6307\u6807\uff0c\u88d5\u5ea6\u56e0\u5b50\u5e38\u7528\u6765\u68c0\u6d4b\u673a\u68b0\u8bbe\u5907\u7684\u78e8\u635f\u72b6\u51b5\u3002\u5ced\u5ea6\u56e0\u5b50\u4e5f\u662f\u5bf9\u632f\u52a8\u4fe1\u53f7\u51b2\u51fb\u7279\u6027\u7684\u53cd\u5e94\uff0c\u4e0d\u8fc7\u516c\u5f0f\u7684\u8868\u8fbe\u5f62\u5f0f\u4e0a\u4e0e\u524d\u4e09\u4e2a\u5dee\u5f02\u8f83\u5927\u3002</p> <p>\u5728\u8bc4\u4ef7\u8fd9\u4e9b\u6307\u6807\u7684\u6027\u80fd\u65f6\uff0c\u901a\u5e38\u4f7f\u7528\u654f\u611f\u6027\u4e0e\u7a33\u5b9a\u6027\u6765\u8861\u91cf\u3002\u8109\u51b2\u6307\u6807\u3001\u5cf0\u503c\u6307\u6807\u548c\u5ced\u5ea6\u90fd\u5bf9\u51b2\u51fb\u7c7b\u6545\u969c\u6bd4\u8f83\u654f\u611f\uff0c\u7279\u522b\u662f\u5f53\u6545\u969c\u65e9\u671f\u53d1\u751f\u65f6\uff0c\u5b83\u4eec\u6709\u660e\u663e\u7684\u589e\u52a0\uff1b\u4f46\u4e0a\u5347\u5230\u4e00\u5b9a\u7a0b\u5ea6\u540e\uff0c\u968f\u6545\u969c\u7684\u9010\u6e10\u53d1\u5c55\uff0c\u53cd\u800c\u4f1a\u4e0b\u964d\uff0c\u8868\u660e\u5b83\u4eec\u5bf9\u65e9\u671f\u6545\u969c\u6709\u8f83\u9ad8\u7684\u654f\u611f\u6027\uff0c\u4f46\u7a33\u5b9a\u6027\u4e0d\u597d\u3002\u6709\u6548\u503c\u7684\u7a33\u5b9a\u6027\u8f83\u597d\uff0c\u4f46\u5bf9\u65e9\u671f\u6545\u969c\u4fe1\u53f7\u4e0d\u654f\u611f\u3002\u4e3a\u4e86\u53d6\u5f97\u8f83\u597d\u7684\u6548\u679c\uff0c\u5e38\u5e38\u4f1a\u5c06\u5b83\u4eec\u540c\u65f6\u5e94\u7528\u3002</p> <p></p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH03/tf-ana-ch03/","title":"\u4fe1\u53f7\u65f6\u57df\u5206\u6790\u65b9\u6cd5\u7684\u7406\u89e3","text":"<p>\u672c\u7bc7\u65e0\u9700\u8981\u8bb0\u5f55\u7684\u5185\u5bb9\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH04/tf-ana-ch04/","title":"\u65f6\u57df\u7279\u5f81\u503c\u63d0\u53d6\u7684MATLAB\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u672c\u7bc7\u65e0\u9700\u8981\u8bb0\u5f55\u7684\u5185\u5bb9\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/","title":"\u9891\u57df\u7279\u5f81\u6307\u6807\u53ca\u5176MATLAB\u4ee3\u7801\u5b9e\u73b0","text":"<p>Info</p> <p>\u539f\u6587\u5730\u5740\uff1a\ud83d\udd17 \u4e13\u680f\uff1a\u4fe1\u53f7\u5904\u7406\u6709\u5173\u7684\u90a3\u4e9b\u4e1c\u4e1c</p> <p>\u672c\u6587\u4e3a\u5b66\u4e60\u7b14\u8bb0\u3002</p> <p>\u4ee5\u524d\u6211\u4eec\u68b3\u7406\u8fc7\u5e38\u7528\u7684\u6709\u91cf\u7eb2\u65f6\u57df\u7279\u5f81\u6307\u6807\u548c\u65e0\u91cf\u7eb2\u65f6\u57df\u7279\u5f81\u6307\u6807\uff0c\u5176\u5b9e\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\u4e2d\uff0c\u4e00\u4e9b\u9891\u8c31\u7279\u5f81\u6307\u6807\u4e5f\u662f\u5341\u5206\u6709\u7528\u7684\u3002</p> <p>\u4e0b\u8ff0\u9891\u57df\u7279\u5f81\u6307\u6807\u662f\u6839\u636e\u4fe1\u53f7\u7684\u529f\u7387\u8c31\u6c42\u5f97\u7684\u3002\u5728\u6545\u969c\u8bca\u65ad\u6216\u8005\u5176\u4ed6\u5e94\u7528\u573a\u666f\u4e0b\uff0c\u53ef\u4ee5\u4e0e\u65f6\u57df\u6307\u6807\u4ee5\u53ca\u5176\u4ed6\u6307\u6807\u4e00\u540c\u4f5c\u4e3a\u7279\u5f81\u5411\u91cf\u7684\u4e00\u90e8\u5206\uff0c\u4e30\u5bcc\u7279\u5f81\u91cf\u79cd\u7c7b\uff0c\u63d0\u5347\u8bca\u65ad\u6b63\u786e\u7387\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#_1","title":"\u529f\u7387\u8c31","text":"<p>\u4e0b\u8ff0\u9891\u57df\u7279\u5f81\u90fd\u662f\u5728\u529f\u7387\u8c31\u57fa\u7840\u4e0a\u8ba1\u7b97\u6c42\u5f97\u7684\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u4e0d\u7528\u9891\u8c31\u5462\uff1f\u4e2a\u4eba\u8ba4\u4e3a\u662f\u56e0\u4e3a\u529f\u7387\u8c31\u5728\u8868\u8fbe\u529f\u7387\u4fe1\u53f7\u4e43\u81f3\u968f\u673a\u4fe1\u53f7\u9891\u57df\u7279\u5f81\u65f6\u66f4\u5177\u6709\u666e\u9002\u6027\uff0c\u6bd5\u7adf\u529f\u7387\u4fe1\u53f7\u5c31\u4e0d\u80fd\u7528\u9891\u8c31\u8868\u793a\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#1","title":"1 \u91cd\u5fc3\u9891\u7387","text":"<p>\u91cd\u5fc3\u9891\u7387\u80fd\u591f\u63cf\u8ff0\u4fe1\u53f7\u5728\u9891\u8c31\u4e2d\u5206\u91cf\u8f83\u5927\u7684\u4fe1\u53f7\u6210\u5206\u7684\u9891\u7387\uff0c\u53cd\u6620\u4fe1\u53f7\u529f\u7387\u8c31\u7684\u5206\u5e03\u60c5\u51b5\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u9891\u5e26\u8303\u56f4\uff0c\u4f4e\u4e8e\u91cd\u5fc3\u9891\u7387\u7684\u9891\u7387\u8303\u56f4\u5185\u5305\u542b\u7684\u80fd\u91cf\u662f\u4fe1\u53f7\u603b\u80fd\u91cf\u7684\u4e00\u534a\u3002</p> <p>\u53e6\u4e00\u79cd\u7406\u89e3\u65b9\u5f0f\uff0c\u91cd\u5fc3\u9891\u7387\u662f\u4ee5\u529f\u7387\u8c31\u7684\u5e45\u503c\u4e3a\u6743\u503c\u7684\u52a0\u6743\u5e73\u5747\uff0c\u6240\u4ee5\u91cd\u5fc3\u9891\u7387\u4f1a\u5411\u529f\u7387\u8c31\u5e45\u503c\u66f4\u5927\uff08\u5373\u6743\u503c\u66f4\u5927\uff09\u7684\u4f4d\u7f6e\u79fb\u52a8\u3002</p> <p>\u66f4\u5f62\u8c61\u4e00\u70b9\uff0c\u5982\u679c\u628a\u4e0b\u56fe\u4e2d\u529f\u7387\u8c31\u66f2\u7ebf\u56f4\u8d77\u6765\u7684\u533a\u57df\u770b\u4f5c\u4e00\u5757\u6728\u677f\uff0c\u90a3\u4e48\u5f53\u628a\u8fd9\u5757\u6728\u677f\u653e\u5728\u91cd\u5fc3\u9891\u7387\u865a\u7ebf\u6240\u5728\u7684\u94a2\u4e1d\u4e0a\u65f6\uff0c\u6728\u677f\u521a\u597d\u80fd\u4fdd\u6301\u5e73\u8861\u3002</p> <p></p> <p>\u91cd\u5fc3\u9891\u7387\u516c\u5f0f\uff1a</p> \\[ FC = \\frac{\\int_0^infty fP(f)df}{\\int_0^infty P(f)df} \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#2","title":"2 \u5747\u65b9\u6839\u9891\u7387","text":"<p>\u5747\u65b9\u6839\u9891\u7387\u5c31\u662f\u5747\u65b9\u9891\u7387\u7684\u7b97\u6570\u5e73\u65b9\u6839\uff0c\u5b83\u4e5f\u6709\u4e00\u4e2a\u8f85\u52a9\u7406\u89e3\u7684\u7269\u7406\u542b\u4e49\uff1a\u5982\u679c\u628a\u4e0b\u56fe\u4e2d\u529f\u7387\u8c31\u66f2\u7ebf\u56f4\u8d77\u6765\u7684\u533a\u57df\u770b\u4f5c\u4e00\u5757\u6728\u677f\uff0c\u90a3\u4e48\u5f53\u8fd9\u5757\u6728\u677f\u56f4\u7ed5y\u8f74\u65cb\u8f6c\u65f6\uff0c\u5747\u65b9\u6839\u9891\u7387\u6240\u5728\u4f4d\u7f6e\u5230\u539f\u70b9\u7684\u8ddd\u79bb\u5c31\u662f\u65cb\u8f6c\u4f53\u7684\u60ef\u6027\u534a\u5f84\uff08\u6307\u7269\u4f53\u8d28\u91cf\u5047\u8bbe\u7684\u96c6\u4e2d\u70b9\u5230\u8f6c\u52a8\u8f74\u95f4\u7684\u8ddd\u79bb\uff09\u3002</p> <p></p> <p>\u5747\u65b9\u9891\u7387\u516c\u5f0f\uff1a</p> \\[ MSF = \\frac{\\int_0^infty f^2P(f)df}{\\int_0^infty P(f)df} \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#3","title":"3 \u5747\u65b9\u9891\u7387","text":"<p>\u5747\u65b9\u9891\u7387\u662f\u5747\u65b9\u6839\u9891\u7387\u7684\u5e73\u65b9\u3002</p> <p>\u4e0e\u91cd\u5fc3\u9891\u7387\u4e0d\u540c\uff0c\u5747\u65b9\u9891\u7387\u662f\u4fe1\u53f7\u9891\u7387\u5e73\u65b9\u7684\u52a0\u6743\u5e73\u5747\uff0c\u540c\u6837\u4ee5\u529f\u7387\u8c31\u7684\u5e45\u503c\u4e3a\u6743\u3002</p> <p>\u91cd\u5fc3\u9891\u7387\u3001\u5747\u65b9\u9891\u7387\u3001\u5747\u65b9\u6839\u9891\u7387\u90fd\u662f\u63cf\u8ff0\u529f\u7387\u8c31\u4e3b\u9891\u5e26\u4f4d\u7f6e\u5206\u5e03\u7684\u3002</p> \\[ RMSF = \\sqrt{MSF} \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#4","title":"4 \u9891\u7387\u6807\u51c6\u5dee","text":"<p>\u540c\u6837\u628a\u4e0b\u56fe\u4e2d\u529f\u7387\u8c31\u66f2\u7ebf\u56f4\u8d77\u6765\u7684\u533a\u57df\u770b\u4f5c\u4e00\u5757\u6728\u677f\uff0c\u9891\u7387\u6807\u51c6\u5dee\u5c31\u662f\u91cd\u5fc3\u9891\u7387\u4e3a\u4e2d\u5fc3\u7684\u60ef\u6027\u534a\u5f84\u3002</p> <p>\u82e5\u91cd\u5fc3\u9644\u8fd1\u7684\u9891\u8c31\u5e45\u503c\u8f83\u5927\uff0c\u5219\u9891\u7387\u6807\u51c6\u5dee\u8f83\u5c0f\uff1b\u82e5\u91cd\u5fc3\u9644\u8fd1\u7684\u9891\u8c31\u8f83\u5c0f\uff0c\u5219\u9891\u7387\u6807\u51c6\u5dee\u8f83\u5927\u3002 \u9891\u7387\u6807\u51c6\u5dee\u7528\u4e8e\u63cf\u8ff0\u529f\u7387\u8c31\u80fd\u91cf\u5206\u5e03\u7684\u5206\u6563\u7a0b\u5ea6\u3002</p> <p></p> <p>\u9891\u7387\u6807\u51c6\u5dee\u516c\u5f0f\uff1a</p> \\[ RVF = \\sqrt{VF} \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH05/tf-ana-ch05/#5","title":"5 \u9891\u7387\u65b9\u5dee","text":"<p>\u9891\u7387\u65b9\u5dee\u5c31\u662f\u9891\u7387\u6807\u51c6\u5dee\u7684\u5e73\u65b9\uff0c\u662f\u8861\u91cf\u529f\u7387\u8c31\u80fd\u91cf\u5206\u6563\u7a0b\u5ea6\u7684\u53e6\u4e00\u4e2a\u5ea6\u91cf\u7ef4\u5ea6\u3002\u5c31\u4e0d\u8fc7\u591a\u63cf\u8ff0\u4e86\u3002</p> <p>\u9891\u7387\u65b9\u5dee\u516c\u5f0f\uff1a</p> \\[ VF = \\frac{\\int_0^infty (f-FC)^2P(f)df}{\\int_0^infty P(f)df} \\]"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/","title":"\u4fe1\u53f7\u9891\u57df\u5206\u6790\u65b9\u6cd5\u7684\u7406\u89e3\uff08\u9891\u8c31\u3001\u80fd\u91cf\u8c31\u3001\u529f\u7387\u8c31\u3001\u5012\u9891\u8c31\u3001\u5c0f\u6ce2\u5206\u6790\uff09","text":"<p>Info</p> <p>\u539f\u6587\u5730\u5740\uff1a\ud83d\udd17 \u4e13\u680f\uff1a\u4fe1\u53f7\u5904\u7406\u6709\u5173\u7684\u90a3\u4e9b\u4e1c\u4e1c</p> <p>\u672c\u6587\u4e3a\u5b66\u4e60\u7b14\u8bb0\u3002</p> <p>\u4fe1\u53f7\u7684\u9891\u57df\u5206\u6790\u65b9\u6cd5\u591a\u79cd\u591a\u6837\uff0c\u8fd9\u91cc\u9488\u5bf9\u8f83\u4e3a\u5e38\u89c1\u7684\uff08\u9891\u8c31\u3001\u80fd\u91cf\u8c31\u3001\u529f\u7387\u8c31\u3001\u5012\u9891\u8c31\u3001\u5c0f\u6ce2\u5206\u6790\uff09\u96c6\u4e2d\u8fdb\u884c\u8bf4\u660e\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#1","title":"1.\u9891\u8c31","text":"<p>\u4e00\u822c\u6765\u8bf4\uff0c\u9891\u8c31\u5206\u6790\u6307\u7684\u662f\u5c06\u4fe1\u53f7\u505a\u5085\u91cc\u53f6\u53d8\u6362\u4ece\u800c\u8fdb\u884c\u5206\u6790\u3002\u9891\u8c31\u5206\u6790\u662f\u5305\u62ec \u5e45\u9891\u8c31 \u548c \u76f8\u9891\u8c31 \u4e24\u5f20\u56fe\u7684\u3002\u4e0d\u8fc7\u6700\u5e38\u7528\u7684\u662f\u5e45\u9891\u8c31\u3002</p> <p>FT\uff08Fourier Transformation\uff09\uff1a\u5085\u91cc\u53f6\u53d8\u6362\u3002\u5c31\u662f\u6211\u4eec\u7406\u8bba\u4e0a\u5b66\u7684\u6982\u5ff5\uff0c\u4f46\u662f\u5bf9\u4e8e\u8fde\u7eed\u7684\u4fe1\u53f7\u65e0\u6cd5\u5728\u8ba1\u7b97\u673a\u4e0a\u4f7f\u7528\u3002\u5176\u65f6\u57df\u4fe1\u53f7\u548c\u9891\u57df\u4fe1\u53f7\u90fd\u662f\u8fde\u7eed\u7684\u3002</p> <p>DTFT\uff08Discrete-time Fourier Transform\uff09\uff1a\u79bb\u6563\u65f6\u95f4\u5085\u91cc\u53f6\u53d8\u6362\u3002\u8fd9\u91cc\u7684\u201c\u79bb\u6563\u65f6\u95f4\u201d\u6307\u7684\u662f\u65f6\u57df\u4e0a\u5f0f\u79bb\u6563\u7684\uff0c\u4e5f\u5c31\u662f\u8ba1\u7b97\u673a\u8fdb\u884c\u4e86\u91c7\u6837\u3002\u4e0d\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u540e\u7684\u7ed3\u679c\u4f9d\u7136\u662f\u8fde\u7eed\u7684\u3002</p> <p>DFT\uff08Discrete Fourier Transform\uff09\uff1a\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362\u3002\u5728DTFT\u4e4b\u540e\uff0c\u5c06\u5085\u91cc\u53f6\u53d8\u6362\u7684\u7ed3\u679c\u4e5f\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u5c31\u662fDFT\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff1aFT\u65f6\u57df\u8fde\u7eed\u3001\u9891\u57df\u8fde\u7eed\uff1bDTFT\u65f6\u57df\u79bb\u6563\u3001\u9891\u57df\u8fde\u7eed\uff1bDFT\u65f6\u57df\u79bb\u6563\u3001\u9891\u57df\u79bb\u6563\u3002</p> <p>FFT\uff08Fast Fourier Transformation\uff09\uff1a\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\u3002\u5c31\u662fDFT\u7684\u5feb\u901f\u7b97\u6cd5\uff0c\u4e00\u822c\u5de5\u7a0b\u5e94\u7528\u65f6\u7528\u7684\u90fd\u662f\u8fd9\u79cd\u7b97\u6cd5\u3002</p> <p>FS\uff08Fourier Series\uff09\uff1a\u5085\u91cc\u53f6\u7ea7\u6570\u3002\u662f\u9488\u5bf9\u65f6\u57df\u8fde\u7eed\u5468\u671f\u4fe1\u53f7\u63d0\u51fa\u7684\uff0c\u7ed3\u679c\u662f\u79bb\u6563\u7684\u9891\u57df\u7ed3\u679c\u3002</p> <p>DFS\uff08Discrete Fourier Series\uff09\uff1a\u79bb\u6563\u5085\u91cc\u53f6\u7ea7\u6570\u3002\u662f\u9488\u5bf9\u65f6\u57df\u79bb\u6563\u5468\u671f\u4fe1\u53f7\u63d0\u51fa\u7684\uff0cDFS\u4e0eDFT\u7684\u672c\u8d28\u662f\u4e00\u6837\u7684\u3002</p> <p>\u53e6\u5916\u8865\u5145\u51e0\u70b9\u76f8\u5173\u77e5\u8bc6\uff1a</p> <ul> <li>\u5728\u5b9e\u9645\u8ba1\u7b97\u4e2d\u901a\u5e38\u4f7f\u7528\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\uff08FFT\uff09\u3002\u5b83\u662f\u4e00\u79cd\u7528\u6765\u8ba1\u7b97DFT\uff08\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362\uff09\u548cIDFT\uff08\u79bb\u6563\u5085\u91cc\u53f6\u53cd\u53d8\u6362\uff09\u7684\u4e00\u79cd\u5feb\u901f\u7b97\u6cd5\u3002</li> <li>\u968f\u673a\u4fe1\u53f7\u662f\u65e0\u6cd5\u505a\u5085\u91cc\u53f6\u53d8\u6362\u7684\uff08*\u8fd9\u91cc\u8981\u518d\u8865\u5145\uff09</li> </ul>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#2","title":"2.\u80fd\u91cf\u8c31","text":"<p>\u8981\u7406\u89e3\u80fd\u91cf\u8c31\u548c\u529f\u7387\u8c31\uff0c\u9996\u5148\u8981\u5f04\u660e\u767d\u80fd\u91cf\u6709\u9650\u4fe1\u53f7\u548c\u529f\u7387\u6709\u9650\u4fe1\u53f7\uff08\u53c2\u770b\u4e4b\u524d\u7684\u6587\u7ae0\u80fd\u91cf\u4fe1\u53f7\u548c\u529f\u7387\u4fe1\u53f7\u7684\u5206\u522b\uff09\u3002</p> <p>\u80fd\u91cf\u8c31\u4e5f\u53eb\u80fd\u91cf\u8c31\u5bc6\u5ea6\uff0c\u80fd\u91cf\u8c31\u5bc6\u5ea6\u63cf\u8ff0\u4e86\u4fe1\u53f7\u6216\u65f6\u95f4\u5e8f\u5217\u7684\u80fd\u91cf\u5982\u4f55\u968f\u9891\u7387\u5206\u5e03\u3002\u80fd\u91cf\u8c31\u662f\u539f\u4fe1\u53f7\u5085\u7acb\u53f6\u53d8\u6362\u7684\u5e73\u65b9\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#3","title":"3.\u529f\u7387\u8c31","text":"<p>\u529f\u7387\u8c31\u662f\u529f\u7387\u8c31\u5bc6\u5ea6\u51fd\u6570\uff08PSD\uff09\u7684\u7b80\u79f0\uff0c\u5b83\u5b9a\u4e49\u4e3a\u5355\u4f4d\u9891\u5e26\u5185\u7684\u4fe1\u53f7\u529f\u7387\u3002</p> <p>\u529f\u7387\u8c31\u662f\u9488\u5bf9\u529f\u7387\u4fe1\u53f7\u6765\u8bf4\u7684\u3002\u529f\u7387\u8c31\u7684\u63a8\u5bfc\u516c\u5f0f\u76f8\u5bf9\u590d\u6742\uff0c\u4e0d\u8fc7\u5e78\u8fd0\u7684\u662f\u7ef4\u7eb3-\u8f9b\u94a6\u5b9a\u7406\u8bc1\u660e\u4e86\uff1a\u4e00\u6bb5\u4fe1\u53f7\u7684\u529f\u7387\u8c31\u7b49\u4e8e\u8fd9\u6bb5\u4fe1\u53f7\u81ea\u76f8\u5173\u51fd\u6570\u7684\u5085\u91cc\u53f6\u53d8\u6362\u3002</p> <p>\u6240\u4ee5\u6c42\u529f\u7387\u8c31\u5c31\u6709\u4e86\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <ul> <li>1.(\u5085\u7acb\u53f6\u53d8\u6362\u7684\u5e73\u65b9)/(\u533a\u95f4\u957f\u5ea6)\uff1b</li> <li>2.\u81ea\u76f8\u5173\u51fd\u6570\u7684\u5085\u91cc\u53f6\u53d8\u6362\u3002</li> </ul> <p>\u8fd9\u4e24\u79cd\u65b9\u6cd5\u5206\u522b\u53eb\u505a\u76f4\u63a5\u6cd5\u548c\u76f8\u5173\u51fd\u6570\u6cd5\u3002</p> <p>\u529f\u7387\u8c31\u8fd9\u91cc\u5b58\u5728\u7740\u4e00\u4e9b\u95ee\u9898\uff0c\u6574\u7406\u5982\u4e0b\uff1a</p> <p>1.\u529f\u7387\u8c31\u5bc6\u5ea6\u7684\u5355\u4f4d\u662f\u4ec0\u4e48\uff0c\u770b\u6709\u7684\u5199\u7684\u662fdB\uff0c\u8fd8\u6709\u7684\u8bf4\u662fW/Hz\u3002</p> <p>\u529f\u7387\u8c31\u7684\u5355\u4f4d\u662fW/Hz\uff0c\u5355\u4f4d\u662fdB\u65f6\u662f\u505a\u4e86\u5bf9\u6570\u5904\u7406\uff0810logX\uff09\u3002\u53d6\u5bf9\u6570\u7684\u76ee\u7684\u662f\u4f7f\u90a3\u4e9b\u632f\u5e45\u8f83\u4f4e\u7684\u6210\u5206\u76f8\u5bf9\u9ad8\u632f\u5e45\u6210\u5206\u5f97\u4ee5\u62c9\u9ad8\uff0c\u4ee5\u4fbf\u89c2\u5bdf\u63a9\u76d6\u5728\u4f4e\u5e45\u566a\u58f0\u4e2d\u7684\u5468\u671f\u4fe1\u53f7\u3002</p> <p>2.\u6c42\u529f\u7387\u8c31\u7684\u4e24\u79cd\u65b9\u6cd5\u6709\u4ec0\u4e48\u533a\u522b\u4e48\uff1f</p> <p>\u4ece\u539f\u7406\u4e0a\u8bb2\u4f3c\u4e4e\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u4eceMATLAB\u4eff\u771f\u7ed3\u679c\u4e0a\u6765\u770b\uff0c\u76f8\u5173\u51fd\u6570\u6cd5\u5bf9\u566a\u58f0\u7684\u6291\u5236\u6548\u679c\u66f4\u597d\uff0c\u56fe\u7ebf\u66f4\u5e73\u6ed1\u3002\uff08\u89c1\u9891\u57df\u7279\u5f81\u503c\u63d0\u53d6\u7684MATLAB\u4ee3\u7801\u5b9e\u73b0\uff08\u9891\u8c31\u3001\u529f\u7387\u8c31\u3001\u5012\u9891\u8c31\uff09\uff09</p> <p>3.FFT\u548cPSD\u90fd\u662f\u8868\u793a\u7684\u9891\u8c31\u7279\u6027\uff0c\u5e2e\u52a9\u6211\u4eec\u627e\u51fa\u5cf0\u503c\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6709\u4e86FFT\u4e3a\u4ec0\u4e48\u8fd8\u8981\u63d0\u51faPSD\uff1f</p> <p>\u4fe1\u53f7\u5206\u4e3a\u786e\u5b9a\u4fe1\u53f7\u548c\u968f\u673a\u4fe1\u53f7\uff0c\u800c\u786e\u5b9a\u4fe1\u53f7\u53c8\u5206\u4e3a\u80fd\u91cf\u4fe1\u53f7\u548c\u529f\u7387\u4fe1\u53f7\uff0c\u968f\u673a\u4fe1\u53f7\u4e00\u5b9a\u662f\u529f\u7387\u4fe1\u53f7\u3002\u6839\u636e\u72c4\u91cc\u8d6b\u5229\u6761\u4ef6\uff0c\u80fd\u91cf\u4fe1\u53f7\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u800c\u529f\u7387\u4fe1\u53f7\u4e0d\u884c\u3002\u5bf9\u4e8e\u65e0\u6cd5\u505a\u5085\u91cc\u53f6\u53d8\u6362\u7684\u4fe1\u53f7\uff0c\u53ea\u80fd\u8d70\u4e00\u6b65\u5f2f\u8def\uff0c\u5148\u6c42\u81ea\u76f8\u5173\uff0c\u518d\u505a\u5085\u91cc\u53f6\u3002\u4f46\u662f\u7269\u7406\u610f\u4e49\u4e0a\u5c31\u662f\u529f\u7387\u8c31\u4e86\u3002\u4e0d\u8fc7\u603b\u4e4b\u5f97\u5230\u4e86\u4fe1\u53f7\u7684\u9891\u7387\u7279\u6027\u3002</p> <p>4.\u65e2\u7136\u4e3a\u4ec0\u4e48\u968f\u673a\u4fe1\u53f7\u7684\u4e00\u6b21FFT\u6ca1\u6709\u610f\u4e49\u5374\u8fd8\u80fd(\u5085\u7acb\u53f6\u53d8\u6362\u7684\u5e73\u65b9)/(\u533a\u95f4\u957f\u5ea6)\u5f97\u5230\u529f\u7387\u8c31\uff1f</p> <p>\u5bf9\u968f\u673a\u4fe1\u53f7\u76f4\u63a5\u505aFFT\u7684\u505a\u6cd5\u5176\u5b9e\u5c31\u662f\u622a\u65ad\u6210\u80fd\u91cf\u4fe1\u53f7\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u79cd\u5904\u7406\u4e0d\u7b26\u5408\u968f\u673a\u4fe1\u53f7\u5b9a\u4e49\uff0c\u4f46\u4e4b\u6240\u4ee5\u8fd9\u6837\u505a\uff0c\u662f\u505a\u77ed\u65f6\u9891\u57df\u5206\u6790\u4e0b\u4f5c\u7684\u8fd1\u4f3c\u5904\u7406\u3002</p> <p>\u6240\u4ee5\u603b\u7ed3\uff0c\u9891\u8c31**\u548c**\u80fd\u91cf\u8c31\uff08\u4e5f\u53eb\u80fd\u91cf\u8c31\u5bc6\u5ea6\uff09\u662f\u5085\u91cc\u53f6\u53d8\u6362\u5f97\u5230\u7684**\u590d\u6570\u7ed3\u679c**\u548c**\u6a21\u5e73\u65b9\u7684\u5173\u7cfb**\uff1b \u800c\u529f\u7387\u8c31\uff08\u4e5f\u5c31\u662f\u529f\u7387\u8c31\u5bc6\u5ea6\uff09\u662f\u9488\u5bf9\u968f\u673a\u4fe1\u53f7\u5206\u6790\u63d0\u51fa\u7684\u6982\u5ff5\u3002</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#4","title":"4.\u5012\u9891\u8c31","text":"<p>\u5012\u9891\u8c31\uff08Cepstrum\uff09\u4e5f\u53eb\u5012\u8c31\u3001\u4e8c\u6b21\u8c31\u548c\u5bf9\u6570\u529f\u7387\u8c31\u7b49\u3002\u5012\u9891\u8c31\u7684\u5de5\u7a0b\u578b\u5b9a\u4e49\u662f\uff1a\u4fe1\u53f7\u529f\u7387\u8c31\u5bf9\u6570\u503c\u8fdb\u884c\u5085\u7acb\u53f6\u9006\u53d8\u6362\u7684\u7ed3\u679c\u3002\uff08\u4fe1\u53f7\u2192\u6c42\u529f\u7387\u8c31\u2192\u6c42\u5bf9\u6570\u2192\u6c42\u5085\u91cc\u53f6\u9006\u53d8\u6362\uff09</p> <p>\u4e3a\u4ec0\u4e48\u7ffb\u8bd1\u4f5c\u5012\u9891\u8c31\u5462\uff1f\u6211\u4e2a\u4eba\u7684\u7406\u89e3\u662f\uff0c\u9891\u8c31\uff08\u529f\u7387\u8c31\uff09\u53cd\u5e94\u7684\u9891\u7387\u7279\u5f81\u70b9\u6a2a\u5750\u6807\u662f\u9891\u7387f\uff08Hz\uff09\uff0c\u5728\u5012\u9891\u8c31\u4e2d\u5bf9\u5e94\u7684\u7279\u5f81\u70b9\u7684\u6a2a\u5750\u6807\u662f\u65f6\u95f4t\uff08s\uff09\uff0c\u800cf\u4e0et\u4e92\u4e3a\u5012\u6570\u3002\u4ece\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u867d\u7136\u5012\u9891\u8c31\u4e5f\u53eb\u201c\u9891\u8c31\u201d\uff0c\u5176\u6a2a\u5750\u6807\u5374\u5e76\u4e0d\u662f\u9891\u7387\uff0c\u800c\u662f\u65f6\u95f4\u3002</p> <p>\u90a3\u4e48\u5012\u9891\u8c31\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f</p> <p>\u201c\u8be5\u5206\u6790\u65b9\u6cd5\u65b9\u4fbf\u63d0\u53d6\u3001\u5206\u6790\u539f\u9891\u8c31\u56fe\u4e0a\u8089\u773c\u96be\u4ee5\u8bc6\u522b\u7684\u5468\u671f\u6027\u4fe1\u53f7\uff0c\u80fd\u5c06\u539f\u6765\u9891\u8c31\u56fe\u4e0a\u6210\u65cf\u7684\u8fb9\u9891\u5e26\u8c31\u7ebf\u7b80\u5316\u4e3a\u5355\u6839\u8c31\u7ebf\uff0c\u53d7\u4f20\u611f\u5668\u7684\u6d4b\u70b9\u4f4d\u7f6e\u53ca\u4f20\u8f93\u9014\u5f84\u7684\u5f71\u54cd\u5c0f\u3002\u201d \u8fd9\u90fd\u662f\u5565\u610f\u601d\uff1f\u4e00\u6761\u6761\u89e3\u91ca\uff1a</p> <p>1.\u65b9\u4fbf\u63d0\u53d6\u3001\u5206\u6790\u539f\u9891\u8c31\u56fe\u4e0a\u8089\u773c\u96be\u4ee5\u8bc6\u522b\u7684\u5468\u671f\u6027\u4fe1\u53f7</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\u9891\u8c31\u5206\u6790\u5c31\u662f\u4e3a\u4e86\u63d0\u53d6\u539f\u59cb\u4fe1\u53f7\u4e2d\u7684\u5468\u671f\u6027\u4fe1\u53f7\u7684\uff0c\u600e\u4e48\u9891\u8c31\u4e2d\u7684\u4fe1\u53f7\u8fd8\u4f1a\u6709\u5468\u671f\u6027\uff1f\u8fd9\u5c31\u53c8\u6d89\u53ca\u5230\u4e24\u4e2a\u6982\u5ff5\uff1a\u8c03\u5236 \u548c \u8fb9\u9891\u5e26 \u3002</p> <p>\u8c03\u5236\u5206\u4e3a \u5e45\u503c\u8c03\u5236 \u548c \u9891\u7387\u8c03\u5236 \u3002\u4e0b\u9762\u4ee5\u9f7f\u8f6e\u7684\u5e45\u503c\u8c03\u5236\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff1a\u9f7f\u8f6e\u7684\u632f\u52a8\u4fe1\u53f7\u4e3b\u8981\u5305\u62ec\u4e24\u90e8\u5206\uff0c\u5206\u522b\u662f\u9f7f\u8f6e\u556e\u5408\u632f\u52a8\u4fe1\u53f7\uff08\u9ad8\u9891\uff09\u548c\u9f7f\u8f6e\u8f74\u7684\u8f6c\u9891\u632f\u52a8\u4fe1\u53f7\uff08\u4f4e\u9891\uff09\uff0c\u65f6\u57df\u548c\u9891\u57df\u66f2\u7ebf\u5206\u522b\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u9ad8\u9891\u4fe1\u53f7\u548c\u4f4e\u9891\u4fe1\u53f7\u65f6\u57df\u6ce2\u5f62</p> <p></p> <p>\u9ad8\u9891\u4fe1\u53f7\u548c\u4f4e\u9891\u4fe1\u53f7\u7684\u9891\u57df\u6ce2\u5f62</p> <p>\u8c03\u5236\u5c31\u662f\u9ad8\u4f4e\u9891\u7387\u4fe1\u53f7\u7684\u6df7\u5408\u3002\u5e45\u503c\u8c03\u5236\u4ece\u6570\u5b66\u4e0a\u770b\uff0c\u76f8\u5f53\u4e8e\u4e24\u4e2a\u4fe1\u53f7\u5728\u65f6\u57df\u4e0a\u76f8\u4e58\uff1b\u800c\u5728\u9891\u57df\u4e0a\uff0c\u76f8\u5f53\u4e8e\u4e24\u4e2a\u4fe1\u53f7\u7684\u5377\u79ef\u3002\u8c03\u5236\u540e\u7684\u4fe1\u53f7\u5728\u65f6\u57df\u548c\u9891\u57df\u4e0a\u5206\u522b\u53d8\u4e3a\uff1a</p> <p></p> <p>\u8c03\u5236\u540e\u7684\u65f6\u57df\u4fe1\u53f7</p> <p></p> <p>\u8c03\u5236\u540e\u7684\u9891\u57df\u4fe1\u53f7</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u8c03\u5236\u540e\u7684\u4fe1\u53f7\u4e2d\uff0c\u9664\u539f\u6765\u7684\u556e\u5408\u9891\u7387\u5206\u91cf\u5916\uff0c\u589e\u52a0\u4e86\u4e00\u5bf9\u5206\u91cf\uff0c\u5b83\u4eec\u662f\u4ee5\u9ad8\u9891\u4fe1\u53f7\u7279\u5f81\u9891\u7387\u4e3a\u4e2d\u5fc3\uff0c\u5bf9\u79f0\u5206\u5e03\u4e8e\u4e24\u4fa7\uff0c\u6240\u4ee5\u79f0\u4e3a\u8fb9\u9891\u5e26\u3002</p> <p>\u5b9e\u9645\u5b9e\u9a8c\u4e2d\u9f7f\u8f6e\u556e\u5408\u632f\u52a8\u4fe1\u53f7\uff08\u9ad8\u9891\uff09\u548c\u9f7f\u8f6e\u8f74\u7684\u8f6c\u9891\u632f\u52a8\u4fe1\u53f7\uff08\u4f4e\u9891\uff09\u7684\u7279\u5f81\u9891\u7387\u53ef\u80fd\u662f\u6709\u591a\u7ec4\u7684\uff0c\u5176\u8c03\u5236\u540e\u7684\u9891\u57df\u4fe1\u53f7\u8fd1\u4f3c\u4e8e\u4e00\u7ec4\u9891\u7387\u95f4\u9694\u8f83\u5927\u7684\u8109\u51b2\u51fd\u6570\u548c\u4e00\u7ec4\u9891\u7387\u95f4\u9694\u8f83\u5c0f\u7684\u8109\u51b2\u51fd\u6570\u7684\u5377\u79ef\uff0c\u4ece\u800c\u5728\u9891\u8c31\u4e0a\u5f62\u6210\u82e5\u5e72\u7ec4\u56f4\u7ed5\u556e\u5408\u9891\u7387\u53ca\u5176\u500d\u9891\u6210\u5206\u4e24\u4fa7\u7684\u8fb9\u9891\u65cf\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u8fb9\u9891\u5e26\u7684\u5f62\u6210</p> <p>\u8bf4\u4e86\u4e00\u5927\u5806\uff0c\u7ec8\u4e8e\u56de\u5f52\u5230\u4e0a\u8fb9\u63d0\u5230\u7684\u95ee\u9898\uff1a\u5012\u9891\u8c31\u201c\u65b9\u4fbf\u63d0\u53d6\u3001\u5206\u6790\u539f\u9891\u8c31\u56fe\u4e0a\u8089\u773c\u96be\u4ee5\u8bc6\u522b\u7684\u5468\u671f\u6027\u4fe1\u53f7\u201d\u3002\u8fd9\u91cc\u6307\u7684\u5468\u671f\u6027\u4fe1\u53f7\uff0c\u5c31\u662f\u91cd\u590d\u51fa\u73b0\u7684\u8fb9\u9891\u5e26\u3002</p> <p>2.\u53d7\u4f20\u611f\u5668\u7684\u6d4b\u70b9\u4f4d\u7f6e\u53ca\u4f20\u8f93\u9014\u5f84\u7684\u5f71\u54cd\u5c0f</p> <p>\u8fd9\u662f\u5012\u9891\u8c31\u7684\u7b2c\u4e8c\u4e2a\u597d\u5904\u3002\u5bf9\u4e8e\u5e03\u7f6e\u5728\u4e0d\u540c\u4f4d\u7f6e\u7684\u4f20\u611f\u5668\uff0c\u7531\u4e8e\u4f20\u9012\u8def\u5f84\u4e0d\u540c\uff0c\u5176\u529f\u7387\u8c31\u4e5f\u4e0d\u76f8\u540c\u3002\u4f46\u5728\u5012\u9891\u8c31\u4e0a\uff0c\u7531\u4e8e\u4fe1\u53f7\u6e90\u7684 \u632f\u52a8\u6548\u5e94 \u548c \u4f20\u9012\u9014\u5f84 \u7684\u6548\u5e94\u5206\u79bb\u5f00\u6765\uff0c\u4ee3\u8868\u9f7f\u8f6e\u632f\u52a8\u7279\u5f81\u7684\u5012\u9891\u7387\u5206\u91cf\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u662f\u4f4e\u5012\u9891\u7387\u6bb5\u5b58\u5728\u7531\u4e8e\u4f20\u9012\u51fd\u6570\u5dee\u5f02\u800c\u4ea7\u751f\u7684\u5f71\u54cd\u3002\u5728\u8fdb\u884c\u5012\u9891\u8c31\u5206\u6790\u65f6\uff0c\u53ef\u4ee5\u4e0d\u5fc5\u8003\u8651\u4fe1\u53f7\u6d4b\u53d6\u65f6\u7684\u8870\u51cf\u548c\u6807\u5b9a\u7cfb\u6570\u6240\u5e26\u6765\u7684\u5f71\u54cd\u3002 \u8fd9\u4e00\u4f18\u70b9\u5bf9\u4e8e\u6545\u969c\u8bc6\u522b\u6781\u4e3a\u6709\u7528\u3002</p> <p>\u5177\u4f53\u7684\u4f8b\u5b50\u53c2\u8003 \ud83d\udd17</p>"},{"location":"zh/DSP/NOTE-DSP-STUFF/TIME-FREQ-ANA/CH06/tf-ana-ch06/#5","title":"5.\u5c0f\u6ce2\u5206\u6790","text":"<p>\u5c0f\u6ce2\u5206\u6790\u662f\u4e00\u79cd\u65f6\u9891\u57df\u5206\u6790\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u517c\u987e\u4e86\u4fe1\u53f7\u5728\u65f6\u57df\u548c\u9891\u57df\u7684\u4fe1\u606f\u3002\u77e5\u4e4e\u4e0a\u6709\u4e00\u7bc7\u6587\u7ae0\u5bf9\u5c0f\u6ce2\u5206\u6790\u7684\u7406\u89e3\u8fdb\u884c\u4e86\u751f\u52a8\u7684\u8bb2\u89e3\uff0c\u5f3a\u70c8\u5efa\u8bae\u5bf9\u5c0f\u6ce2\u5206\u6790\u6982\u5ff5\u4e0d\u719f\u7684\u540c\u5b66\u5148\u770b\u4e00\u4e0b\u3002\u549a\u61c2\u549a\u61c2\u549a\uff1a\u80fd\u4e0d\u80fd\u901a\u4fd7\u7684\u8bb2\u89e3\u4e0b\u5085\u7acb\u53f6\u5206\u6790\u548c\u5c0f\u6ce2\u5206\u6790\u4e4b\u95f4\u7684\u5173\u7cfb\uff1f\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u6700\u540e\u7ed9\u51fa\u7684\u5c0f\u6ce2\u53d8\u6362\u7684\u7ed3\u679c\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <p>\u8fde\u7eed\u5c0f\u6ce2\u53d8\u6362</p> <p>\u770b\u8d77\u6765\u5341\u5206\u5389\u5bb3\uff0c\u4e0d\u8fc7\u540c\u65f6\u4f1a\u53d1\u73b0\u4e24\u4e2a\u95ee\u9898\uff1a\u8fd0\u7b97\u91cf\u5f88\u5927\uff1b\u53ea\u6709\u6570\u503c\u89e3\uff0c\u6ca1\u6709\u89e3\u6790\u89e3\u3002\u4e0a\u8ff0\u8fd9\u79cd\u5c0f\u6ce2\u5206\u6790\u65b9\u6cd5\u53eb\u8fde\u7eed\u5c0f\u6ce2\u53d8\u6362\uff08continuous wavelet transform, CWT\uff09\u3002</p> <p>\u4e3a\u4e86\u51cf\u5c11\u53d8\u6362\u8fd0\u7b97\u91cf\uff0c\u53bb\u9664\u4e0d\u5fc5\u8981\u7684\u91cd\u590d\u7684\u7cfb\u6570\uff0c\u5b9e\u9645\u4e2d\u4f7f\u7528\u7684\u901a\u5e38\u662f\u79bb\u6563\u5c0f\u6ce2\u53d8\u6362\uff08discrete wavelet transform, DWT\uff09\u3002</p> <p>\u8fd9\u91cc\u7684\u201c\u79bb\u6563\u201d\u6307\u7684\u662f\u4ec0\u4e48\u5462\uff1f</p> <p>\u8ba9\u6211\u4eec\u5148\u56de\u5230\u5c0f\u6ce2\u57fa\u6ce2\uff08\u4e5f\u53eb\u6bcd\u5c0f\u6ce2\uff09\u7684\u8868\u8fbe\u5f0f\uff1a</p> \\[ \\Psi_{s\\tau}(t) = \\frac{1}{\\sqrt{s}}\\Psi(\\frac{t-\\tau}{s}) \\] <p>\u5176\u4e2ds\u662f\u5c3a\u5ea6\u53c2\u6570\uff0c\u8868\u5f81\u9891\u7387\uff1bt\u662f\u4f4d\u79fb\u53c2\u6570\uff0c\u8868\u5f81\u65f6\u95f4\u3002\u8fd9\u90e8\u5206\u5728\u7b54\u53cb\u7684\u8fde\u63a5\u91cc\u4e5f\u63d0\u5230\u4e86\u3002\u518d\u770b\u4e0a\u4e00\u5f20\u56fe\uff0cxy\u5750\u6807\u5206\u522b\u662fSCALE\u548cTRANSLATION\uff0c\u4e5f\u5c31\u662fs\u548ct\uff0c\u4ed6\u4eec\u5728\u8fde\u7eed\u5c0f\u6ce2\u53d8\u6362\u4e2d\u662f\u8fde\u7eed\u7684\u3002</p> <p>\u6240\u4ee5\uff0c\u5728\u79bb\u6563\u5c0f\u6ce2\u53d8\u6362\u4e2d\uff0c\u201c\u79bb\u6563\u201d\u7684\u5c31\u662f\u53c2\u6570s\u548ct\u3002\u6b64\u65f6\u5c0f\u6ce2\u8868\u8fbe\u5f0f\u5199\u4e3a\uff1a</p> \\[ \\Psi_{j,k}(t) = \\frac{1}{\\sqrt{s_0^j}}\\Psi(\\frac{t-k\\tau_0s_0^j}{s_0^j}) \\] <p>j\u548ck\u90fd\u662f\u6574\u6570\uff0c\u901a\u5e38\u53d6s0=2\uff0c\u03c40=1\u3002</p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u968f\u7740j\u53d6\u503c\u7684\u9012\u589e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e32\u4e0d\u540c\u7684\u5c0f\u6ce2\uff08\u5b50\u5c0f\u6ce2\uff0c\u4e5f\u53eb\u5973\u513f\u5c0f\u6ce2...\uff09\u3002\u8fd9\u4e9b\u5b50\u5c0f\u6ce2\u7684\u5c3a\u5ea6\u53c2\u6570\u4ee52\u7684j\u6b21\u65b9\u7684\u5f62\u5f0f\u589e\u957f\u3002\u5f53\u4f7f\u7528\u8fd9\u4e00\u7cfb\u5217\u7684\u5b50\u5c0f\u6ce2\uff0c\u5bf9\u4e00\u4e2a\u8fde\u7eed\u51fd\u6570\u8fdb\u884c\u79bb\u6563\u5206\u6790\u65f6\uff0c\u6211\u4eec\u6240\u83b7\u5f97\u7684\u662f\u4e00\u7ec4\u5c0f\u6ce2\u5206\u6790\u7684\u7cfb\u6570\uff0c\u8fd9\u4e2a\u5206\u6790\u8fc7\u7a0b\u79f0\u4e3a\u5c0f\u6ce2\u7cfb\u5217\u5206\u89e3\u3002</p> <p>\u4e0a\u8fb9\u8bf4\u9053\uff0c\u5c3a\u5ea6\u53c2\u6570\u8868\u5f81\u7684\u662f\u9891\u7387\uff0c\u5728\u5b50\u5c0f\u6ce2\u4e2d\u5c3a\u5ea6\u53c2\u6570\u4ee52\u7684\u500d\u6570\u589e\u957f\uff08\u5373\u5c0f\u6ce2\u7684\u201c\u957f\u5ea6\u201d\u88ab\u201c\u62c9\u957f\u201d\u4e862\u500d\uff09\uff0c\u90a3\u4e48\u5b50\u5c0f\u6ce2\u5bf9\u5e94\u80fd\u68c0\u6d4b\u5230\u7684\u9891\u7387\u503c\u4e5f\u4f1a\u4ee5\u00bd\u7684\u500d\u6570\u7f29\u5c0f\u3002\u6bcd\u5c0f\u6ce2\u6240\u5bf9\u5e94\u7684\u9891\u8c31\u4f4d\u4e8e\u9891\u7387\u8c31\u7684\u9ad8\u7aef\uff0c\u5177\u6709\u6700\u5927\u7684\u9891\u7387\u8c31\u8303\u56f4- \u800c\u5176\u4ed6\u7684\u5b50\u5c0f\u6ce2\u7684\u9891\u7387\u8c31\u5219\u4f9d\u6b21\u5411\u9891\u8c31\u56fe\u7684\u4f4e\u9891\u7aef\u79fb\u52a8\uff0c\u540c\u65f6\u5b83\u4eec\u6240\u8986\u76d6\u7684\u9891\u7387\u8c31\u8303\u56f4\u4e5f\u76f8\u5e94\u5730\u9012\u51cf\u3002\u5728\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u7684\u6ee4\u6ce2\u5668\u5e94\u8be5\u9996\u5c3e\u76f8\u63a5\u4e92\u76f8\u8986\u76d6\u3002</p> <p></p> <p>\u4e0d\u540c\u5c3a\u5ea6\u7684\u5b50\u5c0f\u6ce2\u5728\u5c0f\u6ce2\u9891\u7387\u8c31\u4e0a\u7684\u8986\u76d6</p> <p>\u662f\u7684\uff0c\u6bcf\u4e2a\u5b50\u5c0f\u6ce2\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6ee4\u6ce2\u5668\uff0c\u79bb\u6563\u5c0f\u6ce2\u53d8\u6362\u7684\u8fc7\u7a0b\u5c31\u662f\u9010\u7ea7\u6ee4\u6ce2\u7684\u8fc7\u7a0b\u3002</p> <p>\u5177\u4f53\u6d41\u7a0b\u662f\u600e\u6837\u7684\u5462\uff1f</p> <p>\u7528\u4e00\u53e5\u8bdd\u63cf\u8ff0\u5c31\u662f\uff1a\u4e00\u7ec4\u79bb\u6563\u4fe1\u53f7\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u4f4e\u901a\u548c\u9ad8\u901a\u6ee4\u6ce2\u5668\uff0c\u5206\u522b\u53ef\u4ee5\u5f97\u5230\u8fd1\u4f3c\u4fe1\u53f7\uff08\u7528\u5b57\u6bcdA\u8868\u793a\uff09\u548c\u7ec6\u8282\u4fe1\u53f7\uff08\u7528\u5b57\u6bcdD\u8868\u793a\uff09\u3002</p> <p>\u7528\u4e00\u5f20\u56fe\u63cf\u8ff0\u5c31\u662f\uff1a</p> <p></p> <p>LP\u4e3a\u4f4e\u901a\u6ee4\u6ce2\u5668\uff0cHP\u4e3a\u9ad8\u901a\u6ee4\u6ce2\u5668\uff0cB\u4e3a\u5e26\u5bbd\uff0c2B\u4e3a2\u500d\u5e26\u5bbd</p> <p>\u7528\u4e00\u4e2a\u4f8b\u5b50\u6765\u63cf\u8ff0\u5c31\u662f\uff1a</p> <p>\u5bf9\u539f\u59cb\u4fe1\u53f7\u6ee4\u6ce2\uff1a\u539f\u59cb\u4fe1\u53f7\u662f\u5728\u4e00\u4e2a\u8fde\u7eed\u7684\u4f4e\u9891\u6b63\u5f26\u6ce2\u4fe1\u53f7\uff08\u9891\u7387\u4e3a0.5\uff09\u4e0a\u968f\u673a\u53e0\u52a0\u4e86\u4e24\u4e2a\u9ad8\u9891\uff08\u9891\u7387\u4e3a 10\uff09\u9ad8\u632f\u5e45\u7684\u6b63\u5f26\u8109\u51b2\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86 dB5\uff08\u7b2c\u4e94\u7ea7Daubechies\u5c0f\u6ce2\uff09\u4f5c\u4e3a\u53bb\u9664\u566a\u97f3\u64cd\u4f5c\u7684\u6bcd\u5c0f\u6ce2\u3002</p> <p></p> <p>\u539f\u59cb\u4fe1\u53f7</p> <p>\u4e00\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u7ed3\u679c\u4e3a\uff1a</p> <p></p> <p>\u4e00\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u8fd1\u4f3c\u4fe1\u53f7\uff08\u4f4e\u901a\u7ed3\u679c\uff09</p> <p></p> <p>\u4e00\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u7ec6\u8282\u4fe1\u53f7\uff08\u9ad8\u901a\u7ed3\u679c\uff09</p> <p>\u4e8c\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u7ed3\u679c\u4e3a\uff08\u5373\u5bf9A1\u4fe1\u53f7\u505a\u5206\u89e3\uff09\uff1a</p> <p></p> <p>\u4e8c\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u8fd1\u4f3c\u4fe1\u53f7\uff08\u4f4e\u901a\u7ed3\u679c\uff09</p> <p></p> <p>\u4e8c\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u7ec6\u8282\u4fe1\u53f7\uff08\u9ad8\u901a\u7ed3\u679c\uff09</p> <p>\u4e09\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u7ed3\u679c\u4e3a\uff08\u5373\u5bf9A2\u4fe1\u53f7\u505a\u5206\u89e3\uff09\uff1a</p> <p></p> <p>\u4e09\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u8fd1\u4f3c\u4fe1\u53f7\uff08\u4f4e\u901a\u7ed3\u679c\uff09</p> <p></p> <p>\u4e09\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u7ec6\u8282\u4fe1\u53f7\uff08\u9ad8\u901a\u7ed3\u679c\uff09</p> <p>\u56db\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u7ed3\u679c\u4e3a\uff08\u5373\u5bf9A3\u4fe1\u53f7\u505a\u5206\u89e3\uff09\uff1a</p> <p></p> <p>\u56db\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u8fd1\u4f3c\u4fe1\u53f7\uff08\u4f4e\u901a\u7ed3\u679c\uff09</p> <p></p> <p>\u56db\u9636\u5c0f\u6ce2\u5206\u89e3\u7684\u7ec6\u8282\u4fe1\u53f7\uff08\u9ad8\u901a\u7ed3\u679c\uff09</p> <p>\u81f3\u6b64\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u5f97\u5230\u8f83\u597d\u7684\u6ee4\u6ce2\u7ed3\u679c\u4e86\uff08\u5373A5\uff0c\u4e0d\u8fc7\u8109\u51b2\u4fe1\u53f7\u4e5f\u88ab\u6ee4\u6389\u4e86\uff0c\u7528\u8bbe\u7f6e\u95e8\u9650\u7684\u65b9\u6cd5\u53ef\u4ee5\u4fdd\u7559\u4f4f\u8be5\u4fe1\u53f7\uff0c\u8fd9\u91cc\u4e0d\u505a\u5c55\u5f00\uff09\u3002\u53ef\u4ee5\u770b\u5230\u539f\u5f0f\u4fe1\u53f7\u88ab\u9010\u7ea7\u7684\uff0c\u65e0\u9057\u6f0f\u5730\u8fdb\u884c\u4e86\u9ad8\u3001\u4f4e\u901a\u6ee4\u6ce2\uff0c\u4e14\u8d8a\u63a5\u8fd1\u4f4e\u9891\u5206\u6bb5\u8d8a\u7ec6\uff0c\u51e0\u4e4e\u60f3\u8981\u54ea\u4e2a\u9891\u6bb5\u7684\u7279\u5f81\u90fd\u80fd\u5f97\u5230\uff0c\u56e0\u800c\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e2a\u9738\u6c14\u7684\u540d\u5b57\uff0c\u53ebfilter banks\u3002</p> <p>\u5c0f\u6ce2\u53d8\u6362\u5927\u81f4\u8bb2\u5b8c\u4e86\uff0c\u90a3\u4e48\u5b83\u6709\u54ea\u4e9b\u7279\u70b9\uff0c\u53ef\u4ee5\u7528\u6765\u505a\u4ec0\u4e48\u5462\uff1f</p> <p>\u9996\u5148\u5f53\u7136\u662f\u6ee4\u9664\u566a\u58f0\u3002</p> <p>\u5176\u6b21\uff0c\u7531\u4e8e\u79bb\u6563\u5c0f\u6ce2\u53d8\u6362\u662f\u53ef\u9006\u7684\uff0c\u6240\u4ee5\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u56fe\u50cf\u3001\u4fe1\u53f7\u7684\u65e0\u635f\u538b\u7f29\u3002</p> <p>\u53e6\u5916\uff0c\u53ef\u4ee5\u68c0\u6d4b\u4fe1\u53f7\u7684\u975e\u8fde\u7eed\u6027\u3002\u5947\u5f02\u4fe1\u53f7\u4f1a\u5728\u7ec6\u8282\u4fe1\u53f7D\u4e2d\u5c55\u73b0\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u56fe\u50cf\u8fb9\u754c\u68c0\u6d4b\u7b49\u5de5\u4f5c\u3002</p>"},{"location":"zh/EMBEDDED-SYS/embedded-sys/","title":"\u5d4c\u5165\u5f0f\u7cfb\u7edf","text":""},{"location":"zh/EMBEDDED-SYS/embedded-sys/#_2","title":"\u7406\u8bba","text":""},{"location":"zh/EMBEDDED-SYS/embedded-sys/#_3","title":"\u7535\u5b50\u7535\u8def","text":"<ul> <li> <p> \u521d\u5b66\u8005\u7535\u5b50\u5b66\uff1a\u7535\u8def\u56fe\u3001\u7535\u8def\u4e0e\u5fae\u63a7\u5236\u5668\u5b9e\u7528\u4ecb\u7ecd \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>\u4f5c\u8005: Jonathan Bartlett</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/EMBEDDED-SYS/embedded-sys/#_4","title":"\u4eff\u771f","text":"<ul> <li> <p> Renode</p> <p>\u786c\u4ef6\u4eff\u771f\u6846\u67b6</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Wokwi</p> <p>\u786c\u4ef6\u4eff\u771f\u6846\u67b6\u3002Web / VSCode \u63d2\u4ef6</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/EMBEDDED-SYS/embedded-sys/#_5","title":"\u5f00\u53d1\u5957\u4ef6","text":"<ul> <li> <p> Arduino\u98df\u7528\u6307\u5357\uff0c\u7b2c\u4e09\u7248</p> <p>\u4f5c\u8005: Michael Margolis, Brian Jepson, Nicholas Robert Weldin</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Raspberry Pi\u98df\u7528\u6307\u5357\uff0c\u7b2c\u56db\u7248</p> <p>\u4f5c\u8005: Simon Monk</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/EMBEDDED-SYS/embedded-sys/#arduino","title":"Arduino","text":""},{"location":"zh/EMBEDDED-SYS/embedded-sys/#_6","title":"\u96c6\u6210\u5f00\u53d1\u73af\u5883","text":"<ul> <li> <p> Visual Studio Code \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Ecilpse IDE</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Arduino IDE \u2705</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> PlatformIO IDE \ud83c\udfaf\ud83c\udfc6</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Arm Keil MDK \ud83c\udfaf\ud83c\udfc6</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> STM32CubeIDE \ud83c\udfaf\ud83c\udfc6</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/EMBEDDED-SYS/IDE/ide/","title":"\u5d4c\u5165\u5f0f\u7cfb\u7edf\u96c6\u6210\u5f00\u53d1\u73af\u5883","text":""},{"location":"zh/EMBEDDED-SYS/IDE/ide/#ide","title":"\u6d41\u884c\u7684IDE","text":"<ul> <li> <p> Visual Studio Code \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>Visual Studio Code\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u4f46\u529f\u80fd\u5f3a\u5927\u7684\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\uff0c\u53ef\u5728\u684c\u9762\u4e0a\u8fd0\u884c\uff0c\u5e76\u53ef\u7528\u4e8eWindows\uff0cmacOS\u548cLinux\u3002\u5b83\u5185\u7f6e\u4e86\u5bf9JavaScript\uff0cTypeScript\u548cNode.js\u7684\u652f\u6301\uff0c\u5e76\u5177\u6709\u5176\u4ed6\u8bed\u8a00\uff08\u4f8b\u5982C ++\uff0cC\uff03\uff0cJava\uff0cPython\uff0cPHP\uff0cGo\uff09\u548c\u8fd0\u884c\u65f6\uff08\u4f8b\u5982.NET\u548cUnity\uff09\u7684\u4e30\u5bcc\u6269\u5c55\u751f\u6001\u7cfb\u7edf\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Ecilpse IDE</p> <p>Eclipse IDE\u662f\u7528\u4e8e\u8ba1\u7b97\u673a\u7f16\u7a0b\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\u3002Eclipse\u4e3b\u8981\u7528\u9014\u662f\u5f00\u53d1Java\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u4e5f\u53ef\u4ee5\u901a\u8fc7\u63d2\u4ef6\u5f00\u53d1\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Arduino IDE \u2705</p> <p>Arduino IDE\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u5e94\u7528\u7a0b\u5e8f\uff0c\u7528\u4e8e\u7f16\u5199\u548c\u4e0a\u4f20\u7a0b\u5e8f\u5230Arduino\u517c\u5bb9\u677f\uff0c\u4f46\u662f\uff0c\u501f\u52a9\u7b2c\u4e09\u65b9\u6838\u5fc3\u7684\u5e2e\u52a9\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5176\u4ed6\u4f9b\u5e94\u5546\u7684\u5f00\u53d1\u677f\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> PlatformIO IDE \ud83c\udfaf\ud83c\udfc6</p> <p>PlatformIO IDE\u662f\u7269\u8054\u7f51\u7684\u4e0b\u4e00\u4ee3\u96c6\u6210\u5f00\u53d1\u73af\u5883\u3002\u8de8\u5e73\u53f0\u6784\u5efa\u7cfb\u7edf\u548c\u5e93\u7ba1\u7406\u5668\u3002\u6301\u7eed\u548cIDE\u96c6\u6210\u3002\u517c\u5bb9Arduino\uff0cESP8266\u548cARM mbed\u3002\u51c6\u5907\u597d\u4e91\u7f16\u8bd1\u3002\u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u5b83\u662f\u4e00\u4e2aVSCode\u6269\u5c55\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> Arm Keil MDK \ud83c\udfaf\ud83c\udfc6</p> <p>Arm Keil MDK\u662f\u7528\u4e8e\u57fa\u4e8eArm\u7684\u5fae\u63a7\u5236\u5668\u7684\u6700\u5168\u9762\u7684\u8f6f\u4ef6\u5f00\u53d1\u89e3\u51b3\u65b9\u6848\uff0c\u5305\u62ec\u521b\u5efa\uff0c\u6784\u5efa\u548c\u8c03\u8bd5\u5d4c\u5165\u5f0f\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u6240\u6709\u7ec4\u4ef6\u3002\u76ee\u524d\uff0c\u4e0d\u4ec5\u9002\u7528\u4e8e\u57fa\u4e8eARM\u7684\u5fae\u63a7\u5236\u5668\uff0c\u8fd8\u9002\u7528\u4e8eRISC-V\u548c\u5176\u4ed6\u4f53\u7cfb\u7ed3\u6784\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> STM32CubeIDE \ud83c\udfaf\ud83c\udfc6</p> <p>STM32CubeIDE\u662f\u4e00\u79cd\u5148\u8fdb\u7684C / C ++\u5f00\u53d1\u5e73\u53f0\uff0c\u5177\u6709\u5916\u8bbe\u914d\u7f6e\uff0c\u4ee3\u7801\u751f\u6210\uff0c\u4ee3\u7801\u7f16\u8bd1\u548c\u8c03\u8bd5\u529f\u80fd\uff0c\u53ef\u7528\u4e8eSTM32\u5fae\u63a7\u5236\u5668\u548c\u5fae\u5904\u7406\u5668\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/EMBEDDED-SYS/IDE/KEIL/keil/#_1","title":"\u8d44\u6e90","text":""},{"location":"zh/EMBEDDED-SYS/IDE/KEIL/keil/#arm-keil","title":"ARM-KEIL\u5b98\u65b9\u7f51\u7ad9","text":"<p>Info</p> <p>\u53ef\u4ee5\u4ece\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7dKeil IDE\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <ul> <li> <p> Arm Keil MDK</p> <p>Arm Keil MDK\u662f\u7528\u4e8e\u57fa\u4e8eArm\u7684\u5fae\u63a7\u5236\u5668\u7684\u6700\u5168\u9762\u7684\u8f6f\u4ef6\u5f00\u53d1\u89e3\u51b3\u65b9\u6848\uff0c\u5305\u62ec\u521b\u5efa\uff0c\u6784\u5efa\u548c\u8c03\u8bd5\u5d4c\u5165\u5f0f\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u6240\u6709\u7ec4\u4ef6\u3002\u76ee\u524d\uff0c\u4e0d\u4ec5\u9002\u7528\u4e8e\u57fa\u4e8eARM\u7684\u5fae\u63a7\u5236\u5668\uff0c\u8fd8\u9002\u7528\u4e8eRISC-V\u548c\u5176\u4ed6\u4f53\u7cfb\u7ed3\u6784\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul> <p>Keil MDK\u4e0d\u662f\u514d\u8d39\u7684</p> <p>Keil MDK\u4e0d\u662f\u514d\u8d39\u7684\uff0c\u4f46\u662f\u60a8\u53ef\u4ee5\u7533\u8bf71\u5e74\u7684\u514d\u8d39\u8bb8\u53ef\u8bc1\u3002\u6709\u4e9b\u4eba\u53ef\u80fd\u60f3\u4f7f\u7528Keil MDK\u7684\u7834\u89e3\u7248\uff0c\u4f46\u662f\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\u3002\u5982\u679c\u60a8\u575a\u6301\u8fd9\u6837\u505a\uff0c\u6211\u76f8\u4fe1\u60a8\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\u627e\u5230\u7834\u89e3\u8f6f\u4ef6\u3002</p> <p>  \u7533\u8bf7\u514d\u8d39\u8bb8\u53ef\u8bc1 </p> <p> Keil MDK vs Keil C51</p> <p>Keil C51\u4e13\u95e8\u7528\u4e8e8051\u5fae\u63a7\u5236\u5668\u5f00\u53d1\uff0c\u800cKeil MDK\u662f\u4e00\u79cd\u66f4\u901a\u7528\u7684\u5f00\u53d1\u5de5\u5177\u5305\uff0c\u652f\u6301\u5404\u79cd\u5fae\u63a7\u5236\u5668\u67b6\u6784\uff0c\u91cd\u70b9\u662fARM Cortex-M\u5904\u7406\u5668\u3002</p>"},{"location":"zh/EMBEDDED-SYS/IDE/KEIL/keil/#flash","title":"Flash\u7f16\u7a0b\u5668","text":"<ul> <li> <p> Jlink\u9a71\u52a8\u7a0b\u5e8f</p> <p>J-Link\u662f\u4e00\u79cdUSB\u4f9b\u7535\u7684JTAG\u4eff\u771f\u5668\uff0c\u652f\u6301\u5927\u91cfCPU\u5185\u6838\u3002\u5b83\u7528\u4e8e\u5f00\u53d1\u548c\u8c03\u8bd5\u57fa\u4e8eARM\u7684\u5fae\u63a7\u5236\u5668\u3002\u5b83\u901a\u8fc7USB\u8fde\u63a5\u5230\u8fd0\u884cMicrosoft Windows 2000\u6216\u66f4\u9ad8\u7248\u672c\u7684PC\u3002 J-Link\u5728\u5168\u7403\u6570\u4e07\u4e2a\u5730\u65b9\u7528\u4e8e\u5f00\u53d1\u548c\u751f\u4ea7\uff08\u95ea\u5b58\u7f16\u7a0b\uff09\u76ee\u7684\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> STM32 ST-LINK Utility</p> <p>ST-LINK / V2\u662fSTM8\u548cSTM32\u5fae\u63a7\u5236\u5668\u7cfb\u5217\u7684\u7535\u8def\u8c03\u8bd5\u5668\u548c\u7f16\u7a0b\u5668\u3002\u5355\u7ebf\u63a5\u53e3\u6a21\u5757\uff08SWIM\uff09\u548cJTAG /\u4e32\u884c\u7ebf\u8c03\u8bd5\uff08SWD\uff09\u63a5\u53e3\u7528\u4e8e\u4e0e\u5e94\u7528\u677f\u4e0a\u7684\u4efb\u4f55STM8\u6216STM32\u5fae\u63a7\u5236\u5668\u901a\u4fe1\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul> <p>Tip</p> <p>\u9996\u5148\u5c1d\u8bd5\u7f16\u7a0b\u5668\uff0c\u5982\u679c\u4e0d\u8d77\u4f5c\u7528\uff0c\u8bf7\u4e0b\u8f7d\u5e76\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f\u3002 Jlink\u6216ST-LINK\u90fd\u53ef\u4ee5\u5c06\u7a0b\u5e8f\u70e7\u5f55\u5230\u5fae\u63a7\u5236\u5668\u4e2d\u3002</p> <ul> <li> Keil MDK-ARM Version 5 \u5165\u95e8</li> </ul> <p>\ud83c\udfac\ufe0f \u89c6\u9891\u94fe\u63a5</p> <ul> <li> Keil MDK-ARM Version 5 \u5165\u95e8\u6307\u5357</li> </ul> <p>\ud83d\udcc4 \u4e0b\u8f7d\u94fe\u63a5</p>"},{"location":"zh/HOME/about/","title":"\u5173\u4e8e","text":""},{"location":"zh/HOME/about/#_1","title":"\ud83d\udd2d \u5173\u4e8e","text":""},{"location":"zh/HOME/about/#_2","title":"\u5173\u4e8e\u6211","text":"<p>Tip</p> <p>\u5982\u679c\u60a8\u60f3\u8981\u8bbf\u95ee\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\uff0c\u8bf7\u70b9\u51fb\u8be5\u94fe\u63a5\uff1a\ud83c\udfd8\ufe0f www.cuishuaiwen.com\u3002</p> <p></p>"},{"location":"zh/HOME/about/#_3","title":"\u5173\u4e8e\u672c\u7ad9","text":"<p>\u672c\u7f51\u7ad9\u4f5c\u4e3a\u6211\u4e2a\u4eba\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u7684\u89c4\u5212\u56fe\u3002</p> <p></p>"},{"location":"zh/HOME/sponsorship/","title":"\u8d5e\u52a9","text":""},{"location":"zh/HOME/sponsorship/#_1","title":"\ud83d\udc08\ufe0f \u8d5e\u52a9\u672c\u7ad9","text":"<p>\u5982\u679c\u60a8\u89c9\u5f97\u672c\u7ad9\u7684\u5185\u5bb9\u5bf9\u60a8\u6709\u5e2e\u52a9\u548c\u542f\u53d1\uff0c\u53ef\u4ee5\u901a\u8fc7\u626b\u63cf\u4e0b\u65b9\u4e8c\u7ef4\u7801\u8d5e\u52a9\uff0c\u611f\u8c22\u60a8\u7684\u652f\u6301\u548c\u5e2e\u52a9\uff01</p> <p></p>"},{"location":"zh/IOT/iot/","title":"\u7269\u8054\u7f51","text":""},{"location":"zh/IOT/iot/#_2","title":"\u4ecb\u7ecd","text":"<ul> <li> <p> \u7269\u8054\u7f51\u548c\u8fb9\u7f18\u8ba1\u7b97\u67b6\u6784\u5e08\u6307\u5357 - \u7b2c\u4e8c\u7248\ud83c\udfaf\u2705\ud83c\udfc6</p> <p>\u4f5c\u8005: Perry Lea</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/IOT/iot/#_3","title":"\u786c\u4ef6","text":"<p>\u53c2\u8003 \u5d4c\u5165\u5f0f\u7cfb\u7edf \u90e8\u5206\u3002</p>"},{"location":"zh/IOT/iot/#_4","title":"\u8f6f\u4ef6","text":"<p>\u5f85\u66f4\u65b0\u3002</p>"},{"location":"zh/IOT/iot/#_5","title":"\u534f\u8bae","text":""},{"location":"zh/IOT/iot/#osi","title":"\u5f00\u653e\u7cfb\u7edf\u4e92\u8054 (OSI) \u6a21\u578b","text":"<p>\u539f\u6587@sheldon</p> <p>Info</p> <p>OSI \u6a21\u578b\u662f\u4e00\u4e2a\u6982\u5ff5\u6a21\u578b\uff0c\u7528\u4e8e\u63cf\u8ff0\u548c\u89c4\u8303\u7f51\u7edc\u901a\u4fe1\u4e2d\u6d89\u53ca\u7684\u4e0d\u540c\u8f6f\u4ef6\u548c\u786c\u4ef6\u7ec4\u4ef6\u5e94\u5982\u4f55\u5206\u5de5\u548c\u76f8\u4e92\u4ea4\u4e92\u3002\u5b83\u6709\u4e03\u5c42\u3002</p>"},{"location":"zh/IOT/iot/#_6","title":"\u7b2c\u4e03\u5c42\uff1a\u5e94\u7528\u5c42","text":"<p>OSI \u6a21\u578b\u7684\u5e94\u7528\u5c42\u76f4\u63a5\u4e0e\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e92\uff0c\u6839\u636e\u9700\u8981\u63d0\u4f9b\u901a\u4fe1\u529f\u80fd\uff0c\u5b83\u662f\u6700\u63a5\u8fd1\u6700\u7ec8\u7528\u6237\u7684\u5c42\u3002\u5e94\u7528\u5c42\u7684\u529f\u80fd\u901a\u5e38\u5305\u62ec\u9a8c\u8bc1\u901a\u4fe1\u4f19\u4f34\u548c\u8d44\u6e90\u7684\u53ef\u7528\u6027\u4ee5\u652f\u6301\u4efb\u4f55\u6570\u636e\u4f20\u8f93\u3002\u8be5\u5c42\u8fd8\u4e3a\u6700\u7ec8\u5e94\u7528\u7a0b\u5e8f\u5b9a\u4e49\u534f\u8bae\uff0c\u4f8b\u5982\u57df\u540d\u7cfb\u7edf (DNS)\u3001\u6587\u4ef6\u4f20\u8f93\u534f\u8bae (FTP)\u3001\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae (HTTP)\u3001Internet \u6d88\u606f\u8bbf\u95ee\u534f\u8bae (IMAP)\u3001\u90ae\u5c40\u534f\u8bae (POP)\u3001\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae (SMTP)\u3001\u7b80\u5355\u7f51\u7edc\u7ba1\u7406\u534f\u8bae (SNMP) \u548c Telnet (\u7ec8\u7aef\u4eff\u771f)\u3002</p>"},{"location":"zh/IOT/iot/#_7","title":"\u7b2c\u516d\u5c42\uff1a\u8868\u793a\u5c42","text":"<p>\u8868\u793a\u5c42\u68c0\u67e5\u6570\u636e\u4ee5\u786e\u4fdd\u5176\u4e0e\u901a\u4fe1\u8d44\u6e90\u517c\u5bb9\u3002\u5b83\u5c06\u6570\u636e\u8f6c\u6362\u4e3a\u5e94\u7528\u7ea7\u548c\u8f83\u4f4e\u7ea7\u522b\u63a5\u53d7\u7684\u5f62\u5f0f\u3002\u4efb\u4f55\u6240\u9700\u7684\u6570\u636e\u683c\u5f0f\u5316\u6216\u4ee3\u7801\u8f6c\u6362\u4e5f\u7531\u7b2c\u516d\u5c42\u5904\u7406\uff0c\u4f8b\u5982\u5c06\u6269\u5c55\u4e8c\u8fdb\u5236\u7f16\u7801\u5341\u8fdb\u5236\u4ea4\u6362\u7801 (EBCDIC) \u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\u8f6c\u6362\u4e3a\u7f8e\u56fd\u4fe1\u606f\u4ea4\u6362\u6807\u51c6\u4ee3\u7801 (ASCII) \u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\u3002\u5b83\u8fd8\u7528\u4e8e\u6570\u636e\u538b\u7f29\u548c\u52a0\u5bc6\u3002\u4f8b\u5982\uff0c\u89c6\u9891\u901a\u8bdd\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u5c06\u88ab\u538b\u7f29\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u66f4\u5feb\u5730\u4f20\u8f93\uff0c\u6570\u636e\u5c06\u5728\u63a5\u6536\u7aef\u6062\u590d\u3002\u5bf9\u4e8e\u5177\u6709\u9ad8\u5b89\u5168\u6027\u8981\u6c42\u7684\u6570\u636e\uff0c\u4f8b\u5982\u5305\u542b\u5bc6\u7801\u7684\u6587\u672c\u6d88\u606f\uff0c\u5b83\u5c06\u5728\u6b64\u5c42\u52a0\u5bc6\u3002</p>"},{"location":"zh/IOT/iot/#_8","title":"\u7b2c\u4e94\u5c42\uff1a\u4f1a\u8bdd\u5c42","text":"<p>\u4f1a\u8bdd\u5c42\u63a7\u5236\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u5bf9\u8bdd (\u8fde\u63a5)\u3002\u5b83\u5efa\u7acb\u3001\u7ba1\u7406\u3001\u7ef4\u62a4\u548c\u6700\u7ec8\u7ec8\u6b62\u672c\u5730\u548c\u8fdc\u7a0b\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u8fde\u63a5\u3002\u7b2c 5 \u5c42\u8f6f\u4ef6\u8fd8\u5904\u7406\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u529f\u80fd\u3002\u5b83\u8fd8\u9a8c\u8bc1\u6570\u636e\u662f\u5426\u5df2\u4f20\u9001\u3002\u4f1a\u8bdd\u5c42\u901a\u5e38\u5728\u4f7f\u7528\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u73af\u5883\u4e2d\u663e\u5f0f\u5b9e\u73b0\u3002</p>"},{"location":"zh/IOT/iot/#_9","title":"\u7b2c\u56db\u5c42\uff1a\u4f20\u8f93\u5c42","text":"<p>\u4f20\u8f93\u5c42\u63d0\u4f9b\u6570\u636e\u5e8f\u5217\u4ece\u6e90\u4e3b\u673a\u901a\u8fc7\u4e00\u4e2a\u6216\u591a\u4e2a\u7f51\u7edc\u4f20\u8f93\u5230\u76ee\u6807\u4e3b\u673a\u7684\u529f\u80fd\u548c\u624b\u6bb5\uff0c\u540c\u65f6\u4fdd\u6301\u670d\u52a1\u8d28\u91cf (QoS) \u529f\u80fd\u5e76\u786e\u4fdd\u6570\u636e\u7684\u5b8c\u6574\u4f20\u9012\u3002\u901a\u8fc7\u7ea0\u9519\u548c\u7c7b\u4f3c\u529f\u80fd\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\u3002\u5b83\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u663e\u5f0f\u6d41\u91cf\u63a7\u5236\u529f\u80fd\u3002\u867d\u7136\u4e0d\u4e25\u683c\u7b26\u5408 OSI \u6a21\u578b\uff0c\u4f46 TCP \u548c\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae (UDP) \u662f\u7b2c 4 \u5c42\u4e2d\u7684\u57fa\u672c\u534f\u8bae\u3002</p>"},{"location":"zh/IOT/iot/#_10","title":"\u7b2c\u4e09\u5c42\uff1a\u7f51\u7edc\u5c42","text":"<p>\u7f51\u7edc\u5c42\u901a\u8fc7\u903b\u8f91\u5bfb\u5740\u548c\u4ea4\u6362\u529f\u80fd\u5904\u7406\u6570\u636e\u5305\u8def\u7531\u3002\u7f51\u7edc\u662f\u4e00\u4e2a\u53ef\u4ee5\u8fde\u63a5\u8bb8\u591a\u8282\u70b9\u7684\u5a92\u4f53\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u5730\u5740\u3002\u5f53\u4e00\u4e2a\u8282\u70b9\u9700\u8981\u5c06\u6d88\u606f\u4f20\u8f93\u5230\u5176\u4ed6\u8282\u70b9\u65f6\uff0c\u5b83\u53ea\u80fd\u63d0\u4f9b\u6d88\u606f\u7684\u5185\u5bb9\u548c\u76ee\u6807\u8282\u70b9\u7684\u5730\u5740\uff0c\u7136\u540e\u7f51\u7edc\u5c06\u627e\u5230\u4f20\u9012\u6d88\u606f\u5230\u76ee\u6807\u8282\u70b9\u7684\u65b9\u6cd5\uff0c\u53ef\u80fd\u901a\u8fc7\u5176\u4ed6\u8282\u70b9\u8def\u7531\u3002\u5982\u679c\u6d88\u606f\u592a\u957f\uff0c\u7f51\u7edc\u53ef\u80fd\u4f1a\u5728\u4e00\u4e2a\u8282\u70b9\u5c06\u5176\u5206\u6210\u51e0\u4e2a\u6bb5\uff0c\u5206\u522b\u53d1\u9001\u5e76\u5728\u53e6\u4e00\u4e2a\u8282\u70b9\u91cd\u65b0\u7ec4\u88c5\u7247\u6bb5\u3002</p>"},{"location":"zh/IOT/iot/#_11","title":"\u7b2c\u4e8c\u5c42\uff1a\u6570\u636e\u94fe\u8def\u5c42","text":"<p>\u6570\u636e\u94fe\u8def\u5c42\u63d0\u4f9b\u8282\u70b9\u5230\u8282\u70b9\u7684\u4f20\u8f93\uff0c\u5373\u4e24\u4e2a\u76f4\u63a5\u8fde\u63a5\u7684\u8282\u70b9\u4e4b\u95f4\u7684\u8fde\u63a5\u3002\u5b83\u5904\u7406\u5e27\u4e2d\u6570\u636e\u7684\u6253\u5305\u548c\u89e3\u5305\u3002\u5b83\u5b9a\u4e49\u4e86\u5efa\u7acb\u548c\u7ec8\u6b62\u4e24\u4e2a\u7269\u7406\u8fde\u63a5\u8bbe\u5907\u4e4b\u95f4\u8fde\u63a5\u7684\u534f\u8bae\uff0c\u4f8b\u5982\u70b9\u5bf9\u70b9\u534f\u8bae (PPP)\u3002\u6570\u636e\u94fe\u8def\u5c42\u901a\u5e38\u5206\u4e3a\u4e24\u4e2a\u5b50\u5c42\u2014\u2014\u5a92\u4f53\u8bbf\u95ee\u63a7\u5236 (MAC) \u5c42\u548c\u903b\u8f91\u94fe\u8def\u63a7\u5236 (LLC) \u5c42\u3002MAC \u5c42\u8d1f\u8d23\u63a7\u5236\u7f51\u7edc\u4e2d\u7684\u8bbe\u5907\u5982\u4f55\u8bbf\u95ee\u5a92\u4f53\u548c\u83b7\u5f97\u4f20\u8f93\u6570\u636e\u7684\u6743\u9650\u3002LLC \u5c42\u8d1f\u8d23\u8bc6\u522b\u548c\u5c01\u88c5\u7f51\u7edc\u5c42\u534f\u8bae\uff0c\u5e76\u63a7\u5236\u9519\u8bef\u68c0\u67e5\u548c\u5e27\u540c\u6b65\u3002</p>"},{"location":"zh/IOT/iot/#_12","title":"\u7b2c\u4e00\u5c42\uff1a\u7269\u7406\u5c42","text":"<p>\u7269\u7406\u5c42\u5b9a\u4e49\u4e86\u6570\u636e\u8fde\u63a5\u7684\u7535\u6c14\u548c\u7269\u7406\u89c4\u8303\u3002\u4f8b\u5982\uff0c\u8fde\u63a5\u5668\u7684\u5f15\u811a\u5e03\u5c40\u3001\u7535\u7f06\u7684\u64cd\u4f5c\u7535\u538b\u3001\u5149\u7ea4\u7535\u7f06\u89c4\u8303\u548c\u65e0\u7ebf\u8bbe\u5907\u7684\u9891\u7387\u3002\u5b83\u8d1f\u8d23\u5728\u7269\u7406\u4ecb\u8d28\u4e2d\u4f20\u8f93\u548c\u63a5\u6536\u975e\u7ed3\u6784\u5316\u539f\u59cb\u6570\u636e\u3002\u6bd4\u7279\u7387\u63a7\u5236\u662f\u5728\u7269\u7406\u5c42\u5b8c\u6210\u7684\u3002\u5b83\u662f\u4f4e\u7ea7\u7f51\u7edc\u8bbe\u5907\u7684\u5c42\uff0c\u4ece\u4e0d\u6d89\u53ca\u534f\u8bae\u6216\u5176\u4ed6\u66f4\u9ad8\u5c42\u9879\u3002</p>"},{"location":"zh/IOT/iot/#tcpip","title":"TCP/IP \u6a21\u578b","text":"<p>Info</p> <p>TCP/IP\u6a21\u578b\u4e5f\u662f\u4e00\u4e2a\u5206\u5c42\u53c2\u8003\u6a21\u578b\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u56db\u5c42\u6a21\u578b\u3002\u5b83\u7684\u53e6\u4e00\u4e2a\u540d\u5b57\u662f\u4e92\u8054\u7f51\u534f\u8bae\u5957\u4ef6\u3002\u5b83\u901a\u5e38\u88ab\u79f0\u4e3aTCP/IP\uff0c\u56e0\u4e3a\u57fa\u672c\u534f\u8bae\u662fTCP\u548cIP\uff0c\u4f46\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\u4e0d\u4ec5\u4f7f\u7528\u8fd9\u4e24\u4e2a\u534f\u8bae\u3002</p>"},{"location":"zh/IOT/iot/#_13","title":"\u5e94\u7528\u5c42","text":"<p>TCP/IP\u6a21\u578b\u7684\u5e94\u7528\u5c42\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u8bbf\u95ee\u5176\u4ed6\u5c42\u670d\u52a1\u7684\u80fd\u529b\uff0c\u5e76\u5b9a\u4e49\u4e86\u5e94\u7528\u7a0b\u5e8f\u7528\u4e8e\u4ea4\u6362\u6570\u636e\u7684\u534f\u8bae\u3002\u6700\u5e7f\u4e3a\u4eba\u77e5\u7684\u5e94\u7528\u5c42\u534f\u8bae\u5305\u62ecHTTP\u3001FTP\u3001SMTP\u3001Telnet\u3001DNS\u3001SNMP\u548c\u8def\u7531\u4fe1\u606f\u534f\u8bae(RIP)\u3002</p>"},{"location":"zh/IOT/iot/#_14","title":"\u4f20\u8f93\u5c42","text":"<p>\u4f20\u8f93\u5c42\uff0c\u4e5f\u79f0\u4e3a\u4e3b\u673a\u5230\u4e3b\u673a\u4f20\u8f93\u5c42\uff0c\u8d1f\u8d23\u5411\u5e94\u7528\u5c42\u63d0\u4f9b\u4f1a\u8bdd\u548c\u6570\u636e\u62a5\u901a\u4fe1\u670d\u52a1\u3002\u8fd9\u4e00\u5c42\u7684\u6838\u5fc3\u534f\u8bae\u662fTCP\u548cUDP\u3002TCP\u63d0\u4f9b\u4e00\u5bf9\u4e00\u7684\u3001\u9762\u5411\u8fde\u63a5\u7684\u3001\u53ef\u9760\u7684\u901a\u4fe1\u670d\u52a1\u3002\u5b83\u8d1f\u8d23\u5bf9\u53d1\u9001\u7684\u6570\u636e\u5305\u8fdb\u884c\u6392\u5e8f\u548c\u786e\u8ba4\uff0c\u5e76\u6062\u590d\u4f20\u8f93\u4e2d\u4e22\u5931\u7684\u6570\u636e\u5305\u3002UDP\u63d0\u4f9b\u4e00\u5bf9\u4e00\u6216\u4e00\u5bf9\u591a\u3001\u65e0\u8fde\u63a5\u3001\u4e0d\u53ef\u9760\u7684\u901a\u4fe1\u670d\u52a1\u3002UDP\u901a\u5e38\u7528\u4e8e\u4f20\u8f93\u7684\u6570\u636e\u91cf\u5f88\u5c0f(\u4f8b\u5982\u6570\u636e\u53ef\u4ee5\u88c5\u5165\u5355\u4e2a\u6570\u636e\u5305)\u3002</p>"},{"location":"zh/IOT/iot/#_15","title":"\u7f51\u9645\u5c42","text":"<p>\u56e0\u7279\u7f51\u5c42\u8d1f\u8d23\u4e3b\u673a\u5bfb\u5740\u3001\u5c01\u88c5\u548c\u8def\u7531\u529f\u80fd\u3002Internet\u534f\u8bae\u5c42\u7684\u6838\u5fc3\u534f\u8bae\u6709IP\u3001\u5730\u5740\u89e3\u6790\u534f\u8bae(ARP)\u3001Internet\u63a7\u5236\u6d88\u606f\u534f\u8bae(ICMP)\u548cInternet\u7ec4\u7ba1\u7406\u534f\u8bae(IGMP)\u3002IP\u662f\u4e00\u79cd\u53ef\u8def\u7531\u534f\u8bae\uff0c\u8d1f\u8d23IP\u5bfb\u5740\u3001\u8def\u7531\u3001\u5206\u7ec4\u548c\u91cd\u7ec4\u3002ARP\u8d1f\u8d23\u53d1\u73b0\u7f51\u7edc\u8bbf\u95ee\u5c42\u5730\u5740\uff0c\u4f8b\u5982\u4e0e\u7ed9\u5b9a\u7684Internet\u5c42\u8bbf\u95ee\u76f8\u5173\u8054\u7684\u786c\u4ef6\u5730\u5740\u3002ICMP\u8d1f\u8d23\u63d0\u4f9b\u8bca\u65ad\u529f\u80fd\uff0c\u5e76\u62a5\u544a\u7531\u4e8eIP\u62a5\u6587\u53d1\u9001\u5931\u8d25\u800c\u5bfc\u81f4\u7684\u9519\u8bef\u3002IGMP\u8d1f\u8d23IP\u7ec4\u64ad\u7ec4\u7684\u7ba1\u7406\u3002\u5728\u8fd9\u4e00\u5c42\u4e2d\uff0cIP\u4e3a\u6570\u636e\u5305\u6dfb\u52a0\u62a5\u5934\uff0c\u79f0\u4e3aIP\u5730\u5740\u3002\u73b0\u5728\u6709IPv4(32\u4f4d)\u5730\u5740\u548cIP Ipv6(128\u4f4d)\u5730\u5740\u3002</p>"},{"location":"zh/IOT/iot/#_16","title":"\u6570\u636e\u94fe\u8def\u5c42","text":"<p>\u7f51\u7edc\u8bbf\u95ee\u5c42(\u6216\u94fe\u8def\u5c42)\u8d1f\u8d23\u5c06TCP/IP\u6570\u636e\u5305\u653e\u5728\u7f51\u7edc\u4ecb\u8d28\u4e0a\uff0c\u5e76\u4ece\u7f51\u7edc\u4ecb\u8d28\u4e0a\u63a5\u6536TCP/IP\u6570\u636e\u5305\u3002TCP/IP\u88ab\u8bbe\u8ba1\u6210\u72ec\u7acb\u4e8e\u7f51\u7edc\u8bbf\u95ee\u65b9\u6cd5\u3001\u5e27\u683c\u5f0f\u548c\u4ecb\u8d28\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u72ec\u7acb\u4e8e\u4efb\u4f55\u7279\u5b9a\u7684\u7f51\u7edc\u6280\u672f\u3002\u8fd9\u6837\uff0cTCP/IP\u5c31\u53ef\u4ee5\u7528\u6765\u8fde\u63a5\u4e0d\u540c\u7684\u7f51\u7edc\u7c7b\u578b\uff0c\u5982\u4ee5\u592a\u7f51\u3001\u4ee4\u724c\u73af\u3001X.25\u3001\u5e27\u4e2d\u7ee7\u548c\u5f02\u6b65\u4f20\u8f93\u6a21\u5f0f(ATM)\u3002</p> <p></p> <p></p>"},{"location":"zh/IOT/iot/#_17","title":"\u534f\u8bae\u6808","text":"<ul> <li> <p> \u901a\u8baf\u534f\u8bae\u5927\u5168</p> <p>\u4f5c\u8005: \u5927\u5e08\u5144\u7684\u5c0f\u6742\u94fa</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul> <p> \ud83d\udd17 \u56fe\u6e90</p> <p>\u8fd9\u91cc\u6211\u4eec\u4ee5OSI\u6a21\u578b\u5c42\u6b21\u6765\u5212\u5206\u534f\u8bae\u3002</p>"},{"location":"zh/IOT/iot/#_18","title":"\u7b2c\u4e94\u5c42\uff1a\u4f1a\u8bdd\u5c42 &amp; \u7b2c\u516d\u5c42\uff1a\u8868\u793a\u5c42 &amp; \u7b2c\u4e03\u5c42\uff1a\u5e94\u7528\u5c42","text":""},{"location":"zh/IOT/iot/#_19","title":"\u7b2c\u4e09\u5c42\uff1a\u7f51\u7edc\u5c42 &amp; \u7b2c\u56db\u5c42\uff1a\u4f20\u8f93\u5c42","text":""},{"location":"zh/IOT/iot/#_20","title":"\u7b2c\u4e00\u5c42\uff1a\u7269\u7406\u5c42 &amp; \u7b2c\u4e8c\u5c42\uff1a\u6570\u636e\u94fe\u8def\u5c42","text":""},{"location":"zh/IOT/iot/#iot","title":"IoT \u534f\u8bae\u6bd4\u8f83","text":"<ul> <li> <p> 6\u79cd\u65e0\u7ebf\u901a\u4fe1\u6280\u672f\u5bf9\u6bd4\uff08WiFi\uff0cZigbee\uff0c\u84dd\u7259\uff0cLora\uff0cNB-lot\uff0c4G\uff09\u3002</p> <p>\u4f5c\u8005: \u70b9\u706f\u5927\u5e08</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/IOT/iot/#_21","title":"\u6846\u67b6","text":"<p>Home Assistant</p> <p>ThingsBoard</p>"},{"location":"zh/IOT/MQTT/mqtt/","title":"\u6d88\u606f\u961f\u5217\u9065\u6d4b\u4f20\u8f93 (MQTT)","text":""},{"location":"zh/IOT/MQTT/mqtt/#mqtt_1","title":"\u4ec0\u4e48\u662f MQTT?","text":"<p>MQTT \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u53d1\u5e03/\u8ba2\u9605\u6d88\u606f\u4f20\u8f93\u534f\u8bae\uff0c\u4e13\u4e3a\u4f4e\u5e26\u5bbd\u73af\u5883\u4e0b\u7684 M2M (\u673a\u5668\u5230\u673a\u5668) \u9065\u6d4b\u800c\u8bbe\u8ba1\u3002\u5b83\u7531 Dr. Andy Stanford-Clark (IBM) \u548c Arlen Nipper \u5728 1999 \u5e74\u53d1\u660e\uff0c\u5e76\u4e8e 2014 \u5e74\u6210\u4e3a OASIS \u6807\u51c6\u3002</p>"},{"location":"zh/IOT/MQTT/mqtt/#mqtt_2","title":"MQTT \u7279\u6027","text":"<ul> <li> <p>\u8f7b\u91cf\u7ea7: MQTT \u88ab\u8bbe\u8ba1\u7528\u4e8e\u4f4e\u5e26\u5bbd\u3001\u9ad8\u5ef6\u8fdf\u7684\u7f51\u7edc\u4e2d\u3002\u5b83\u662f\u4e00\u4e2a\u53d1\u5e03/\u8ba2\u9605\u3001\u6781\u5176\u7b80\u5355\u548c\u8f7b\u91cf\u7ea7\u7684\u6d88\u606f\u4f20\u8f93\u534f\u8bae\uff0c\u4e13\u4e3a\u53d7\u9650\u8bbe\u5907\u548c\u4f4e\u5e26\u5bbd\u3001\u9ad8\u5ef6\u8fdf\u6216\u4e0d\u53ef\u9760\u7f51\u7edc\u800c\u8bbe\u8ba1\u3002\u8bbe\u8ba1\u539f\u5219\u662f\u5728\u5c3d\u91cf\u51cf\u5c11\u7f51\u7edc\u5e26\u5bbd\u548c\u8bbe\u5907\u8d44\u6e90\u9700\u6c42\u7684\u540c\u65f6\uff0c\u4e5f\u8bd5\u56fe\u786e\u4fdd\u53ef\u9760\u6027\u548c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4f20\u8f93\u4fdd\u8bc1\u3002\u8fd9\u4e9b\u539f\u5219\u4e5f\u4f7f\u5f97\u534f\u8bae\u975e\u5e38\u9002\u5408\u65b0\u5174\u7684\u8fde\u63a5\u8bbe\u5907\u7684 \"\u673a\u5668\u5bf9\u673a\u5668\" (M2M) \u6216 \"\u7269\u8054\u7f51\" \u4e16\u754c\uff0c\u4ee5\u53ca\u5e26\u5bbd\u548c\u7535\u6c60\u7535\u91cf\u90fd\u5f88\u5b9d\u8d35\u7684\u79fb\u52a8\u5e94\u7528\u3002</p> </li> <li> <p>\u53d1\u5e03/\u8ba2\u9605: MQTT \u57fa\u4e8e\u53d1\u5e03/\u8ba2\u9605\u6a21\u578b\u3002\u8fd9\u4f7f\u5f97\u5b83\u975e\u5e38\u9002\u5408\u7269\u8054\u7f51\u6d88\u606f\u4f20\u8f93\uff0c\u4f8b\u5982\u4f4e\u529f\u8017\u4f20\u611f\u5668\u6216\u624b\u673a\u3001\u5d4c\u5165\u5f0f\u8ba1\u7b97\u673a\u6216\u5fae\u63a7\u5236\u5668\u7b49\u79fb\u52a8\u8bbe\u5907\u3002</p> </li> <li> <p>\u5f02\u6b65: MQTT \u662f\u4e00\u79cd\u5f02\u6b65\u534f\u8bae\u3002MQTT \u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u9001\u6d88\u606f\u5e76\u7ee7\u7eed\u5176\u4ed6\u5904\u7406\uff0c\u5f53\u6d88\u606f\u53ef\u7528\u65f6\uff0c\u6d88\u606f\u5c06\u88ab\u4f20\u9012\u7ed9\u5ba2\u6237\u7aef\u3002</p> </li> <li> <p>QoS: MQTT \u652f\u6301\u4e09\u79cd\u8d28\u91cf\u670d\u52a1\uff0c\u7528\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6d88\u606f\u4f20\u9012: \"\u6700\u591a\u4e00\u6b21\"\u3001\"\u81f3\u5c11\u4e00\u6b21\" \u548c \"\u53ea\u6709\u4e00\u6b21\"\u3002\u53ef\u4ee5\u901a\u8fc7 \"\u81f3\u5c11\u4e00\u6b21\" \u6216 \"\u53ea\u6709\u4e00\u6b21\" \u6a21\u5f0f\u5b9e\u73b0\u53ef\u9760\u6027\uff0c\u4f46\u8fd9\u4e0d\u662f\u9ed8\u8ba4\u8bbe\u7f6e\u3002\u4f8b\u5982\uff0c\u4f20\u611f\u5668\u53ef\u80fd\u53ea\u9700\u8981\u5728\u503c\u53d1\u751f\u53d8\u5316\u65f6\u53d1\u9001\u8bfb\u6570\uff0c\u4f46\u6267\u884c\u5668\u53ef\u80fd\u9700\u8981\u63a5\u6536\u6bcf\u6761\u6d88\u606f\uff0c\u4ee5\u786e\u4fdd\u5b83\u5177\u6709\u6700\u65b0\u7684\u63a7\u5236\u4fe1\u606f\u3002</p> </li> <li> <p>\u4fdd\u7559\u6d88\u606f: MQTT \u652f\u6301\u4fdd\u7559\u6d88\u606f\u3002\u8fd9\u662f MQTT \u534f\u8bae\u7684\u4e00\u4e2a\u6709\u7528\u7684\u7279\u6027\u3002\u5b83\u5141\u8bb8\u5ba2\u6237\u7aef\u53d1\u5e03\u4e00\u4e2a\u6d88\u606f\uff0c\u8be5\u6d88\u606f\u7531\u670d\u52a1\u5668\u5b58\u50a8\uff0c\u5e76\u53d1\u9001\u7ed9\u4efb\u4f55\u5c06\u6765\u8ba2\u9605\u5339\u914d\u4e3b\u9898\u7684\u8ba2\u9605\u8005\u3002\u8fd9\u5bf9\u4e8e\u8bf8\u5982\u72b6\u6001\u66f4\u65b0\u4e4b\u7c7b\u7684\u6d88\u606f\u975e\u5e38\u6709\u7528\uff0c\u5176\u4e2d\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u5e03\u5bf9\u72b6\u6001\u4e3b\u9898\u7684\u66f4\u65b0\uff0c\u4efb\u4f55\u65b0\u8fde\u63a5\u7684\u5ba2\u6237\u7aef\u90fd\u5c06\u63a5\u6536\u5230\u6700\u65b0\u7684\u66f4\u65b0\u3002</p> </li> <li> <p>\u5c0f\u4ee3\u7801\u5360\u7528: \u6574\u4e2a MQTT \u534f\u8bae\u89c4\u8303\u5728\u5927\u7ea6 30 \u9875\u6587\u672c\u4e2d\u8fdb\u884c\u4e86\u8bb0\u5f55\u3002\u8fd9\u4f7f\u5f97\u5b83\u975e\u5e38\u9002\u5408\u9700\u8981\u4fdd\u6301\u529f\u8017\u7684\u79fb\u52a8\u8bbe\u5907\uff0c\u4f8b\u5982\u624b\u673a\uff0c\u6216\u8005\u5185\u5b58\u975e\u5e38\u5b9d\u8d35\u7684\u5d4c\u5165\u5f0f\u8bbe\u5907\u3002</p> </li> <li> <p>\u5f00\u653e\u534f\u8bae: MQTT \u662f\u4e00\u79cd\u5f00\u653e\u534f\u8bae\uff0c\u56e0\u6b64\u6ca1\u6709\u7248\u7a0e\u3002\u5b83\u4e5f\u662f\u4e00\u4e2a OASIS \u6807\u51c6\u3002</p> </li> </ul>"},{"location":"zh/IOT/MQTT/mqtt/#_1","title":"\u5de5\u4f5c\u8303\u5f0f","text":"<p>MQTT \u662f\u4e00\u79cd\u53d1\u5e03/\u8ba2\u9605\u6d88\u606f\u4f20\u8f93\u534f\u8bae\u3002\u5b83\u4e13\u4e3a\u9700\u8981 \"\u5c0f\u4ee3\u7801\u5360\u7528\" \u6216\u7f51\u7edc\u5e26\u5bbd\u6709\u9650\u7684\u8fdc\u7a0b\u4f4d\u7f6e\u8fde\u63a5\u800c\u8bbe\u8ba1\u3002\u53d1\u5e03/\u8ba2\u9605\u6d88\u606f\u6a21\u5f0f\u9700\u8981\u6d88\u606f\u4ee3\u7406\u3002\u4ee3\u7406\u8d1f\u8d23\u6839\u636e\u6d88\u606f\u7684\u4e3b\u9898\u5c06\u6d88\u606f\u5206\u53d1\u7ed9\u611f\u5174\u8da3\u7684\u5ba2\u6237\u7aef\u3002</p>"},{"location":"zh/IOT/MQTT/mqtt/#_2","title":"\u5173\u952e\u89d2\u8272","text":"<ul> <li> <p>\u53d1\u5e03\u8005: \u53d1\u5e03\u8005\u662f\u8fde\u63a5\u5230\u4ee3\u7406\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u521b\u5efa\u5e76\u53d1\u9001\u6d88\u606f\u3002\u6d88\u606f\u7684\u5185\u5bb9\u5b8c\u5168\u7531\u53d1\u5e03\u8005\u51b3\u5b9a\u3002\u4ee3\u7406\u5c06\u6d88\u606f\u5206\u53d1\u7ed9\u611f\u5174\u8da3\u7684\u8ba2\u9605\u8005\u3002</p> </li> <li> <p>\u8ba2\u9605\u8005: \u8ba2\u9605\u8005\u662f\u8fde\u63a5\u5230\u4ee3\u7406\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8ba2\u9605\u8005\u53ef\u4ee5\u6307\u5b9a\u5b83\u611f\u5174\u8da3\u7684\u4e3b\u9898\u3002\u4ee3\u7406\u5c06\u4ec5\u5206\u53d1\u5bf9\u8ba2\u9605\u8005\u611f\u5174\u8da3\u7684\u6d88\u606f\u3002</p> </li> <li> <p>\u4ee3\u7406: \u4ee3\u7406\u662f\u5904\u7406\u53d1\u5e03\u8005\u548c\u8ba2\u9605\u8005\u4e4b\u95f4\u6d88\u606f\u4f20\u9012\u7684\u4e2d\u95f4\u4ef6\u3002Eclipse Mosquitto \u4ee3\u7406\u662f\u5f00\u6e90\u7684\uff0c\u53ef\u4ee5\u4ece GitHub \u4e0a\u7684 Mosquitto \u9879\u76ee\u9875\u9762\u4e0b\u8f7d\u3002</p> </li> </ul>"},{"location":"zh/IOT/MQTT/mqtt/#mqtt_3","title":"MQTT \u670d\u52a1\u5668","text":""},{"location":"zh/IOT/MQTT/mqtt/#emq-x","title":"EMQ X","text":"<p>EMQ X \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 MQTT \u4ee3\u7406\uff0c\u5b83\u5b9e\u73b0\u4e86 MQTT \u7248\u672c 5.0\u30013.1.1 \u548c 3.1 \u534f\u8bae\u3002\u5b83\u662f\u4e00\u4e2a\u9ad8\u5ea6\u53ef\u6269\u5c55\u7684\u4ee3\u7406\uff0c\u53ef\u4ee5\u5728\u4e91\u4e2d\u8fd0\u884c\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u53ef\u4ee5\u5728 EMQ X \u9879\u76ee\u9875\u9762\u4e0a\u627e\u5230\u3002</p>"},{"location":"zh/IOT/MQTT/mqtt/#mosquitto","title":"Mosquitto","text":"<p>Mosquitto \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u6d88\u606f\u4ee3\u7406\uff0c\u5b83\u5b9e\u73b0\u4e86 MQTT \u7248\u672c 5.0\u30013.1.1 \u548c 3.1 \u534f\u8bae\u3002\u5b83\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u4ee3\u7406\uff0c\u53ef\u4ee5\u5728 Raspberry Pi \u7b49\u4f4e\u529f\u8017\u8bbe\u5907\u4e0a\u8fd0\u884c\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u53ef\u4ee5\u5728 Eclipse Mosquitto \u9879\u76ee\u9875\u9762\u4e0a\u627e\u5230\u3002</p>"},{"location":"zh/IOT/MQTT/mqtt/#hivemq","title":"HiveMQ","text":"<p>HiveMQ \u662f\u4e00\u4e2a\u5546\u4e1a MQTT \u4ee3\u7406\uff0c\u5b83\u5b9e\u73b0\u4e86 MQTT \u7248\u672c 5.0\u30013.1.1 \u548c 3.1 \u534f\u8bae\u3002\u5b83\u662f\u4e00\u4e2a\u9ad8\u5ea6\u53ef\u6269\u5c55\u7684\u4ee3\u7406\uff0c\u53ef\u4ee5\u5728\u4e91\u4e2d\u8fd0\u884c\u3002\u5b83\u662f\u4e00\u4e2a\u5546\u4e1a\u4ea7\u54c1\uff0c\u53ef\u4ee5\u5728 HiveMQ \u7f51\u7ad9\u4e0a\u627e\u5230\u3002</p>"},{"location":"zh/IOT/MQTT/mqtt/#mqtt-","title":"MQTT \u5ba2\u6237\u7aef - (\u53d1\u5e03\u8005\u548c\u8ba2\u9605\u8005)","text":""},{"location":"zh/IOT/MQTT/mqtt/#paho","title":"Paho","text":"<p>Paho \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 MQTT \u5ba2\u6237\u7aef\u5e93\u3002\u5b83\u53ef\u7528\u4e8e\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec Java\u3001JavaScript\u3001C\u3001C++\u3001Python\u3001Go\u3001Ruby \u548c C#\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u53ef\u4ee5\u5728 Paho \u9879\u76ee\u9875\u9762\u4e0a\u627e\u5230\u3002</p>"},{"location":"zh/IOT/MQTT/mqtt/#emq-x_1","title":"EMQ X","text":"<p>EMQ X \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 MQTT \u5ba2\u6237\u7aef\u5e93\u3002\u5b83\u53ef\u7528\u4e8e\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec Java\u3001JavaScript\u3001C\u3001C++\u3001Python\u3001Go\u3001Ruby \u548c C#\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u53ef\u4ee5\u5728 EMQ X \u9879\u76ee\u9875\u9762\u4e0a\u627e\u5230\u3002</p>"},{"location":"zh/IOT/MQTT/mqtt/#mqttjs","title":"MQTT.js","text":"<p>MQTT.js \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 MQTT \u5ba2\u6237\u7aef\u5e93\u3002\u5b83\u53ef\u7528\u4e8e JavaScript\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u53ef\u4ee5\u5728 MQTT.js \u9879\u76ee\u9875\u9762\u4e0a\u627e\u5230\u3002</p>"},{"location":"zh/IOT/MQTT/BROKER/broker/","title":"MQTT \u4ee3\u7406","text":""},{"location":"zh/IOT/MQTT/BROKER/broker/#emq-x","title":"EMQ X \u4ee3\u7406","text":"<p>\u5f85\u66f4\u65b0</p>"},{"location":"zh/IOT/MQTT/CLIENT/client/","title":"MQTT \u5ba2\u6237\u7aef","text":""},{"location":"zh/IOT/MQTT/CLIENT/client/#pahopython","title":"Paho\u5ba2\u6237\u7aef\u7684Python\u5b9e\u73b0","text":"<p>\u8fd9\u662f\u4f7f\u7528Paho-Python\u5e93\u521b\u5efaMQTT\u5ba2\u6237\u7aef\u7684\u793a\u4f8b\u3002\u8981\u8fd0\u884c\uff0c\u60a8\u9700\u8981\u9996\u5148\u5b89\u88c5\u4f9d\u8d56\u9879\u3002\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u4e3a\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u521b\u5efa\u4e24\u4e2a\u811a\u672c\u3002\u5148\u8fd0\u884c\u8ba2\u9605\u8005\uff0c\u7136\u540e\u8fd0\u884c\u53d1\u5e03\u8005\u3002\u60a8\u5e94\u8be5\u770b\u5230\u8ba2\u9605\u8005\u63a5\u6536\u5230\u7684\u6d88\u606f\u3002</p>"},{"location":"zh/IOT/MQTT/CLIENT/client/#_1","title":"\u8ba2\u9605\u8005","text":"<pre><code>import paho.mqtt.client as mqtt\n\n# Define the MQTT broker, topic, username, and password\nbroker_address = \"8.222.194.160\"  # Replace with your MQTT broker address\nport = 1883 # Replace with your MQTT broker port\nheartbeat_interval = 60  # The number of seconds until a heartbeat message is sent\ntopic = \"csw-iot\"\nusername = \"cshwstem\"  # Replace with your MQTT broker username\npassword = \"88888888\"  # Replace with your MQTT broker password\n\n# Callback when the client connects to the broker\ndef on_connect(client, userdata, flags, rc):\n    print(\"Connected with result code \" + str(rc))\n    # Subscribe to the topic when connected\n    client.subscribe(topic)\n\n# Callback when a message is received from the broker\ndef on_message(client, userdata, msg):\n    print(f\"Received message on topic {msg.topic}: {msg.payload.decode()}\")\n\n# Create an MQTT client instance\nclient = mqtt.Client()\n\n# Set username and password\nclient.username_pw_set(username, password)\n\n# Set callback functions\nclient.on_connect = on_connect\nclient.on_message = on_message\n\n# Connect to the broker\nclient.connect(broker_address, port, heartbeat_interval)\n\n# Start the loop to handle network communication, callbacks, and reconnecting\nclient.loop_start()\n\n# Wait for the connection to be established\nwhile not client.is_connected():\n    pass\n\n# Continue the program execution\ntry:\n    # The client will subscribe to the topic in the on_connect callback\n    while True:\n        pass\n\nexcept KeyboardInterrupt:\n    # Disconnect from the broker when the program is interrupted\n    client.disconnect()\n    print(\"Disconnected from the broker\")\n</code></pre>"},{"location":"zh/IOT/MQTT/CLIENT/client/#_2","title":"\u53d1\u5e03\u8005","text":"<pre><code>import paho.mqtt.client as mqtt\n\n# Define the MQTT broker, topic, username, and password\nbroker_address = \"8.222.194.160\"  # Replace with your MQTT broker address\nport = 1883 # Replace with your MQTT broker port\nheartbeat_interval = 60  # The number of seconds until a heartbeat message is sent\ntopic = \"csw-iot\"\nusername = \"cshwstem\"  # Replace with your MQTT broker username\npassword = \"88888888\"  # Replace with your MQTT broker password\n\n# Define the message to be sent\nmessage = \"Hello from Shuaiwen, MQTT!\"\n\n# Callback when the client connects to the broker\ndef on_connect(client, userdata, flags, rc):\n    print(\"Connected with result code \" + str(rc))\n    # Publish the message when connected\n    client.publish(topic, message)\n\n# Callback when the message is published\ndef on_publish(client, userdata, mid):\n    print(\"Message Published\")\n\n# Create an MQTT client instance\nclient = mqtt.Client()\n\n# Set username and password\nclient.username_pw_set(username, password)\n\n# Set callback functions\nclient.on_connect = on_connect\nclient.on_publish = on_publish\n\n# Connect to the broker\nclient.connect(broker_address, port, heartbeat_interval)\n\n# Start the loop to handle network communication, callbacks, and reconnecting\nclient.loop_start()\n\n# Wait for the connection to be established\nwhile not client.is_connected():\n    pass\n\n# Continue the program execution\ntry:\n    # The client will publish the message in the on_connect callback\n    while True:\n        pass\n\nexcept KeyboardInterrupt:\n    # Disconnect from the broker when the program is interrupted\n    client.disconnect()\n    print(\"Disconnected from the broker\")\n</code></pre>"},{"location":"zh/IOT/WSN/wsn/","title":"\u65e0\u7ebf\u4f20\u611f\u7f51\u7edc (WSN)","text":"<p>\u65e0\u7ebf\u4f20\u611f\u7f51\u7edc\u662f\u4e00\u79cd\u7a7a\u95f4\u5206\u5e03\u7684\u81ea\u4e3b\u4f20\u611f\u5668\u7f51\u7edc\uff0c\u7528\u4e8e\u76d1\u6d4b\u7269\u7406\u6216\u73af\u5883\u6761\u4ef6\uff0c\u4f8b\u5982\u6e29\u5ea6\u3001\u58f0\u97f3\u3001\u538b\u529b\u7b49\uff0c\u5e76\u901a\u8fc7\u7f51\u7edc\u534f\u4f5c\u5730\u5c06\u5176\u6570\u636e\u4f20\u9012\u5230\u4e3b\u8981\u4f4d\u7f6e\u3002\u66f4\u73b0\u4ee3\u7684\u7f51\u7edc\u662f\u53cc\u5411\u7684\uff0c\u4e5f\u53ef\u4ee5\u63a7\u5236\u4f20\u611f\u5668\u7684\u6d3b\u52a8\u3002\u65e0\u7ebf\u4f20\u611f\u5668\u7f51\u7edc\u7684\u53d1\u5c55\u662f\u7531\u519b\u4e8b\u5e94\u7528\uff0c\u5982\u6218\u573a\u76d1\u89c6\uff0c\u63a8\u52a8\u7684\uff1b\u4eca\u5929\uff0c\u8fd9\u79cd\u7f51\u7edc\u5728\u8bb8\u591a\u5de5\u4e1a\u548c\u6d88\u8d39\u5e94\u7528\u4e2d\u4f7f\u7528\uff0c\u4f8b\u5982\u5de5\u4e1a\u8fc7\u7a0b\u76d1\u6d4b\u548c\u63a7\u5236\u3001\u673a\u5668\u5065\u5eb7\u76d1\u6d4b\u7b49\u3002</p> <ul> <li> <p> \u4f20\u611f\u5668\u7f51\u7edc\u624b\u518c\uff1a\u7b97\u6cd5\u4e0e\u67b6\u6784\ud83c\udfaf</p> <p>\u4f5c\u8005\uff1aIvan Stojmenovi\u0107</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/MATH/math/#_1","title":"\u6570\u5b66","text":""},{"location":"zh/MATH/math/#_2","title":"\u901a\u7528","text":"<ul> <li> <p> 3Blue1Brown</p> <p>\u4e00\u4e2a\u5173\u4e8e\u6570\u5b66\u548c\u7f16\u7a0b\u7684 YouTube \u9891\u9053\u3002</p> <p>  \u4f20\u9001\u95e8  </p> </li> <li> <p> \u7f16\u7a0b\u4e0d\u96be \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>\u4e2d\u6587\uff0c\u673a\u5668\u5b66\u4e60\u53ef\u89c6\u5316\u7cfb\u5217 1</p> <p>\u9605\u8bfb\u8fdb\u5ea6\uff1a[36/36]</p> <p>\u4ee3\u7801\u5b9e\u8df5\uff1a[12/36]</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u53ef\u89c6\u4e4b\u7f8e \ud83c\udfaf\u2705\ud83c\udfc6</p> <p>\u4e2d\u6587\uff0c\u673a\u5668\u5b66\u4e60\u53ef\u89c6\u5316\u7cfb\u5217 2</p> <p>\u9605\u8bfb\u8fdb\u5ea6\uff1a[36/36]</p> <p>\u4ee3\u7801\u5b9e\u8df5\uff1a[0/36]</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u6570\u5b66\u5143\u7d20</p> <p>\u4e2d\u6587\uff0c\u673a\u5668\u5b66\u4e60\u53ef\u89c6\u5316\u7cfb\u5217 3</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/MATH/math/#_3","title":"\u5206\u6790","text":"<ul> <li> <p> \u5fae\u79ef\u5206\uff0c\u7b2c\u516b\u7248</p> <p>James Stewart\u8457</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/MATH/math/#_4","title":"\u4ee3\u6570","text":"<ul> <li> <p> \u4ea4\u4e92\u5f0f\u7ebf\u6027\u4ee3\u6570</p> <p>Dan Margalit\uff0cJoseph Rabinoff\u8457</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u77e9\u9635\u529b\u91cf</p> <p>\u4e2d\u6587\u7248\uff0c\u673a\u5668\u5b66\u4e60\u53ef\u89c6\u5316\u7cfb\u5217 4</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/MATH/math/#_5","title":"\u51e0\u4f55","text":""},{"location":"zh/MATH/math/#_6","title":"\u6982\u7387\u4e0e\u7edf\u8ba1","text":"<ul> <li> <p> \u7edf\u8ba1\u81f3\u7b80</p> <p>\u4e2d\u6587\u7248\uff0c\u673a\u5668\u5b66\u4e60\u53ef\u89c6\u5316\u7cfb\u5217 5</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/PERCEPTION/perception/","title":"\u611f\u77e5","text":""},{"location":"zh/PROJECT/project/","title":"\u9879\u76ee","text":""},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/","title":"\u4f7f\u7528 MkDocs \u548c Material \u4e3b\u9898\u642d\u5efa\u6280\u672f\u535a\u5ba2","text":""},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_1","title":"\u4ecb\u7ecd","text":"<p>\u5bf9\u4e8e\u6280\u672f\u535a\u5ba2\u800c\u8a00\uff0c\u6211\u4eec\u6216\u8bb8\u4e0d\u9700\u8981\u70ab\u9177\u7684\u52a8\u753b\u6548\u679c\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7b80\u6d01\u3001\u6613\u4e8e\u7ef4\u62a4\u7684\u535a\u5ba2\u6846\u67b6\u3002\u672c\u6587\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 MkDocs \u548c Material \u4e3b\u9898\u642d\u5efa\u4e00\u4e2a\u7b80\u6d01\u3001\u6613\u4e8e\u7ef4\u62a4\u7684\u6280\u672f\u535a\u5ba2\u3002</p> <p>\u9664\u4e86MkDocs\u548cMaterial\u4e3b\u9898\uff0c\u5e02\u9762\u4e0a\u8fd8\u6709\u5176\u4ed6\u9009\u62e9\uff1a</p> <ul> <li> <p>docsify</p> </li> <li> <p>VuePress</p> </li> <li> <p>Docusaurus</p> </li> <li> <p>GitBook</p> </li> <li> <p>Hexo</p> </li> <li> <p>Jekyll</p> </li> <li> <p>Hugo</p> </li> <li> <p>Gatsby</p> </li> <li> <p>DocFX</p> </li> <li> <p>Sphinx</p> </li> </ul>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#mkdocs","title":"MkDocs \u662f\u4ec0\u4e48\uff1f","text":"<p>MkDocs \u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u9879\u76ee\u6587\u6863\u7684\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5c06 Markdown \u6587\u4ef6\u8f6c\u6362\u4e3a\u9759\u6001\u7f51\u7ad9\u3002MkDocs \u7531 Python \u7f16\u5199\uff0c\u4f7f\u7528 Python-Markdown \u89e3\u6790 Markdown \u6587\u4ef6\uff0c\u4f7f\u7528 Pygments \u8bed\u6cd5\u9ad8\u4eae\u4ee3\u7801\uff0c\u4f7f\u7528 Jinja2 \u6a21\u677f\u5f15\u64ce\u6e32\u67d3 Markdown \u6587\u4ef6\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#material","title":"Material \u4e3b\u9898\u662f\u4ec0\u4e48\uff1f","text":"<p>Material \u4e3b\u9898\u662f\u4e00\u4e2a\u57fa\u4e8e Material Design \u7684 MkDocs \u4e3b\u9898\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u6d01\u3001\u73b0\u4ee3\u7684\u754c\u9762\uff0c\u652f\u6301\u591a\u79cd\u8bed\u8a00\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898\u989c\u8272\uff0c\u652f\u6301\u641c\u7d22\u3001\u5bfc\u822a\u3001\u4fa7\u8fb9\u680f\u3001\u6807\u7b7e\u3001\u5206\u7c7b\u3001\u8bc4\u8bba\u3001Google Analytics\u3001Disqus\u3001\u591a\u79cd\u63d2\u4ef6\u7b49\u529f\u80fd\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#mkdocs_1","title":"\u5982\u4f55\u4f7f\u7528MkDocs\uff1f","text":"<p>\u663e\u7136MkDocs\u53ef\u4ee5\u8131\u79bbMaterial\u4e3b\u9898\u5355\u72ec\u4f7f\u7528\uff0c\u4f46\u662fMaterial\u4e3b\u9898\u4f9d\u8d56\u4e8eMkDocs\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u5b89\u88c5MkDocs\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#mkdocs_2","title":"\u5b89\u88c5MkDocs","text":"<p>MkDocs\u53ef\u4ee5\u901a\u8fc7pip\u5b89\u88c5\u3002</p> <pre><code>pip install mkdocs\n</code></pre> <p>\u5982\u679c\u56fd\u5185\u7f51\u7edc\u73af\u5883\u4e0d\u597d\uff0c\u53ef\u4ee5\u4f7f\u7528\u6e05\u534e\u5927\u5b66\u7684\u955c\u50cf\u6e90\u3002</p> <pre><code>pip install -i https://pypi.tuna.tsinghua.edu.cn/simple mkdocs\n</code></pre>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_2","title":"\u5feb\u901f\u4e0a\u624b","text":"<p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u6784\u5efa\u4e00\u4e2a\u7f51\u7ad9\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_3","title":"\u7b2c\u4e00\u6b65\uff1a\u521b\u5efa\u9879\u76ee","text":"<pre><code>mkdocs new my-project\n</code></pre> <p>\u8fd9\u4e00\u6b65\u5c06\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>my-project</code>\u7684\u6587\u4ef6\u5939\uff0c\u8be5\u6587\u4ef6\u5939\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <pre><code>my-project/\n\u251c\u2500\u2500 docs/\n\u2502   \u2514\u2500\u2500 index.md\n\u2514\u2500\u2500 mkdocs.yml\n</code></pre> <p>\u5176\u4e2d<code>docs</code>\u6587\u4ef6\u5939\u7528\u4e8e\u5b58\u653eMarkdown\u6587\u4ef6\uff0c<code>mkdocs.yml</code>\u6587\u4ef6\u7528\u4e8e\u914d\u7f6eMkDocs\u3002Index.md\u662f\u7f51\u7ad9\u7684\u9996\u9875\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5176\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u5185\u5bb9\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_4","title":"\u7b2c\u4e8c\u6b65\uff1a\u542f\u52a8\u7f51\u7ad9","text":"<pre><code>cd my-project\nmkdocs serve\n</code></pre> <p>\u8fd9\u4e00\u6b65\u5c06\u4f1a\u542f\u52a8\u4e00\u4e2a\u672c\u5730\u670d\u52a1\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee<code>http://127.0.0.1:8000/</code>\u67e5\u770b\u7f51\u7ad9\u3002\u8fd9\u4e00\u6b65\u4f7f\u7528\u4e86MkDocs\u7684\u5185\u7f6e\u670d\u52a1\u5668\uff0c\u6bcf\u6b21\u4fee\u6539\u5b8c\uff0c\u70b9\u51fb\u4fdd\u5b58\uff0c\u7f51\u7ad9\u5c31\u4f1a\u81ea\u52a8\u5237\u65b0\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_5","title":"\u7b2c\u4e09\u6b65\uff1a\u6784\u5efa\u7f51\u7ad9","text":"<pre><code>mkdocs build\n</code></pre> <p>\u8fd9\u4e00\u6b65\u5c06\u4f1a\u5728<code>site</code>\u6587\u4ef6\u5939\u4e0b\u751f\u6210\u4e00\u4e2a\u9759\u6001\u7f51\u7ad9\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8be5\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9\u90e8\u7f72\u5230\u670d\u52a1\u5668\u4e0a\u3002</p> <p>Tip</p> <p>\u8bf7\u6ce8\u610f\uff0c\u6700\u597d\u53ea\u4e0a\u4f20\u539f\u59cb\u7684\u6587\u4ef6\u81f3\u670d\u52a1\u5668\uff0c\u7136\u540e\u5728\u670d\u52a1\u5668\u4e0a\u6784\u5efa\u7f51\u7ad9\uff0c\u56e0\u4e3aMkDocs\u7684\u7248\u672c\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5982\u679c\u672c\u5730\u6784\u5efa\u7684\u7f51\u7ad9\u4e0a\u4f20\u81f3\u670d\u52a1\u5668\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f51\u7ad9\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u3002\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fGit\uff0c\u53ef\u4ee5\u5728<code>.gitignore</code>\u6587\u4ef6\u4e2d\u6dfb\u52a0<code>site</code>\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5c06<code>site</code>\u6587\u4ef6\u5939\u4e0a\u4f20\u81f3\u670d\u52a1\u5668\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#mkdocs_3","title":"\u914d\u7f6eMkDocs","text":"<p>MkDocs\u7684\u914d\u7f6e\u6587\u4ef6\u662f<code>mkdocs.yml</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5176\u4e2d\u914d\u7f6e\u7f51\u7ad9\u7684\u540d\u79f0\u3001\u63cf\u8ff0\u3001\u4e3b\u9898\u3001\u5bfc\u822a\u680f\u3001\u4fa7\u8fb9\u680f\u3001\u63d2\u4ef6\u7b49\u3002</p> <pre><code>site_name: My Project\nsite_description: A short description of my project.\nsite_author: Your Name\nsite_url: https://example.com\nsite_dir: site\nsite_favicon: images/favicon.ico\n# ...\n</code></pre> <p>Tip</p> <p>\u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u6682\u65f6\u6309\u4e0b\u4e0d\u52a8\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528material\u4e3b\u9898\uff0c\u76f4\u63a5\u57fa\u4e8ematerial\u4e3b\u9898\u6a21\u677f\u8fdb\u884c\u914d\u7f6e\u4fee\u6539\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_6","title":"\u5199\u4f5c","text":"<p>\u5199\u4f5c\u6587\u4ef6\u7684\u683c\u5f0f\u662fMarkdown\uff0c\u6211\u4eec\u53ef\u4ee5\u5728<code>docs</code>\u6587\u4ef6\u5939\u4e0b\u521b\u5efaMarkdown\u6587\u4ef6\uff0c\u7136\u540e\u5728<code>mkdocs.yml</code>\u4e2d\u914d\u7f6e\u5bfc\u822a\u680f\u548c\u4fa7\u8fb9\u680f\u3002\u9ed8\u8ba4\u7684\u6587\u4ef6\u5b58\u653e\u4f4d\u7f6e\u662f<code>docs</code>\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>docs_dir</code>\u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u4f4d\u7f6e\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#material_1","title":"\u5982\u4f55\u4f7f\u7528Material\u4e3b\u9898\uff1f","text":"<p>\u53ef\u4ee5\u53c2\u8003Material\u4e3b\u9898\u6587\u6863\uff0c\u5176\u4e2d\u6709\u6781\u4e3a\u8be6\u7ec6\u7684\u4f7f\u7528\u8bf4\u660e\u3002\u8be5\u6587\u6863\u672c\u8eab\u5c31\u662f\u4f7f\u7528Material\u4e3b\u9898\u642d\u5efa\u7684\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u8003\uff0c\u975e\u5e38\u503c\u5f97\u53c2\u8003\u5b66\u4e60\u3002</p> <p>Info</p> <p>Material \u4e3b\u9898\u7684\u6587\u6863\u597d\u770b\u662f\u597d\u770b\uff0c\u5c24\u5176\u662f\u90a3\u4e2alanding page\uff0c\u771f\u7684\u60f3\u8981\uff0c\u4f46\u662f\u90a3\u4e2alanding page\u5e94\u8be5\u662f\u6210\u4e3asponsor \u624d\u80fd\u62ff\u5230\u8d44\u6e90\uff0c\u7406\u8bba\u4e0a\u6765\u8bf4\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a\u7c7b\u4f3c\u7684\uff0c\u5728\u5bf9\u5e94\u7684\u9875\u9762\u4f7f\u7528override\uff0c\u4f46\u662f\u76ee\u524d\u6211\u6ca1\u6709\u8fd9\u4e2a\u6c34\u5e73\uff0c\u6240\u4ee5\u6682\u65f6\u5148\u4e0d\u5199\u4e86\u3002 \u53e6\u5916\uff0c\u6ca1\u6709\u627e\u5230\u597d\u7528\u7684\u5207\u6362\u8bed\u8a00\u7684\u53c2\u8003\uff0c\u6211\u76ee\u524d\u65e0\u6cd5\u505a\u5230\u505c\u7559\u5728\u5f53\u524d\u9875\u9762\uff0c\u5207\u6362\u8bed\u8a00\u540e\u4f1a\u8df3\u8f6c\u5230\u9996\u9875\uff0c\u8fd9\u4e2a\u95ee\u9898\u6682\u65f6\u65e0\u6cd5\u89e3\u51b3\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#material_2","title":"\u5b89\u88c5Material\u4e3b\u9898","text":"<p>Material\u4e3b\u9898\u53ef\u4ee5\u901a\u8fc7pip\u5b89\u88c5\u3002</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>\u5982\u679c\u56fd\u5185\u7f51\u7edc\u73af\u5883\u4e0d\u597d\uff0c\u53ef\u4ee5\u4f7f\u7528\u6e05\u534e\u5927\u5b66\u7684\u955c\u50cf\u6e90\u3002</p> <pre><code>pip install -i https://pypi.tuna.tsinghua.edu.cn/simple mkdocs-material\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u5b9e\u65f6\u53cd\u9988\uff0c\u53ef\u4ee5\u5148\u628a\u9879\u76ee\u8dd1\u8d77\u6765\uff1a</p> <pre><code>mkdocs serve\n</code></pre> <p>\u5982\u679c\u8fd0\u884c\u4ee5\u4e0a\u4ee3\u7801\u62a5\u9519\uff0c\u63d0\u793a\u7f3a\u5c11\u67d0\u4e2a\u6a21\u5757\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\u3002\u6211\u9047\u5230\u7684\u95ee\u9898\u662frss, minify, static-i18n\u8fd9\u4e09\u4e2a\u6a21\u5757\u6ca1\u6709\u5b89\u88c5\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\u4e86\u8fd9\u4e09\u4e2a\u6a21\u5757\u3002</p> <pre><code>pip install mkdocs-rss-plugin\n</code></pre> <pre><code>pip install mkdocs-minify-plugin\n</code></pre> <pre><code>pip install mkdocs-static-i18n\n</code></pre>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#material_3","title":"\u914d\u7f6eMaterial\u4e3b\u9898","text":"<p>\u8fd9\u4e2a\u90e8\u5206\u5e94\u8be5\u662f\u82b1\u8d39\u65f6\u95f4\u548c\u5fc3\u601d\u6700\u591a\u7684\u90e8\u5206\uff0c\u56e0\u4e3aMaterial\u4e3b\u9898\u63d0\u4f9b\u4e86\u975e\u5e38\u591a\u7684\u914d\u7f6e\u9009\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u8fdb\u884c\u914d\u7f6e\u3002\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u5907\u6ce8\u3002</p> <p><pre><code># \u9879\u76ee\u4fe1\u606f\nsite_name: Eureka! # \u9879\u76ee\u540d\u79f0\nsite_url: https://localhost:8000/ # \u6211\u5728nginx\u4e2d\u4f7f\u7528\u7684\u662f8000\u7aef\u53e3\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f80\u7aef\u53e3\uff0c\u53ef\u4ee5\u76f4\u63a5\u5199\u6210https://localhost/\u3002\nsite_author: Shuaiwen Cui # \u4f5c\u8005\nsite_description: &gt;- # \u9879\u76ee\u63cf\u8ff0\n  Welcome to Shaun's rabbit hole. This site serves as a personal knowledge base for me to record my thoughts and ideas. It is also a place for me to share my knowledge and experience with the world. I hope you find something useful here. \n\n# \u4ee3\u7801\u4ed3\u5e93\u4fe1\u606f\nrepo_name: Shuaiwen-Cui/Infinity # \u4ed3\u5e93\u540d\u79f0\nrepo_url: https://github.com/Shuaiwen-Cui/Infinity.git/ # \u4ed3\u5e93\u5730\u5740\n\n# \u7248\u6743\u4fe1\u606f\ncopyright: Copyright &amp;copy; 2023 ~ now | \ud83d\ude80 Shuaiwen Cui (Shaun)\n\n# \u914d\u7f6e\ntheme:\n  custom_dir: material/overrides # \u81ea\u5b9a\u4e49\u6587\u4ef6\u5939\uff0c\u5bf9\u4e8e\u4e2a\u522b\u9875\u9762\uff0c\u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u4e3b\u9898\u7684\u9ed8\u8ba4\u6837\u5f0f\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u7528\u91cc\u9762\u7684\u6587\u4ef6\u8986\u76d6\u4e3b\u9898\u7684\u9ed8\u8ba4\u6587\u4ef6\u3002\u5177\u4f53\u53ef\u4ee5\u53c2\u8003material\u5b98\u65b9\u6587\u6863\u3002\n  name: material # \u4e3b\u9898\u540d\u79f0\uff0cMaterial\u5df2\u7ecf\u662f\u6700\u4f18\u79c0\u7684\u9009\u62e9\u4e86\uff0c\u76f8\u4fe1\u6211\u3002\n  logo: static/images/logo.png # logo \u56fe\u7247\n  language: en # \u9ed8\u8ba4\u8bed\u8a00\n  features: # \u529f\u80fd  \n    - announce.dismiss # \u53ef\u4ee5\u53c9\u6389\u516c\u544a\u7684\u529f\u80fd\n    - content.action.edit # \u7f16\u8f91\u6309\u94ae\uff0c\u4f3c\u4e4e\u6ca1\u5565\u7528\n    - content.action.view # \u67e5\u770b\u6309\u94ae\uff0c\u4f3c\u4e4e\u6ca1\u5565\u7528\n    - content.code.annotate # \u4ee3\u7801\u6ce8\u91ca\uff0c\u5177\u4f53\u4e0d\u6e05\u695a\n    - content.code.copy # \u590d\u5236\u4ee3\u7801\u6309\u94ae\n    # - content.code.select # \u9009\u62e9\u4ee3\u7801\u6309\u94ae\n    # - content.tabs.link # \u94fe\u63a5\u6807\u7b7e\n    - content.tooltips # \u4e0d\u592a\u6e05\u695a\u5462\u8fd9\u4e2a\n    # - header.autohide # \u81ea\u52a8\u9690\u85cfheader\n    - navigation.expand # \u9ed8\u8ba4\u5c55\u5f00\u5bfc\u822a\u680f\n    - navigation.footer # \u5e95\u90e8\u5bfc\u822a\u680f\n    - navigation.indexes # \u7d22\u5f15\u6309\u94ae\u53ef\u4ee5\u76f4\u63a5\u89e6\u53d1\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u53ea\u80fd\u70b9\u51fb\u5176\u4e0b\u5c5e\u9009\u9879\u6d4f\u89c8\uff0c\u8fd9\u4e2a\u529f\u80fd\u53ef\u4ee5\u7ed9\u5bf9\u5e94\u7684section\u63d0\u4f9b\u5f88\u597d\u7684\u9884\u89c8\u548c\u5bfc\u822a\u529f\u80fd\n    # - navigation.instant # \u77ac\u95f4\u52a0\u8f7d - \u5982\u679c\u8fd9\u4e2a\u5f00\u7740\uff0c\u90a3\u4e48\u8bed\u8a00\u5207\u6362\u540e\u5c31\u4f1a\u8df3\u8f6c\u81f3\u9996\u9875\uff0c\u6240\u4ee5\u6211\u5173\u6389\u4e86\n    - navigation.instant.prefetch # \u9884\u52a0\u8f7d\n    - navigation.instant.progress # \u8fdb\u5ea6\u6761\n    - navigation.path # \u5bfc\u822a\u8def\u5f84\uff0c \u76ee\u524d\u597d\u50cf\u6ca1\u5565\u7528\n    # - navigation.prune # \u53ea\u6784\u5efa\u53ef\u89c1\u7684\u9875\u9762\n    - navigation.sections # \u5bfc\u822a\u680f\u7684section\n    - navigation.tabs # \u9876\u7ea7\u7d22\u5f15\u88ab\u4f5c\u4e3atab\n    - navigation.tabs.sticky # tab\u59cb\u7ec8\u53ef\u89c1\n    - navigation.top # \u5f00\u542f\u9876\u90e8\u5bfc\u822a\u680f\n    - navigation.tracking # \u5bfc\u822a\u680f\u8ddf\u8e2a\n    - search.highlight # \u641c\u7d22\u9ad8\u4eae\n    - search.share # \u641c\u7d22\u5206\u4eab\n    - search.suggest # \u641c\u7d22\u5efa\u8bae\n    - toc.follow # \u76ee\u5f55\u8ddf\u8e2a-\u9875\u9762\u53f3\u4fa7\u7684\u5c0f\u76ee\u5f55\n    # - toc.integrate # \u76ee\u5f55\u8ddf\u8e2a\u96c6\u6210\u5230\u5de6\u4fa7\u5927\u76ee\u5f55\u4e2d\n  palette:\n    - media: \"(prefers-color-scheme)\" # \u4e3b\u9898\u989c\u8272\n      scheme: slate\n      primary: black\n      accent: indigo\n      toggle:\n        icon: material/link\n        name: Switch to light mode\n    - media: \"(prefers-color-scheme: light)\" # \u6d45\u8272\n      scheme: default\n      primary: indigo\n      accent: indigo\n      toggle:\n        icon: material/toggle-switch\n        name: Switch to dark mode\n    - media: \"(prefers-color-scheme: dark)\" # \u6df1\u8272\n      scheme: slate\n      primary: black\n      accent: indigo\n      toggle:\n        icon: material/toggle-switch-off\n        name: Switch to system preference\n  font: # \u5b57\u4f53\uff0c\u5927\u6982\u7387\u4e0d\u9700\u8981\u6362\n    text: Roboto\n    code: Roboto Mono\n  favicon: assets/favicon.png # \u7f51\u7ad9\u56fe\u6807 \u4f3c\u4e4e\u4e0d\u9700\u8981\u7ba1\n  icon: # \u4e00\u4e9b\u7528\u5230\u7684icon\n    logo: logo\n    previous: fontawesome/solid/angle-left\n    next: fontawesome/solid/angle-right\n    tag:\n      default-tag: fontawesome/solid/tag\n      hardware-tag: fontawesome/solid/microchip\n      software-tag: fontawesome/solid/laptop-code\n\n# Plugins\nplugins:\n  - tags # \u6807\u7b7e\u529f\u80fd\u63d2\u4ef6\n  - blog # \u535a\u5ba2\u529f\u80fd\u63d2\u4ef6\n  - rss: # rss\u8ba2\u9605\u63d2\u4ef6 - \u4e0d\u592a\u61c2\u662f\u5e72\u561b\u7684\u76ee\u524d\n      match_path: blog/posts/.* \n      date_from_meta:\n        as_creation: date\n      categories:\n        - categories\n        - tags \n  # - social # \u76ee\u524d\u6211\u5f00\u542f\u4f1a\u62a5\u9519\uff0c\u8fd8\u6ca1\u7814\u7a76\u900f \n  - search: # \u641c\u7d22\u63d2\u4ef6\n      separator: '[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&amp;[lg]t;|(?!\\b)(?=[A-Z][a-z])' # \u5206\u9694\u7b26\n  - minify: # \u538b\u7f29\u63d2\u4ef6\n      minify_html: true\n  # - privacy # \u9690\u79c1\u63d2\u4ef6\n  - i18n: # \u591a\u8bed\u8a00\u63d2\u4ef6\n      docs_structure: suffix # \u6284\u6765\u7684\uff0c\u4e0d\u592a\u61c2\n      fallback_to_default: true # \u6284\u6765\u7684\uff0c\u4e0d\u592a\u61c2\n      reconfigure_material: true # \u6284\u6765\u7684\uff0c\u4e0d\u592a\u61c2\n      reconfigure_search: true # \u6284\u6765\u7684\uff0c\u4e0d\u592a\u61c2\n      languages: # \u591a\u8bed\u8a00\u914d\u7f6e - \u9700\u8981\u5c0f\u5fc3\u4e00\u70b9\n        - locale: en\n          default: true # \u9ed8\u8ba4\u8bed\u8a00\n          name: English\n          build: true # \u662f\u5426\u6784\u5efa\n          # site_name: Infinity\n        - locale: zh\n          name: \u7b80\u4f53\u4e2d\u6587\n          build: true\n          nav_translations: # \u5bfc\u822a\u680f\u7ffb\u8bd1\uff0c\u4e0d\u53ef\u4ee5\u6709\u7f29\u8fdb\n            HOME: \u9996\u9875\n            ABOUT: \u5173\u4e8e\n            SPONSORSHIP: \u8d5e\u52a9\n            CS: \u8ba1\u7b97\u673a\n            CODING: \u7f16\u7a0b\n            EMBEDDED-SYS: \u5d4c\u5165\u5f0f\u7cfb\u7edf\n            DSP: \u6570\u5b57\u4fe1\u53f7\u5904\u7406\n            PERCEPTION: \u611f\u77e5\n            ACTUATION: \u6267\u884c\n            IOT: \u7269\u8054\u7f51\n            CLOUD: \u4e91\n            CLOUD-TECH: \u4e91\u6280\u672f\n            HANDS-ON: \u4e0a\u624b\u5b9e\u8df5\n            Have A Server: \u62e5\u6709\u4e00\u53f0\u670d\u52a1\u5668\n            Server Configuration: \u670d\u52a1\u5668\u914d\u7f6e\n            Get A Domain Name: \u83b7\u5f97\u4e00\u4e2a\u57df\u540d\n            AI: \u4eba\u5de5\u667a\u80fd\n            RESEARCH: \u7814\u7a76\n            PROJECT: \u9879\u76ee\n# Hooks - \u8bb2\u771f\uff0c\u8fd9\u4e2a\u4e1c\u897f\u6211\u8fd8\u6ca1\u641e\u61c2\n# hooks:\n#   - material/overrides/hooks/shortcodes.py\n#   - material/overrides/hooks/translations.py\n\n# \u989d\u5916\u914d\u7f6e\u9879\nextra:\n  generator: false # \u662f\u5426\u663e\u793a\u751f\u6210\u5668\n  status: # \u4e0d\u662f\u5f88\u61c2\u6709\u4ec0\u4e48\u7528\n    new: Recently added\n    deprecated: Deprecated\n  analytics: # \u5206\u6790\u5de5\u5177\uff0c \u6211\u53cd\u6b63\u6ca1\u7528\u5230\n    provider: google\n    property: !ENV GOOGLE_ANALYTICS_KEY\n    feedback: # feedback form\n      title: Was this page helpful?\n      ratings:\n        - icon: material/thumb-up-outline\n          name: This page was helpful\n          data: 1\n          note: &gt;-\n            Thanks for your feedback!\n        - icon: material/thumb-down-outline\n          name: This page could be improved\n          data: 0\n          note: &gt;- \n            Thanks for your feedback! Help us improve this page by\n            using our &lt;a href=\"...\" target=\"_blank\" rel=\"noopener\"&gt;feedback form&lt;/a&gt;.\n  # alternate: # \u7531\u4e0a\u9762\u90a3\u4e2ai18n\u63d2\u4ef6\u63d0\u4f9b\u7684\u591a\u8bed\u8a00\u529f\u80fd\uff0c\u8fd9\u4e2a\u4f3c\u4e4e\u5c31\u4e0d\u9700\u8981\u4e86\u3002 \u8fd9\u4e2a\u662f\u5b98\u65b9\u6587\u6863\u7684\u4f8b\u5b50\uff0c\u4f46\u662f\u5b98\u65b9\u6ca1\u6709\u63d0\u4f9b\u5f88\u8be6\u7ec6\u7684\u4f8b\u5b50\uff0c\u6240\u4ee5\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u7528\u3002\n  #   - name: English\n  #     link: /en/ \n  #     lang: en\n  #   - name: Chinese\n  #     link: /zh/\n  #     lang: zh\n  social: # \u793e\u4ea4\u5a92\u4f53\n    - icon: fontawesome/solid/house\n      link: http://www.cuishuaiwen.com/\n    - icon: fontawesome/brands/github\n      link: https://github.com/Shuaiwen-Cui\n    - icon: fontawesome/brands/linkedin\n      link: https://www.linkedin.com/in/shaun-shuaiwen-cui/\n    - icon: fontawesome/brands/researchgate\n      link: https://www.researchgate.net/profile/Shuaiwen-Cui\n    - icon: fontawesome/brands/orcid\n      link: https://orcid.org/0000-0003-4447-6687\n    - icon: fontawesome/brands/twitter\n      link: https://twitter.com/ShuaiwenC\n  tags: # \u81ea\u5b9a\u4e49\u6807\u7b7e\n    Default: default-tag\n    Hardware: hardware-tag\n    Software: software-tag\n  # consent: # \u5f81\u6c42\u540c\u610f Cookie\n  #   title: Cookie consent\n  #   description: &gt;- \n  #     We use cookies to recognize your repeated visits and preferences, as well\n  #     as to measure the effectiveness of our documentation and whether users\n  #     find what they're searching for. With your consent, you're helping us to\n  #     make our documentation better.\n\n# \u6269\u5c55\nmarkdown_extensions: # markdown extensions\n  - abbr\n  - admonition\n  - attr_list\n  - def_list\n  - footnotes\n  - md_in_html\n  - toc:\n      permalink: true\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.details\n  - pymdownx.emoji:\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.keys\n  - pymdownx.magiclink:\n      normalize_issue_symbols: true\n      repo_url_shorthand: true\n      user: squidfunk\n      repo: mkdocs-material\n  - pymdownx.mark\n  - pymdownx.smartsymbols\n  - pymdownx.snippets:\n      auto_append:\n        - includes/mkdocs.md\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n  - pymdownx.tabbed:\n      alternate_style: true\n      combine_header_slug: true\n      slugify: !!python/object/apply:pymdownx.slugs.slugify\n        kwds:\n          case: lower\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.tilde\n\n# \u5bfc\u822a\u6811 - \u8bf7\u6309\u7167\u6211\u7684\u505a\u6cd5\u6765\u505a\uff0c\u5426\u5219\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\u5f15\u53f7\u53ef\u4ee5\u7701\u7565\u3002\u5f00\u5934\u7684\u70b9\u548c\u659c\u6760\u4e5f\u53ef\u4ee5\u7701\u7565 (\"./HOME/about.md\" \u6216 Home/about.md) \u3002\u6ce8\u610f\uff0c\u5bfc\u822a\u6811\u8fd9\u91cc\u7684\u6587\u4ef6\u540d\u662f filename.md \u8fd9\u6837\u7684\uff0c\u4f46\u5728\u6587\u4ef6\u5939\u4e2d\uff0c\u5b83\u5b9e\u9645\u4e0a\u88ab\u547d\u540d\u4e3a filename.en.md \u548c filename.zh.md\u3002\u6211\u731c\u6d4b\u9ed8\u8ba4\u662f\u82f1\u6587\uff0c\u6240\u4ee5, index.en.md \u548c index.md \u662f\u4e00\u6837\u7684\u3002i18n\u63d2\u4ef6\u4f1a\u81ea\u52a8\u8bc6\u522b\u6587\u4ef6\u540d\uff0c\u7136\u540e\u6839\u636e\u6587\u4ef6\u540d\u7684\u540e\u7f00\u6765\u5207\u6362\u8bed\u8a00\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u6dfb\u52a0\u4e00\u4e2a\u65b0\u9875\u9762\uff0c\u4f60\u9700\u8981\u6dfb\u52a0\u4e24\u4e2a\u6587\u4ef6\uff0c\u4e00\u4e2a\u662f filename.en.md\uff0c\u53e6\u4e00\u4e2a\u662f filename.zh.md\u3002\u5176\u4e2d\uff0cfilename.en.md \u4e5f\u53ef\u4ee5\u88ab\u547d\u540d\u4e3a filename.md\uff0c\u4f46\u662f filename.zh.md \u4e0d\u80fd\u88ab\u547d\u540d\u4e3a filename.md\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u8bc6\u522b\u3002\nnav: \n  - HOME: \n      - \"index.md\"\n      - ABOUT: \"./HOME/about.md\"\n      - SPONSORSHIP: \"./HOME/sponsorship.md\"\n  - CS: \n      - \"./CS/CS.md\"\n  - CODING: \n      - \"./CODING/coding.md\"\n  - EMBEDDED-SYS: \n      - \"./EMBEDDED-SYS/embedded-sys.md\"\n  - DSP: \n      - \"./DSP/dsp.md\"\n  - PERCEPTION: \n      - \"./PERCEPTION/perception.md\"\n  - ACTUATION: \n      - \"./ACTUATION/actuation.md\"\n      - ROS: \"./ACTUATION/ROS/ros.md\"\n  - IOT: \n      - \"./IOT/iot.md\"\n  - CLOUD: \n      - \"./CLOUD/cloud.md\"\n      - CLOUD-TECH: \"./CLOUD/CLOUD-TECH/cloud-tech.md\"\n      - HANDS-ON:\n          - Have A Server: \"./CLOUD/HANDS-ON/001-HAVE-A-SERVER/have-a-server.md\"\n          - Server Configuration: \"./CLOUD/HANDS-ON/002-SERVER-CONFIG/server-config.md\"\n          - Get A Domain Name: \"./CLOUD/HANDS-ON/003-DOMAIN-NAME/domain-name.md\"\n  - AI: \n      - \"./AI/ai.md\"\n  - RESEARCH: \n      - \"./RESEARCH/research.md\"\n  - PROJECT: \n      - \"./PROJECT/project.md\"\n      - TECH-BLOG: \"./PROJECT/TECH-BLOG/mkdocs_and_material.md\"\n</code></pre> \u641e\u5b9a\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u4f60\u7684\u9875\u9762\u5e94\u8be5\u5c31\u4f1a\u50cf\u6211\u7684\u4e00\u6837\u597d\u770b\u4e86\u3002\u4e8b\u5b9e\u4e0a\uff0c\u9664\u4e86\u5916\u89c2\uff0c\u6240\u6709\u7684\u914d\u7f6e\u529f\u80fd\u57fa\u672c\u4e0a\u90fd\u5728\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u8fdb\u884c\u4fee\u6539\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_7","title":"\u5199\u4f5c\u5185\u5bb9","text":"<p>\u3002</p> <p>Tip</p> <p>\u53ef\u4ee5\u53c2\u8003material\u4e3b\u9898\u6587\u6863\u4e2d\u7684\u5199\u4f5c\u5185\u5bb9\u90e8\u5206\uff0c\u975e\u5e38\u591a\u503c\u5f97\u501f\u9274\u7684\u5185\u5bb9  </p> <p>\u4ee5\u4e0b\u53e5\u6cd5\u53ef\u4ee5\u91cd\u70b9\u5b66\u4e60\uff1a</p> <ul> <li> <p>Note <pre><code>!!! note\n    This is a note.\n</code></pre></p> </li> <li> <p>Tip <pre><code>!!! tip\n    This is a tip.\n</code></pre></p> </li> <li> <p>Warning <pre><code>!!! warning\n    This is a warning.\n</code></pre></p> </li> <li> <p>Danger <pre><code>!!! danger\n    This is a danger.\n</code></pre></p> </li> <li> <p>Success <pre><code>!!! success\n    This is a success.\n</code></pre></p> </li> <li>Info <pre><code>!!! info\n    This is an info.\n</code></pre></li> <li>Quote <pre><code>!!! quote\n    This is a quote.\n</code></pre></li> <li>Question <pre><code>??? question \"What is the meaning of life, the universe, and everything?\"\n    42.\n</code></pre></li> </ul> <ul> <li>Note</li> </ul> <p>Note</p> <p>This is a note.</p> <ul> <li>Tip</li> </ul> <p>Tip</p> <p>This is a tip.</p> <ul> <li>Warning</li> </ul> <p>Warning</p> <p>This is a warning.</p> <ul> <li>Danger</li> </ul> <p>Danger</p> <p>This is a danger.</p> <ul> <li>Success</li> </ul> <p>Success</p> <p>This is a success.</p> <ul> <li>Info</li> </ul> <p>Info</p> <p>This is an info.</p> <ul> <li>Quote</li> </ul> <p>Quote</p> <p>This is a quote.</p> <ul> <li>Question</li> </ul> What is the meaning of life, the universe, and everything? <p>Nothing.</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#-","title":"\u4e0a\u4f20\u5e76\u90e8\u7f72\u5230\u670d\u52a1\u5668 - \u7b2c\u4e00\u79cd\u65b9\u6cd5 - \u76f4\u63a5\u4e0a\u4f20","text":""},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_8","title":"\u4e0a\u4f20","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>scp</code>\u547d\u4ee4\u5c06\u7f51\u7ad9\u4e0a\u4f20\u81f3\u670d\u52a1\u5668\u3002</p> <pre><code>scp -r &lt;local directory&gt; &lt;username&gt;@&lt;server address&gt;:&lt;remote directory&gt;\n</code></pre>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_9","title":"\u90e8\u7f72","text":"<pre><code>cd &lt;remote directory&gt;\nmkdocs build\n</code></pre>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#nginx","title":"\u6302\u8f7d\u5230nginx","text":"<p>\u9996\u5148\u5982\u679c\u4f60\u6ca1\u6709\u5b89\u88c5nginx\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\u3002</p> <pre><code>sudo apt-get install nginx\n</code></pre> <p>\u7136\u540e\u8fdb\u5165nginx\u7684\u914d\u7f6e\u6587\u4ef6\u5939\u3002</p> <pre><code>sudo vim /etc/nginx/sites-available/default\n</code></pre> <p>\u8fdb\u5165\u8be5\u914d\u7f6e\u6587\u4ef6\uff0c\u6309\u201ci\u201d\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f\uff0c\u7136\u540e\u5c06\u4ee5\u4e0b\u5185\u5bb9\u590d\u5236\u8fdb\u53bb\u3002</p> <p><pre><code>server {\n    listen 80; # \u9ed8\u8ba4\u4e3a80\u7aef\u53e3\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f80\u7aef\u53e3\uff0c\u53ef\u4ee5\u76f4\u63a5\u5199\u6210https://localhost/\u3002\u6211\u4f7f\u7528\u7684\u662f8000\u7aef\u53e3\uff0c\u8bbf\u95ee\u7684\u65f6\u5019\u5bf9\u5e94\u7684\u5730\u5740\u662fhttps://localhost:8000/\u3002\n    server_name &lt;server address&gt;; # \u968f\u4fbf\n    root &lt;remote directory&gt;/site; # \u627e\u5230site\u6587\u4ef6\u5939\n    index index.html index.htm;\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n</code></pre> \u7136\u540e\u6309\u201cesc\u201d\u9000\u51fa\u7f16\u8f91\u6a21\u5f0f\uff0c\u7136\u540e\u8f93\u5165\u201c:wq\u201d\u4fdd\u5b58\u5e76\u9000\u51fa\u3002</p> <p>\u6700\u540e\u91cd\u542fnginx\u3002</p> <pre><code>sudo nginx -t # test\nsudo service nginx restart\n</code></pre>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#-git-github","title":"\u4e0a\u4f20\u5e76\u90e8\u7f72\u5230\u670d\u52a1\u5668 - \u7b2c\u4e8c\u79cd\u65b9\u6cd5 - \u4f7f\u7528Git &amp; Github \u5e76\u90e8\u7f72\u81f3\u670d\u52a1\u5668 \uff08\u63a8\u8350\uff09","text":"<p>\u5982\u679c\u4f60\u719f\u6089Git\u548cGithub\uff0c\u90a3\u4e48\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u66f4\u52a0\u65b9\u4fbf\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u4f7f\u7528Git\u7ba1\u7406\u7f51\u7ad9\uff0c\u7136\u540e\u5c06\u7f51\u7ad9\u4e0a\u4f20\u81f3Github\uff0c\u7136\u540e\u5728\u670d\u52a1\u5668\u4e0a\u4f7f\u7528Git\u62c9\u53d6\u7f51\u7ad9\uff0c\u7136\u540e\u90e8\u7f72\u3002</p> <p>\u6211\u5047\u8bbe\u4f60\u7684\u672c\u5730\u5e93\u548c\u8fdc\u7a0b\u5e93\u90fd\u5df2\u7ecf\u5efa\u7acb\u597d\u4e86\uff0c\u5e76\u4e14\u5df2\u7ecf\u5173\u8054\u597d\u4e86\uff0c\u5982\u679c\u6ca1\u6709\u5efa\u7acb\u597d\uff0c\u53ef\u4ee5\u53c2\u8003GitHub Docs\u3002</p> <p>Tip</p> <p>\u6ce8\u610f\uff0c\u6700\u597d\u5728\u670d\u52a1\u5668\u4e0a\u6784\u5efa\u7f51\u7ad9\uff0c\u56e0\u4e3aMkDocs\u7684\u7248\u672c\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5982\u679c\u672c\u5730\u6784\u5efa\u7684\u7f51\u7ad9\u4e0a\u4f20\u81f3\u670d\u52a1\u5668\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f51\u7ad9\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u3002\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fGit\uff0c\u53ef\u4ee5\u5728<code>.gitignore</code>\u6587\u4ef6\u4e2d\u6dfb\u52a0<code>site</code>\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5c06<code>site</code>\u6587\u4ef6\u5939\u4e0a\u4f20\u81f3\u670d\u52a1\u5668\u3002</p> <pre><code># Ignore site directory\nsite/\n</code></pre>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_10","title":"\u4e0a\u4f20","text":"<p>\u4f9d\u6b21\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002master\u5982\u679c\u4e0d\u884c\uff0c\u53ef\u4ee5\u6362\u6210main\u3002</p> <p><pre><code>git add .\ngit commit -m \"update\"\ngit push origin master  # \u6216\u8005\u662f git push origin main\n</code></pre> \u5982\u679c\u4f60\u60f3\u4f7f\u7528github pages\u6258\u7ba1\u4f60\u7684\u7f51\u7ad9\uff0c\u53ef\u4ee5\u53c2\u8003GitHub Docs\u3002\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u7136\u540e\u5728github\u4e0a\u9009\u62e9master branch\u3002(\u6216\u8005\u662fmain branch)</p> <pre><code>mkdocs gh-deploy # \u8fd9\u662fmkdocs\u63d0\u4f9b\u7684\u4e00\u4e2a\u547d\u4ee4\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u7f51\u7ad9\u90e8\u7f72\u5230github pages\u4e0a\n</code></pre> <p>Tip</p> <p>\u6211\u672c\u4eba\u4f7f\u7528\u4e00\u4e2a\u811a\u672c\u6587\u4ef6\uff0c\u4e00\u952e\u4e0a\u4f20\u5e76\u90e8\u7f72\uff0c\u975e\u5e38\u65b9\u4fbf\u3002\u4f60\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u811a\u672c\u6587\u4ef6\uff08upload.sh\uff09\uff0c\u7136\u540e\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u8fdb\u884c\u4fee\u6539\u3002\u5728\u811a\u672c\u6240\u5728\u7684\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4e00\u952e\u4e0a\u4f20\u5e76\u90e8\u7f72\u4e86\u3002</p> <pre><code>./upload.sh # for Windows\n</code></pre> <p>or</p> <pre><code>sh upload.sh # for Linux\n</code></pre> <p>or</p> <pre><code>bash upload.sh # for Linux\n</code></pre>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_11","title":"\u90e8\u7f72","text":"<p>\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u9996\u5148\u9700\u8981\u62c9\u53d6\u8fdc\u7a0b\u5e93\u3002</p> <p>\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u62c9\u53d6\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u514b\u9686\u8fdc\u7a0b\u5e93\u3002</p> <pre><code>git clone &lt;remote repository URL&gt;\n</code></pre> <p>\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u6b21\u62c9\u53d6\uff0c\u5c31\u662f\u62c9\u53d6\u8fdc\u7a0b\u5e93\u7684\u66f4\u65b0\u3002</p> <pre><code>git pull\n</code></pre> <p>\u7136\u540e\u6784\u5efa\u7f51\u7ad9\u3002</p> <pre><code>mkdocs build\n</code></pre> <p>\u6700\u540e\u6302\u8f7d\u5230nginx\u3002 \u8fd9\u4e00\u6b65\u53c2\u8003\u7b2c\u4e00\u79cd\u65b9\u6cd5\u3002</p>"},{"location":"zh/PROJECT/TECH-BLOG/mkdocs_and_material/#_12","title":"\u7ed3\u8bed","text":"<p>\u81f3\u6b64\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u4e00\u4e2a\u7b80\u6d01\u3001\u6613\u4e8e\u7ef4\u62a4\u7684\u6280\u672f\u535a\u5ba2\u7684\u642d\u5efa\u3002Enjoy it!</p>"},{"location":"zh/RESEARCH/research/","title":"\u7814\u7a76","text":""},{"location":"zh/SHM/shm/","title":"\u7ed3\u6784\u5065\u5eb7\u76d1\u6d4b","text":"<ul> <li> <p> NSEL \u62a5\u544a\u7cfb\u5217</p> <p>Newmark Structural Engineering Laboratory (NSEL) \u62a5\u544a\u7cfb\u5217</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"}]}